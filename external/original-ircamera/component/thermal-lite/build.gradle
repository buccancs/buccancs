plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
}

kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}

android {
    namespace = "com.example.thermal_lite"
    compileSdk rootProject.ext.android.compileSdk

    defaultConfig {
        minSdk rootProject.ext.android.minSdk
        targetSdk rootProject.ext.android.targetSdk

        consumerProguardFiles "consumer-rules.pro"
        buildConfigField "String", "VERSION_NAME", "\"$rootProject.ext.android.versionName\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
    buildFeatures{
        dataBinding = true
    }

    flavorDimensions 'app'
    productFlavors {
        dev {
            dimension 'app'
        }
        beta {
            dimension 'app'
        }
        prod {
            dimension 'app'
        }
        prodTopdon {
            dimension 'app'
        }
        insideChina {
            dimension 'app'
        }
        prodTopdonInsideChina {
            dimension 'app'
        }
    }
}

dependencies {
    implementation(name: 'libusbdualsdk_1.3.4_2406271906_standard', ext: 'aar')

    implementation project(':libapp')
    implementation project(':libcom')
    implementation project(':libir')
    implementation project(':libmenu')
    implementation project(':libui')
    implementation project(':component:pseudo')
    implementation project(':component:thermal-ir')

    kapt Deps.arouter_compiler
    api(project(":LocalRepo:libac020"))
    api(project(":LocalRepo:libirutils"))
    api(project(":LocalRepo:libcommon"))
    api(project(":component:CommonComponent"))
    implementation(Deps.multidex)
    implementation(Deps.material)

    api Deps.compass_sense
    api Deps.compass_core

}