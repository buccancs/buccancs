buildscript {
    repositories {
        maven {
            url 'https://maven.aliyun.com/repository/gradle-plugin'
        }
        maven {
            url 'https://maven.aliyun.com/repository/central'
        }
        maven {
            url 'https://maven.aliyun.com/repository/public'
        }
        maven {
            url 'https://maven.aliyun.com/repository/google'
        }
        google()
        mavenCentral()
        maven {
            url 'https://www.jitpack.io'
        }
        maven {
            url 'https://developer.huawei.com/repo/'
        }
        maven {
            url "https://maven.google.com"
        }
        maven {
            url 'https://repo1.maven.org/maven2/'
        }
        maven {
            url 'https://maven.zohodl.com'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:8.7.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:2.1.0"
        classpath "org.jetbrains.kotlin:compose-compiler-gradle-plugin:2.1.0"
        classpath 'com.huawei.agconnect:agcp:1.9.1.301'
    }
}

apply from: "depend.gradle"

task clean(
        type: Delete
) {
    delete rootProject.buildDir
}

subprojects { subproject ->
    afterEvaluate { evaluatedProject ->
        def androidExt = evaluatedProject.extensions.findByName("android")
        if (androidExt == null) {
            return
        }

        def androidConfig = rootProject.ext.android

        if (androidExt.hasProperty("compileSdk")) {
            androidExt.compileSdk = androidConfig.compileSdk as Integer
        }

        def defaultConfig = androidExt.defaultConfig
        if (defaultConfig != null) {
            defaultConfig.minSdk = androidConfig.minSdk as Integer
            if (defaultConfig.hasProperty("targetSdk")) {
                defaultConfig.targetSdk = androidConfig.targetSdk as Integer
            }
        }

        def compileOptions = androidExt.compileOptions
        if (compileOptions != null) {
            compileOptions.sourceCompatibility = JavaVersion.VERSION_21
            compileOptions.targetCompatibility = JavaVersion.VERSION_21
        }

        androidExt.buildTypes.each { buildType ->
            if (buildType.name == "release") {
                buildType.proguardFiles(
                        androidExt.getDefaultProguardFile('proguard-android-optimize.txt'),
                        'proguard-rules.pro'
                )
            } else if (buildType.name == "debug") {
                buildType.proguardFiles(
                        androidExt.getDefaultProguardFile('proguard-android.txt'),
                        'proguard-rules.pro'
                )
            }
        }

        evaluatedProject.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
            it.kotlinOptions.jvmTarget = '21'
        }
    }
}
