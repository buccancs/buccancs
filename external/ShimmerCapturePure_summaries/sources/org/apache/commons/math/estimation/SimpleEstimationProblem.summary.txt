// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/org/apache/commons/math/estimation/SimpleEstimationProblem.java
// Size: 1720 bytes
// Modified: 2025-10-21 16:32:03.798440500 +0100

package org.apache.commons.math.estimation;

import java.util.ArrayList;
import java.util.List;

/* JADX WARN: Classes with same name are omitted:
  classes5.dex
 */
@Deprecated
/* loaded from: ShimmerCapture_1.3.1_APKPure.apk:libs/commons-math-2.2.jar:org/apache/commons/math/estimation/SimpleEstimationProblem.class */
public class SimpleEstimationProblem implements EstimationProblem {
    private final List<EstimatedParameter> parameters = new ArrayList();
    private final List<WeightedMeasurement> measurements = new ArrayList();

    @Override // org.apache.commons.math.estimation.EstimationProblem
    public EstimatedParameter[] getAllParameters() {
        return (EstimatedParameter[]) this.parameters.toArray(new EstimatedParameter[this.parameters.size()]);
    }

    @Override // org.apache.commons.math.estimation.EstimationProblem
    public EstimatedParameter[] getUnboundParameters() {
        List<EstimatedParameter> unbound = new ArrayList<>(this.parameters.size());
        for (EstimatedParameter p : this.parameters) {
            if (!p.isBound()) {
                unbound.add(p);
            }
        }
        return (EstimatedParameter[]) unbound.toArray(new EstimatedParameter[unbound.size()]);
    }

    @Override // org.apache.commons.math.estimation.EstimationProblem
    public WeightedMeasurement[] getMeasurements() {
        return (WeightedMeasurement[]) this.measurements.toArray(new WeightedMeasurement[this.measurements.size()]);
    }

    protected void addParameter(EstimatedParameter p) {
        this.parameters.add(p);
    }

    protected void addMeasurement(WeightedMeasurement m) {
        this.measurements.add(m);
    }
}
