// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/org/apache/commons/math/genetics/OnePointCrossover.java
// Size: 1944 bytes
// Modified: 2025-10-21 16:32:06.943521000 +0100

package org.apache.commons.math.genetics;

import java.util.ArrayList;
import java.util.List;

/* JADX WARN: Classes with same name are omitted:
  classes5.dex
 */
/* loaded from: ShimmerCapture_1.3.1_APKPure.apk:libs/commons-math-2.2.jar:org/apache/commons/math/genetics/OnePointCrossover.class */
public class OnePointCrossover<T> implements CrossoverPolicy {
    @Override // org.apache.commons.math.genetics.CrossoverPolicy
    public ChromosomePair crossover(Chromosome first, Chromosome second) {
        if (!(first instanceof AbstractListChromosome) || !(second instanceof AbstractListChromosome)) {
            throw new IllegalArgumentException("One point crossover works on FixedLengthChromosomes only.");
        }
        return crossover((AbstractListChromosome) first, (AbstractListChromosome) second);
    }

    private ChromosomePair crossover(AbstractListChromosome<T> first, AbstractListChromosome<T> second) {
        int length = first.getLength();
        if (length != second.getLength()) {
            throw new IllegalArgumentException("Both chromosomes must have same lengths.");
        }
        List<T> parent1Rep = first.getRepresentation();
        List<T> parent2Rep = second.getRepresentation();
        ArrayList<T> child1Rep = new ArrayList<>(first.getLength());
        ArrayList<T> child2Rep = new ArrayList<>(second.getLength());
        int crossoverIndex = 1 + GeneticAlgorithm.getRandomGenerator().nextInt(length - 2);
        for (int i = 0; i < crossoverIndex; i++) {
            child1Rep.add(parent1Rep.get(i));
            child2Rep.add(parent2Rep.get(i));
        }
        for (int i2 = crossoverIndex; i2 < length; i2++) {
            child1Rep.add(parent2Rep.get(i2));
            child2Rep.add(parent1Rep.get(i2));
        }
        return new ChromosomePair(first.newFixedLengthChromosome(child1Rep), second.newFixedLengthChromosome(child2Rep));
    }
}
