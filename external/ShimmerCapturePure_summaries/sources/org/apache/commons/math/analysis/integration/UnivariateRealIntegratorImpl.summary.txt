// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.java
// Size: 4006 bytes
// Modified: 2025-10-21 16:32:06.762959700 +0100

package org.apache.commons.math.analysis.integration;

import org.apache.commons.math.ConvergingAlgorithmImpl;
import org.apache.commons.math.MathRuntimeException;
import org.apache.commons.math.analysis.UnivariateRealFunction;
import org.apache.commons.math.exception.NullArgumentException;
import org.apache.commons.math.exception.util.LocalizedFormats;

/* JADX WARN: Classes with same name are omitted:
  classes5.dex
 */
/* loaded from: ShimmerCapture_1.3.1_APKPure.apk:libs/commons-math-2.2.jar:org/apache/commons/math/analysis/integration/UnivariateRealIntegratorImpl.class */
public abstract class UnivariateRealIntegratorImpl extends ConvergingAlgorithmImpl implements UnivariateRealIntegrator {
    private static final long serialVersionUID = 6248808456637441533L;
    protected int minimalIterationCount;
    protected int defaultMinimalIterationCount;
    protected boolean resultComputed;
    protected double result;

    @Deprecated
    protected UnivariateRealFunction f;

    @Deprecated
    protected UnivariateRealIntegratorImpl(UnivariateRealFunction f, int defaultMaximalIterationCount) throws IllegalArgumentException {
        super(defaultMaximalIterationCount, 1.0E-15d);
        this.resultComputed = false;
        if (f == null) {
            throw new NullArgumentException(LocalizedFormats.FUNCTION);
        }
        this.f = f;
        setRelativeAccuracy(1.0E-6d);
        this.defaultMinimalIterationCount = 3;
        this.minimalIterationCount = this.defaultMinimalIterationCount;
        verifyIterationCount();
    }

    protected UnivariateRealIntegratorImpl(int defaultMaximalIterationCount) throws IllegalArgumentException {
        super(defaultMaximalIterationCount, 1.0E-15d);
        this.resultComputed = false;
        setRelativeAccuracy(1.0E-6d);
        this.defaultMinimalIterationCount = 3;
        this.minimalIterationCount = this.defaultMinimalIterationCount;
        verifyIterationCount();
    }

    @Override // org.apache.commons.math.analysis.integration.UnivariateRealIntegrator
    public double getResult() throws IllegalStateException {
        if (this.resultComputed) {
            return this.result;
        }
        throw MathRuntimeException.createIllegalStateException(LocalizedFormats.NO_RESULT_AVAILABLE, new Object[0]);
    }

    protected final void setResult(double newResult, int iterationCount) {
        this.result = newResult;
        this.iterationCount = iterationCount;
        this.resultComputed = true;
    }

    protected final void clearResult() {
        this.iterationCount = 0;
        this.resultComputed = false;
    }

    @Override // org.apache.commons.math.analysis.integration.UnivariateRealIntegrator
    public void setMinimalIterationCount(int count) {
        this.minimalIterationCount = count;
    }

    @Override // org.apache.commons.math.analysis.integration.UnivariateRealIntegrator
    public int getMinimalIterationCount() {
        return this.minimalIterationCount;
    }

    @Override // org.apache.commons.math.analysis.integration.UnivariateRealIntegrator
    public void resetMinimalIterationCount() {
        this.minimalIterationCount = this.defaultMinimalIterationCount;
    }

    protected void verifyInterval(double lower, double upper) throws IllegalArgumentException {
        if (lower >= upper) {
            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.ENDPOINTS_NOT_AN_INTERVAL, Double.valueOf(lower), Double.valueOf(upper));
        }
    }

    protected void verifyIterationCount() throws IllegalArgumentException {
        if (this.minimalIterationCount <= 0 || this.maximalIterationCount <= this.minimalIterationCount) {
            throw MathRuntimeException.createIllegalArgumentException(LocalizedFormats.INVALID_ITERATIONS_LIMITS, Integer.valueOf(this.minimalIterationCount), Integer.valueOf(this.maximalIterationCount));
        }
    }
}
