// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.java
// Size: 2630 bytes
// Modified: 2025-10-21 16:32:10.375621800 +0100

package org.apache.commons.math.stat.regression;

import org.apache.commons.math.linear.Array2DRowRealMatrix;
import org.apache.commons.math.linear.InvalidMatrixException;
import org.apache.commons.math.linear.LUDecompositionImpl;
import org.apache.commons.math.linear.RealMatrix;
import org.apache.commons.math.linear.RealVector;

/* JADX WARN: Classes with same name are omitted:
  classes5.dex
 */
/* loaded from: ShimmerCapture_1.3.1_APKPure.apk:libs/commons-math-2.2.jar:org/apache/commons/math/stat/regression/GLSMultipleLinearRegression.class */
public class GLSMultipleLinearRegression extends AbstractMultipleLinearRegression {
    private RealMatrix Omega;
    private RealMatrix OmegaInverse;

    public void newSampleData(double[] y, double[][] x, double[][] covariance) {
        validateSampleData(x, y);
        newYSampleData(y);
        newXSampleData(x);
        validateCovarianceData(x, covariance);
        newCovarianceData(covariance);
    }

    protected void newCovarianceData(double[][] omega) {
        this.Omega = new Array2DRowRealMatrix(omega);
        this.OmegaInverse = null;
    }

    protected RealMatrix getOmegaInverse() {
        if (this.OmegaInverse == null) {
            this.OmegaInverse = new LUDecompositionImpl(this.Omega).getSolver().getInverse();
        }
        return this.OmegaInverse;
    }

    @Override // org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression
    protected RealVector calculateBeta() throws InvalidMatrixException, IllegalArgumentException {
        RealMatrix OI = getOmegaInverse();
        RealMatrix XT = this.X.transpose();
        RealMatrix XTOIX = XT.multiply(OI).multiply(this.X);
        RealMatrix inverse = new LUDecompositionImpl(XTOIX).getSolver().getInverse();
        return inverse.multiply(XT).multiply(OI).operate(this.Y);
    }

    @Override // org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression
    protected RealMatrix calculateBetaVariance() throws IllegalArgumentException {
        RealMatrix OI = getOmegaInverse();
        RealMatrix XTOIX = this.X.transpose().multiply(OI).multiply(this.X);
        return new LUDecompositionImpl(XTOIX).getSolver().getInverse();
    }

    @Override // org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression
    protected double calculateErrorVariance() {
        RealVector residuals = calculateResiduals();
        double t = residuals.dotProduct(getOmegaInverse().operate(residuals));
        return t / (this.X.getRowDimension() - this.X.getColumnDimension());
    }
}
