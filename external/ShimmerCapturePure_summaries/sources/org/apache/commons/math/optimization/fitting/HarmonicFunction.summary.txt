// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/org/apache/commons/math/optimization/fitting/HarmonicFunction.java
// Size: 1371 bytes
// Modified: 2025-10-21 16:32:03.280970800 +0100

package org.apache.commons.math.optimization.fitting;

import org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction;
import org.apache.commons.math.util.FastMath;

/* JADX WARN: Classes with same name are omitted:
  classes5.dex
 */
/* loaded from: ShimmerCapture_1.3.1_APKPure.apk:libs/commons-math-2.2.jar:org/apache/commons/math/optimization/fitting/HarmonicFunction.class */
public class HarmonicFunction implements DifferentiableUnivariateRealFunction {
    private final double a;
    private final double omega;
    private final double phi;

    public HarmonicFunction(double a, double omega, double phi) {
        this.a = a;
        this.omega = omega;
        this.phi = phi;
    }

    @Override // org.apache.commons.math.analysis.UnivariateRealFunction
    public double value(double x) {
        return this.a * FastMath.cos((this.omega * x) + this.phi);
    }

    @Override // org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction
    public HarmonicFunction derivative() {
        return new HarmonicFunction(this.a * this.omega, this.omega, this.phi + 1.5707963267948966d);
    }

    public double getAmplitude() {
        return this.a;
    }

    public double getPulsation() {
        return this.omega;
    }

    public double getPhase() {
        return this.phi;
    }
}
