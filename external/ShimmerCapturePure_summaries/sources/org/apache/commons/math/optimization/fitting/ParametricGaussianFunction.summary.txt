// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.java
// Size: 2166 bytes
// Modified: 2025-10-21 16:32:06.184337100 +0100

package org.apache.commons.math.optimization.fitting;

import java.io.Serializable;
import org.apache.commons.math.exception.DimensionMismatchException;
import org.apache.commons.math.exception.NullArgumentException;
import org.apache.commons.math.exception.ZeroException;
import org.apache.commons.math.exception.util.LocalizedFormats;

/* JADX WARN: Classes with same name are omitted:
  classes5.dex
 */
/* loaded from: ShimmerCapture_1.3.1_APKPure.apk:libs/commons-math-2.2.jar:org/apache/commons/math/optimization/fitting/ParametricGaussianFunction.class */
public class ParametricGaussianFunction implements ParametricRealFunction, Serializable {
    private static final long serialVersionUID = -3875578602503903233L;

    @Override // org.apache.commons.math.optimization.fitting.ParametricRealFunction
    public double value(double x, double[] parameters) throws ZeroException {
        validateParameters(parameters);
        double a = parameters[0];
        double b = parameters[1];
        double c = parameters[2];
        double d = parameters[3];
        double xMc = x - c;
        return a + (b * Math.exp(((-xMc) * xMc) / (2.0d * (d * d))));
    }

    @Override // org.apache.commons.math.optimization.fitting.ParametricRealFunction
    public double[] gradient(double x, double[] parameters) throws ZeroException {
        validateParameters(parameters);
        double b = parameters[1];
        double c = parameters[2];
        double d = parameters[3];
        double xMc = x - c;
        double d2 = d * d;
        double exp = Math.exp(((-xMc) * xMc) / (2.0d * d2));
        double f = ((b * exp) * xMc) / d2;
        return new double[]{1.0d, exp, f, (f * xMc) / d};
    }

    private void validateParameters(double[] parameters) throws ZeroException {
        if (parameters == null) {
            throw new NullArgumentException(LocalizedFormats.INPUT_ARRAY);
        }
        if (parameters.length != 4) {
            throw new DimensionMismatchException(4, parameters.length);
        }
        if (parameters[3] == 0.0d) {
            throw new ZeroException();
        }
    }
}
