// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.java
// Size: 2839 bytes
// Modified: 2025-10-21 16:32:04.227152300 +0100

package org.apache.commons.math.ode.nonstiff;

import org.apache.commons.math.ode.DerivativeException;
import org.apache.commons.math.ode.sampling.StepInterpolator;

/* JADX WARN: Classes with same name are omitted:
  classes5.dex
 */
/* loaded from: ShimmerCapture_1.3.1_APKPure.apk:libs/commons-math-2.2.jar:org/apache/commons/math/ode/nonstiff/HighamHall54StepInterpolator.class */
class HighamHall54StepInterpolator extends RungeKuttaStepInterpolator {
    private static final long serialVersionUID = -3583240427587318654L;

    public HighamHall54StepInterpolator() {
    }

    public HighamHall54StepInterpolator(HighamHall54StepInterpolator interpolator) {
        super(interpolator);
    }

    @Override // org.apache.commons.math.ode.sampling.AbstractStepInterpolator
    protected StepInterpolator doCopy() {
        return new HighamHall54StepInterpolator(this);
    }

    @Override // org.apache.commons.math.ode.sampling.AbstractStepInterpolator
    protected void computeInterpolatedStateAndDerivatives(double theta, double oneMinusThetaH) throws DerivativeException {
        double theta2 = theta * theta;
        double b0 = this.h * ((-0.08333333333333333d) + (theta * (1.0d + (theta * ((-3.75d) + (theta * (5.333333333333333d + ((theta * (-5.0d)) / 2.0d))))))));
        double b2 = this.h * ((-0.84375d) + (theta2 * (14.34375d + (theta * ((-30.375d) + ((theta * 135.0d) / 8.0d))))));
        double b3 = this.h * (1.3333333333333333d + (theta2 * ((-22.0d) + (theta * (50.666666666666664d + (theta * (-30.0d)))))));
        double b4 = this.h * ((-1.3020833333333333d) + (theta2 * (11.71875d + (theta * ((-26.041666666666668d) + ((theta * 125.0d) / 8.0d))))));
        double b5 = this.h * ((-0.10416666666666667d) + (theta2 * ((-0.3125d) + ((theta * 5.0d) / 12.0d))));
        double bDot0 = 1.0d + (theta * ((-7.5d) + (theta * (16.0d - (10.0d * theta)))));
        double bDot2 = theta * (28.6875d + (theta * ((-91.125d) + (67.5d * theta))));
        double bDot3 = theta * ((-44.0d) + (theta * (152.0d - (120.0d * theta))));
        double bDot4 = theta * (23.4375d + (theta * ((-78.125d) + (62.5d * theta))));
        double bDot5 = ((theta * 5.0d) / 8.0d) * ((2.0d * theta) - 1.0d);
        for (int i = 0; i < this.interpolatedState.length; i++) {
            double yDot0 = this.yDotK[0][i];
            double yDot2 = this.yDotK[2][i];
            double yDot3 = this.yDotK[3][i];
            double yDot4 = this.yDotK[4][i];
            double yDot5 = this.yDotK[5][i];
            this.interpolatedState[i] = this.currentState[i] + (b0 * yDot0) + (b2 * yDot2) + (b3 * yDot3) + (b4 * yDot4) + (b5 * yDot5);
            this.interpolatedDerivatives[i] = (bDot0 * yDot0) + (bDot2 * yDot2) + (bDot3 * yDot3) + (bDot4 * yDot4) + (bDot5 * yDot5);
        }
    }
}
