// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/org/apache/commons/math3/ode/nonstiff/MidpointStepInterpolator.java
// Size: 1944 bytes
// Modified: 2025-10-21 16:32:04.771009100 +0100

package org.apache.commons.math3.ode.nonstiff;

import org.apache.commons.math3.ode.sampling.StepInterpolator;

/* loaded from: classes5.dex */
class MidpointStepInterpolator extends RungeKuttaStepInterpolator {
    private static final long serialVersionUID = 20111120;

    public MidpointStepInterpolator() {
    }

    MidpointStepInterpolator(MidpointStepInterpolator midpointStepInterpolator) {
        super(midpointStepInterpolator);
    }

    @Override // org.apache.commons.math3.ode.sampling.AbstractStepInterpolator
    protected StepInterpolator doCopy() {
        return new MidpointStepInterpolator(this);
    }

    @Override // org.apache.commons.math3.ode.sampling.AbstractStepInterpolator
    protected void computeInterpolatedStateAndDerivatives(double d, double d2) {
        double d3 = 2.0d * d;
        double d4 = 1.0d - d3;
        char c = 1;
        char c2 = 0;
        if (this.previousState != null && d <= 0.5d) {
            double d5 = d * d2;
            double d6 = d * d * this.h;
            int i = 0;
            while (i < this.interpolatedState.length) {
                double d7 = this.yDotK[0][i];
                double d8 = this.yDotK[c][i];
                this.interpolatedState[i] = this.previousState[i] + (d5 * d7) + (d6 * d8);
                this.interpolatedDerivatives[i] = (d7 * d4) + (d8 * d3);
                i++;
                c = 1;
            }
            return;
        }
        double d9 = d2 * d;
        double d10 = (d + 1.0d) * d2;
        int i2 = 0;
        while (i2 < this.interpolatedState.length) {
            double d11 = this.yDotK[c2][i2];
            double d12 = this.yDotK[1][i2];
            this.interpolatedState[i2] = (this.currentState[i2] + (d9 * d11)) - (d10 * d12);
            this.interpolatedDerivatives[i2] = (d11 * d4) + (d12 * d3);
            i2++;
            c2 = 0;
        }
    }
}
