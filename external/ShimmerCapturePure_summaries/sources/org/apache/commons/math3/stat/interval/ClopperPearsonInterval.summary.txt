// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/org/apache/commons/math3/stat/interval/ClopperPearsonInterval.java
// Size: 1237 bytes
// Modified: 2025-10-21 16:32:09.561380100 +0100

package org.apache.commons.math3.stat.interval;

import org.apache.commons.math3.distribution.FDistribution;

/* loaded from: classes5.dex */
public class ClopperPearsonInterval implements BinomialConfidenceInterval {
    @Override // org.apache.commons.math3.stat.interval.BinomialConfidenceInterval
    public ConfidenceInterval createInterval(int i, int i2, double d) {
        double d2;
        double d3;
        IntervalUtils.checkParameters(i, i2, d);
        int i3 = i - i2;
        int i4 = i3 + 1;
        double d4 = 1.0d - ((1.0d - d) / 2.0d);
        double dInverseCumulativeProbability = new FDistribution(i4 * 2, i2 * 2).inverseCumulativeProbability(d4);
        if (i2 > 0) {
            double d5 = i2;
            d2 = d5 / ((i4 * dInverseCumulativeProbability) + d5);
        } else {
            d2 = 0.0d;
        }
        int i5 = i2 + 1;
        double dInverseCumulativeProbability2 = new FDistribution(i5 * 2, i3 * 2).inverseCumulativeProbability(d4);
        if (i2 > 0) {
            double d6 = i5 * dInverseCumulativeProbability2;
            d3 = d6 / (i3 + d6);
        } else {
            d3 = 0.0d;
        }
        return new ConfidenceInterval(d2, d3, d);
    }
}
