// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/io/grpc/xds/shaded/io/envoyproxy/envoy/type/FractionalPercent.java
// Size: 26085 bytes
// Modified: 2025-10-21 16:32:02.763013300 +0100

package io.grpc.xds.shaded.io.envoyproxy.envoy.type;

import com.google.protobuf.AbstractParser;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.Descriptors;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageV3;
import com.google.protobuf.Internal;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.Message;
import com.google.protobuf.Parser;
import com.google.protobuf.ProtocolMessageEnum;
import com.google.protobuf.UninitializedMessageException;
import com.google.protobuf.UnknownFieldSet;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;

/* loaded from: classes4.dex */
public final class FractionalPercent extends GeneratedMessageV3 implements FractionalPercentOrBuilder {
    public static final int DENOMINATOR_FIELD_NUMBER = 2;
    public static final int NUMERATOR_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0;
    private int denominator_;
    private byte memoizedIsInitialized;
    private int numerator_;
    private static final FractionalPercent DEFAULT_INSTANCE = new FractionalPercent();
    private static final Parser<FractionalPercent> PARSER = new AbstractParser<FractionalPercent>() { // from class: io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercent.1
        /* renamed from: parsePartialFrom, reason: merged with bridge method [inline-methods] */
        public FractionalPercent m32861parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return new FractionalPercent(codedInputStream, extensionRegistryLite);
        }
    };

    public static FractionalPercent getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    public static Parser<FractionalPercent> parser() {
        return PARSER;
    }

    /* renamed from: getDefaultInstanceForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public FractionalPercent m32854getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

    @Override // io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercentOrBuilder
    public int getDenominatorValue() {
        return this.denominator_;
    }

    @Override // io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercentOrBuilder
    public int getNumerator() {
        return this.numerator_;
    }

    public Parser<FractionalPercent> getParserForType() {
        return PARSER;
    }

    public final boolean isInitialized() {
        byte b = this.memoizedIsInitialized;
        if (b == 1) {
            return true;
        }
        if (b == 0) {
            return false;
        }
        this.memoizedIsInitialized = (byte) 1;
        return true;
    }

    private FractionalPercent(GeneratedMessageV3.Builder<?> builder) {
        super(builder);
        this.memoizedIsInitialized = (byte) -1;
    }

    private FractionalPercent() {
        this.memoizedIsInitialized = (byte) -1;
        this.denominator_ = 0;
    }

    protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unusedPrivateParameter) {
        return new FractionalPercent();
    }

    public final UnknownFieldSet getUnknownFields() {
        return this.unknownFields;
    }

    private FractionalPercent(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        this();
        extensionRegistryLite.getClass();
        UnknownFieldSet.Builder builderNewBuilder = UnknownFieldSet.newBuilder();
        boolean z = false;
        while (!z) {
            try {
                try {
                    try {
                        int tag = codedInputStream.readTag();
                        if (tag != 0) {
                            if (tag == 8) {
                                this.numerator_ = codedInputStream.readUInt32();
                            } else if (tag == 16) {
                                this.denominator_ = codedInputStream.readEnum();
                            } else if (!parseUnknownField(codedInputStream, builderNewBuilder, extensionRegistryLite, tag)) {
                            }
                        }
                        z = true;
                    } catch (IOException e) {
                        throw new InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                    }
                } catch (InvalidProtocolBufferException e2) {
                    throw e2.setUnfinishedMessage(this);
                }
            } finally {
                this.unknownFields = builderNewBuilder.build();
                makeExtensionsImmutable();
            }
        }
    }

    public static final Descriptors.Descriptor getDescriptor() {
        return PercentProto.internal_static_envoy_type_FractionalPercent_descriptor;
    }

    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return PercentProto.internal_static_envoy_type_FractionalPercent_fieldAccessorTable.ensureFieldAccessorsInitialized(FractionalPercent.class, Builder.class);
    }

    public enum DenominatorType implements ProtocolMessageEnum {
        HUNDRED(0),
        TEN_THOUSAND(1),
        MILLION(2),
        UNRECOGNIZED(-1);

        public static final int HUNDRED_VALUE = 0;
        public static final int MILLION_VALUE = 2;
        public static final int TEN_THOUSAND_VALUE = 1;
        private final int value;
        private static final Internal.EnumLiteMap<DenominatorType> internalValueMap = new Internal.EnumLiteMap<DenominatorType>() { // from class: io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercent.DenominatorType.1
            public DenominatorType findValueByNumber(int i) {
                return DenominatorType.forNumber(i);
            }
        };
        private static final DenominatorType[] VALUES = values();

        public static DenominatorType forNumber(int i) {
            if (i == 0) {
                return HUNDRED;
            }
            if (i == 1) {
                return TEN_THOUSAND;
            }
            if (i != 2) {
                return null;
            }
            return MILLION;
        }

        public static Internal.EnumLiteMap<DenominatorType> internalGetValueMap() {
            return internalValueMap;
        }

        public final int getNumber() {
            if (this != UNRECOGNIZED) {
                return this.value;
            }
            throw new IllegalArgumentException("Can't get the number of an unknown enum value.");
        }

        @Deprecated
        public static DenominatorType valueOf(int i) {
            return forNumber(i);
        }

        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            if (this == UNRECOGNIZED) {
                throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");
            }
            return (Descriptors.EnumValueDescriptor) getDescriptor().getValues().get(ordinal());
        }

        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor) FractionalPercent.getDescriptor().getEnumTypes().get(0);
        }

        public static DenominatorType valueOf(Descriptors.EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return enumValueDescriptor.getIndex() == -1 ? UNRECOGNIZED : VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        DenominatorType(int i) {
            this.value = i;
        }
    }

    @Override // io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercentOrBuilder
    public DenominatorType getDenominator() {
        DenominatorType denominatorTypeValueOf = DenominatorType.valueOf(this.denominator_);
        return denominatorTypeValueOf == null ? DenominatorType.UNRECOGNIZED : denominatorTypeValueOf;
    }

    public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
        int i = this.numerator_;
        if (i != 0) {
            codedOutputStream.writeUInt32(1, i);
        }
        if (this.denominator_ != DenominatorType.HUNDRED.getNumber()) {
            codedOutputStream.writeEnum(2, this.denominator_);
        }
        this.unknownFields.writeTo(codedOutputStream);
    }

    public int getSerializedSize() {
        int i = this.memoizedSize;
        if (i != -1) {
            return i;
        }
        int i2 = this.numerator_;
        int iComputeUInt32Size = i2 != 0 ? CodedOutputStream.computeUInt32Size(1, i2) : 0;
        if (this.denominator_ != DenominatorType.HUNDRED.getNumber()) {
            iComputeUInt32Size += CodedOutputStream.computeEnumSize(2, this.denominator_);
        }
        int serializedSize = iComputeUInt32Size + this.unknownFields.getSerializedSize();
        this.memoizedSize = serializedSize;
        return serializedSize;
    }

    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof FractionalPercent)) {
            return super.equals(obj);
        }
        FractionalPercent fractionalPercent = (FractionalPercent) obj;
        return getNumerator() == fractionalPercent.getNumerator() && this.denominator_ == fractionalPercent.denominator_ && this.unknownFields.equals(fractionalPercent.unknownFields);
    }

    public int hashCode() {
        if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
        }
        int iHashCode = ((((((((((779 + getDescriptor().hashCode()) * 37) + 1) * 53) + getNumerator()) * 37) + 2) * 53) + this.denominator_) * 29) + this.unknownFields.hashCode();
        this.memoizedHashCode = iHashCode;
        return iHashCode;
    }

    public static FractionalPercent parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
        return (FractionalPercent) PARSER.parseFrom(byteBuffer);
    }

    public static FractionalPercent parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (FractionalPercent) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
    }

    public static FractionalPercent parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
        return (FractionalPercent) PARSER.parseFrom(byteString);
    }

    public static FractionalPercent parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (FractionalPercent) PARSER.parseFrom(byteString, extensionRegistryLite);
    }

    public static FractionalPercent parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
        return (FractionalPercent) PARSER.parseFrom(bArr);
    }

    public static FractionalPercent parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (FractionalPercent) PARSER.parseFrom(bArr, extensionRegistryLite);
    }

    public static FractionalPercent parseFrom(InputStream inputStream) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
    }

    public static FractionalPercent parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
    }

    public static FractionalPercent parseDelimitedFrom(InputStream inputStream) throws IOException {
        return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
    }

    public static FractionalPercent parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
    }

    public static FractionalPercent parseFrom(CodedInputStream codedInputStream) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
    }

    public static FractionalPercent parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
    }

    /* renamed from: newBuilderForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public Builder m32856newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.m32859toBuilder();
    }

    public static Builder newBuilder(FractionalPercent fractionalPercent) {
        return DEFAULT_INSTANCE.m32859toBuilder().mergeFrom(fractionalPercent);
    }

    /* renamed from: toBuilder, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public Builder m32859toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public Builder newBuilderForType(GeneratedMessageV3.BuilderParent builderParent) {
        return new Builder(builderParent);
    }

    public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements FractionalPercentOrBuilder {
        private int denominator_;
        private int numerator_;

        @Override // io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercentOrBuilder
        public int getDenominatorValue() {
            return this.denominator_;
        }

        @Override // io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercentOrBuilder
        public int getNumerator() {
            return this.numerator_;
        }

        public final boolean isInitialized() {
            return true;
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return PercentProto.internal_static_envoy_type_FractionalPercent_descriptor;
        }

        protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return PercentProto.internal_static_envoy_type_FractionalPercent_fieldAccessorTable.ensureFieldAccessorsInitialized(FractionalPercent.class, Builder.class);
        }

        private Builder() {
            this.denominator_ = 0;
            maybeForceBuilderInitialization();
        }

        private Builder(GeneratedMessageV3.BuilderParent builderParent) {
            super(builderParent);
            this.denominator_ = 0;
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            boolean unused = FractionalPercent.alwaysUseFieldBuilders;
        }

        /* renamed from: clear, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m32870clear() {
            super.clear();
            this.numerator_ = 0;
            this.denominator_ = 0;
            return this;
        }

        public Descriptors.Descriptor getDescriptorForType() {
            return PercentProto.internal_static_envoy_type_FractionalPercent_descriptor;
        }

        /* renamed from: getDefaultInstanceForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public FractionalPercent m32883getDefaultInstanceForType() {
            return FractionalPercent.getDefaultInstance();
        }

        /* JADX INFO: Thrown type has an unknown type hierarchy: com.google.protobuf.UninitializedMessageException */
        /* renamed from: build, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public FractionalPercent m32864build() throws UninitializedMessageException {
            FractionalPercent fractionalPercentM32866buildPartial = m32866buildPartial();
            if (fractionalPercentM32866buildPartial.isInitialized()) {
                return fractionalPercentM32866buildPartial;
            }
            throw newUninitializedMessageException(fractionalPercentM32866buildPartial);
        }

        /* renamed from: buildPartial, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public FractionalPercent m32866buildPartial() {
            FractionalPercent fractionalPercent = new FractionalPercent(this);
            fractionalPercent.numerator_ = this.numerator_;
            fractionalPercent.denominator_ = this.denominator_;
            onBuilt();
            return fractionalPercent;
        }

        /* renamed from: clone, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m32882clone() {
            return (Builder) super.clone();
        }

        /* renamed from: setField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m32894setField(Descriptors.FieldDescriptor fieldDescriptor, Object obj) {
            return (Builder) super.setField(fieldDescriptor, obj);
        }

        /* renamed from: clearField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m32872clearField(Descriptors.FieldDescriptor fieldDescriptor) {
            return (Builder) super.clearField(fieldDescriptor);
        }

        /* renamed from: clearOneof, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m32875clearOneof(Descriptors.OneofDescriptor oneofDescriptor) {
            return (Builder) super.clearOneof(oneofDescriptor);
        }

        /* renamed from: setRepeatedField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m32896setRepeatedField(Descriptors.FieldDescriptor fieldDescriptor, int i, Object obj) {
            return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
        }

        /* renamed from: addRepeatedField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m32862addRepeatedField(Descriptors.FieldDescriptor fieldDescriptor, Object obj) {
            return (Builder) super.addRepeatedField(fieldDescriptor, obj);
        }

        /* renamed from: mergeFrom, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m32887mergeFrom(Message message) {
            if (message instanceof FractionalPercent) {
                return mergeFrom((FractionalPercent) message);
            }
            super.mergeFrom(message);
            return this;
        }

        public Builder mergeFrom(FractionalPercent fractionalPercent) {
            if (fractionalPercent == FractionalPercent.getDefaultInstance()) {
                return this;
            }
            if (fractionalPercent.getNumerator() != 0) {
                setNumerator(fractionalPercent.getNumerator());
            }
            if (fractionalPercent.denominator_ != 0) {
                setDenominatorValue(fractionalPercent.getDenominatorValue());
            }
            m32892mergeUnknownFields(fractionalPercent.unknownFields);
            onChanged();
            return this;
        }

        /* JADX WARN: Removed duplicated region for block: B:16:0x0023  */
        /* renamed from: mergeFrom, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        /*
            Code decompiled incorrectly, please refer to instructions dump.
            To view partially-correct add '--show-bad-code' argument
        */
        public io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercent.Builder m32888mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.lang.Throwable {
            /*
                r2 = this;
                r0 = 0
                com.google.protobuf.Parser r1 = io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercent.access$700()     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercent r3 = (io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercent) r3     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                if (r3 == 0) goto L10
                r2.mergeFrom(r3)
            L10:
                return r2
            L11:
                r3 = move-exception
                goto L21
            L13:
                r3 = move-exception
                com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch: java.lang.Throwable -> L11
                io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercent r4 = (io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercent) r4     // Catch: java.lang.Throwable -> L11
                java.io.IOException r3 = r3.unwrapIOException()     // Catch: java.lang.Throwable -> L1f
                throw r3     // Catch: java.lang.Throwable -> L1f
            L1f:
                r3 = move-exception
                r0 = r4
            L21:
                if (r0 == 0) goto L26
                r2.mergeFrom(r0)
            L26:
                throw r3
            */
            throw new UnsupportedOperationException("Method not decompiled: io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercent.Builder.m32888mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercent$Builder");
        }

        public Builder setNumerator(int i) {
            this.numerator_ = i;
            onChanged();
            return this;
        }

        public Builder clearNumerator() {
            this.numerator_ = 0;
            onChanged();
            return this;
        }

        public Builder setDenominatorValue(int i) {
            this.denominator_ = i;
            onChanged();
            return this;
        }

        @Override // io.grpc.xds.shaded.io.envoyproxy.envoy.type.FractionalPercentOrBuilder
        public DenominatorType getDenominator() {
            DenominatorType denominatorTypeValueOf = DenominatorType.valueOf(this.denominator_);
            return denominatorTypeValueOf == null ? DenominatorType.UNRECOGNIZED : denominatorTypeValueOf;
        }

        public Builder setDenominator(DenominatorType denominatorType) {
            denominatorType.getClass();
            this.denominator_ = denominatorType.getNumber();
            onChanged();
            return this;
        }

        public Builder clearDenominator() {
            this.denominator_ = 0;
            onChanged();
            return this;
        }

        /* renamed from: setUnknownFields, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public final Builder m32898setUnknownFields(UnknownFieldSet unknownFieldSet) {
            return (Builder) super.setUnknownFields(unknownFieldSet);
        }

        /* renamed from: mergeUnknownFields, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public final Builder m32892mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
            return (Builder) super.mergeUnknownFields(unknownFieldSet);
        }
    }
}
