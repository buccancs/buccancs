// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/io/grpc/xds/shaded/io/envoyproxy/envoy/config/core/v3/RequestMethod.java
// Size: 3563 bytes
// Modified: 2025-10-21 16:32:04.954761300 +0100

package io.grpc.xds.shaded.io.envoyproxy.envoy.config.core.v3;

import com.google.protobuf.Descriptors;
import com.google.protobuf.Internal;
import com.google.protobuf.ProtocolMessageEnum;

/* loaded from: classes6.dex */
public enum RequestMethod implements ProtocolMessageEnum {
    METHOD_UNSPECIFIED(0),
    GET(1),
    HEAD(2),
    POST(3),
    PUT(4),
    DELETE(5),
    CONNECT(6),
    OPTIONS(7),
    TRACE(8),
    PATCH(9),
    UNRECOGNIZED(-1);

    public static final int CONNECT_VALUE = 6;
    public static final int DELETE_VALUE = 5;
    public static final int GET_VALUE = 1;
    public static final int HEAD_VALUE = 2;
    public static final int METHOD_UNSPECIFIED_VALUE = 0;
    public static final int OPTIONS_VALUE = 7;
    public static final int PATCH_VALUE = 9;
    public static final int POST_VALUE = 3;
    public static final int PUT_VALUE = 4;
    public static final int TRACE_VALUE = 8;
    private final int value;
    private static final Internal.EnumLiteMap<RequestMethod> internalValueMap = new Internal.EnumLiteMap<RequestMethod>() { // from class: io.grpc.xds.shaded.io.envoyproxy.envoy.config.core.v3.RequestMethod.1
        public RequestMethod findValueByNumber(int i) {
            return RequestMethod.forNumber(i);
        }
    };
    private static final RequestMethod[] VALUES = values();

    public static RequestMethod forNumber(int i) {
        switch (i) {
            case 0:
                return METHOD_UNSPECIFIED;
            case 1:
                return GET;
            case 2:
                return HEAD;
            case 3:
                return POST;
            case 4:
                return PUT;
            case 5:
                return DELETE;
            case 6:
                return CONNECT;
            case 7:
                return OPTIONS;
            case 8:
                return TRACE;
            case 9:
                return PATCH;
            default:
                return null;
        }
    }

    public static Internal.EnumLiteMap<RequestMethod> internalGetValueMap() {
        return internalValueMap;
    }

    public final int getNumber() {
        if (this != UNRECOGNIZED) {
            return this.value;
        }
        throw new IllegalArgumentException("Can't get the number of an unknown enum value.");
    }

    @Deprecated
    public static RequestMethod valueOf(int i) {
        return forNumber(i);
    }

    public final Descriptors.EnumValueDescriptor getValueDescriptor() {
        if (this == UNRECOGNIZED) {
            throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");
        }
        return (Descriptors.EnumValueDescriptor) getDescriptor().getValues().get(ordinal());
    }

    public final Descriptors.EnumDescriptor getDescriptorForType() {
        return getDescriptor();
    }

    public static final Descriptors.EnumDescriptor getDescriptor() {
        return (Descriptors.EnumDescriptor) BaseProto.getDescriptor().getEnumTypes().get(1);
    }

    public static RequestMethod valueOf(Descriptors.EnumValueDescriptor enumValueDescriptor) {
        if (enumValueDescriptor.getType() == getDescriptor()) {
            return enumValueDescriptor.getIndex() == -1 ? UNRECOGNIZED : VALUES[enumValueDescriptor.getIndex()];
        }
        throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
    }

    RequestMethod(int i) {
        this.value = i;
    }
}
