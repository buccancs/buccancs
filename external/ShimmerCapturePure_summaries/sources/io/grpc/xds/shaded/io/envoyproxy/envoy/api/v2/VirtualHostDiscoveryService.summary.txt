// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/io/grpc/xds/shaded/io/envoyproxy/envoy/api/v2/VirtualHostDiscoveryService.java
// Size: 7972 bytes
// Modified: 2025-10-21 16:32:06.922463500 +0100

package io.grpc.xds.shaded.io.envoyproxy.envoy.api.v2;

import com.google.protobuf.BlockingRpcChannel;
import com.google.protobuf.BlockingService;
import com.google.protobuf.Descriptors;
import com.google.protobuf.Message;
import com.google.protobuf.RpcCallback;
import com.google.protobuf.RpcChannel;
import com.google.protobuf.RpcController;
import com.google.protobuf.RpcUtil;
import com.google.protobuf.Service;
import com.google.protobuf.ServiceException;

/* loaded from: classes3.dex */
public abstract class VirtualHostDiscoveryService implements Service {

    public interface BlockingInterface {
        DeltaDiscoveryResponse deltaVirtualHosts(RpcController rpcController, DeltaDiscoveryRequest deltaDiscoveryRequest) throws ServiceException;
    }

    public interface Interface {
        void deltaVirtualHosts(RpcController rpcController, DeltaDiscoveryRequest deltaDiscoveryRequest, RpcCallback<DeltaDiscoveryResponse> rpcCallback);
    }

    public abstract void deltaVirtualHosts(RpcController rpcController, DeltaDiscoveryRequest deltaDiscoveryRequest, RpcCallback<DeltaDiscoveryResponse> rpcCallback);

    protected VirtualHostDiscoveryService() {
    }

    public static Service newReflectiveService(final Interface r1) {
        return new VirtualHostDiscoveryService() { // from class: io.grpc.xds.shaded.io.envoyproxy.envoy.api.v2.VirtualHostDiscoveryService.1
            @Override // io.grpc.xds.shaded.io.envoyproxy.envoy.api.v2.VirtualHostDiscoveryService
            public void deltaVirtualHosts(RpcController rpcController, DeltaDiscoveryRequest deltaDiscoveryRequest, RpcCallback<DeltaDiscoveryResponse> rpcCallback) {
                r1.deltaVirtualHosts(rpcController, deltaDiscoveryRequest, rpcCallback);
            }
        };
    }

    public static BlockingService newReflectiveBlockingService(final BlockingInterface blockingInterface) {
        return new BlockingService() { // from class: io.grpc.xds.shaded.io.envoyproxy.envoy.api.v2.VirtualHostDiscoveryService.2
            public final Descriptors.ServiceDescriptor getDescriptorForType() {
                return VirtualHostDiscoveryService.getDescriptor();
            }

            public final Message callBlockingMethod(Descriptors.MethodDescriptor methodDescriptor, RpcController rpcController, Message message) throws ServiceException {
                if (methodDescriptor.getService() != VirtualHostDiscoveryService.getDescriptor()) {
                    throw new IllegalArgumentException("Service.callBlockingMethod() given method descriptor for wrong service type.");
                }
                if (methodDescriptor.getIndex() == 0) {
                    return blockingInterface.deltaVirtualHosts(rpcController, (DeltaDiscoveryRequest) message);
                }
                throw new AssertionError("Can't get here.");
            }

            public final Message getRequestPrototype(Descriptors.MethodDescriptor methodDescriptor) {
                if (methodDescriptor.getService() != VirtualHostDiscoveryService.getDescriptor()) {
                    throw new IllegalArgumentException("Service.getRequestPrototype() given method descriptor for wrong service type.");
                }
                if (methodDescriptor.getIndex() == 0) {
                    return DeltaDiscoveryRequest.getDefaultInstance();
                }
                throw new AssertionError("Can't get here.");
            }

            public final Message getResponsePrototype(Descriptors.MethodDescriptor methodDescriptor) {
                if (methodDescriptor.getService() != VirtualHostDiscoveryService.getDescriptor()) {
                    throw new IllegalArgumentException("Service.getResponsePrototype() given method descriptor for wrong service type.");
                }
                if (methodDescriptor.getIndex() == 0) {
                    return DeltaDiscoveryResponse.getDefaultInstance();
                }
                throw new AssertionError("Can't get here.");
            }
        };
    }

    public static final Descriptors.ServiceDescriptor getDescriptor() {
        return (Descriptors.ServiceDescriptor) RdsProto.getDescriptor().getServices().get(1);
    }

    public final Descriptors.ServiceDescriptor getDescriptorForType() {
        return getDescriptor();
    }

    public final void callMethod(Descriptors.MethodDescriptor methodDescriptor, RpcController rpcController, Message message, RpcCallback<Message> rpcCallback) {
        if (methodDescriptor.getService() != getDescriptor()) {
            throw new IllegalArgumentException("Service.callMethod() given method descriptor for wrong service type.");
        }
        if (methodDescriptor.getIndex() == 0) {
            deltaVirtualHosts(rpcController, (DeltaDiscoveryRequest) message, RpcUtil.specializeCallback(rpcCallback));
            return;
        }
        throw new AssertionError("Can't get here.");
    }

    public final Message getRequestPrototype(Descriptors.MethodDescriptor methodDescriptor) {
        if (methodDescriptor.getService() != getDescriptor()) {
            throw new IllegalArgumentException("Service.getRequestPrototype() given method descriptor for wrong service type.");
        }
        if (methodDescriptor.getIndex() == 0) {
            return DeltaDiscoveryRequest.getDefaultInstance();
        }
        throw new AssertionError("Can't get here.");
    }

    public final Message getResponsePrototype(Descriptors.MethodDescriptor methodDescriptor) {
        if (methodDescriptor.getService() != getDescriptor()) {
            throw new IllegalArgumentException("Service.getResponsePrototype() given method descriptor for wrong service type.");
        }
        if (methodDescriptor.getIndex() == 0) {
            return DeltaDiscoveryResponse.getDefaultInstance();
        }
        throw new AssertionError("Can't get here.");
    }

    public static Stub newStub(RpcChannel rpcChannel) {
        return new Stub(rpcChannel);
    }

    public static final class Stub extends VirtualHostDiscoveryService implements Interface {
        private final RpcChannel channel;

        public RpcChannel getChannel() {
            return this.channel;
        }

        private Stub(RpcChannel rpcChannel) {
            this.channel = rpcChannel;
        }

        @Override // io.grpc.xds.shaded.io.envoyproxy.envoy.api.v2.VirtualHostDiscoveryService
        public void deltaVirtualHosts(RpcController rpcController, DeltaDiscoveryRequest deltaDiscoveryRequest, RpcCallback<DeltaDiscoveryResponse> rpcCallback) {
            this.channel.callMethod((Descriptors.MethodDescriptor) getDescriptor().getMethods().get(0), rpcController, deltaDiscoveryRequest, DeltaDiscoveryResponse.getDefaultInstance(), RpcUtil.generalizeCallback(rpcCallback, DeltaDiscoveryResponse.class, DeltaDiscoveryResponse.getDefaultInstance()));
        }
    }

    public static BlockingInterface newBlockingStub(BlockingRpcChannel blockingRpcChannel) {
        return new BlockingStub(blockingRpcChannel);
    }

    private static final class BlockingStub implements BlockingInterface {
        private final BlockingRpcChannel channel;

        private BlockingStub(BlockingRpcChannel blockingRpcChannel) {
            this.channel = blockingRpcChannel;
        }

        @Override // io.grpc.xds.shaded.io.envoyproxy.envoy.api.v2.VirtualHostDiscoveryService.BlockingInterface
        public DeltaDiscoveryResponse deltaVirtualHosts(RpcController rpcController, DeltaDiscoveryRequest deltaDiscoveryRequest) throws ServiceException {
            return this.channel.callBlockingMethod((Descriptors.MethodDescriptor) VirtualHostDiscoveryService.getDescriptor().getMethods().get(0), rpcController, deltaDiscoveryRequest, DeltaDiscoveryResponse.getDefaultInstance());
        }
    }
}
