// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/io/grpc/channelz/v1/ChannelTrace.java
// Size: 40553 bytes
// Modified: 2025-10-21 16:32:04.458950000 +0100

package io.grpc.channelz.v1;

import com.google.protobuf.AbstractMessageLite;
import com.google.protobuf.AbstractParser;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.Descriptors;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageV3;
import com.google.protobuf.Internal;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.Message;
import com.google.protobuf.Parser;
import com.google.protobuf.RepeatedFieldBuilderV3;
import com.google.protobuf.SingleFieldBuilderV3;
import com.google.protobuf.Timestamp;
import com.google.protobuf.TimestampOrBuilder;
import com.google.protobuf.UninitializedMessageException;
import com.google.protobuf.UnknownFieldSet;
import io.grpc.channelz.v1.ChannelTraceEvent;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

/* loaded from: classes2.dex */
public final class ChannelTrace extends GeneratedMessageV3 implements ChannelTraceOrBuilder {
    public static final int CREATION_TIMESTAMP_FIELD_NUMBER = 2;
    public static final int EVENTS_FIELD_NUMBER = 3;
    public static final int NUM_EVENTS_LOGGED_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0;
    private Timestamp creationTimestamp_;
    private List<ChannelTraceEvent> events_;
    private byte memoizedIsInitialized;
    private long numEventsLogged_;
    private static final ChannelTrace DEFAULT_INSTANCE = new ChannelTrace();
    private static final Parser<ChannelTrace> PARSER = new AbstractParser<ChannelTrace>() { // from class: io.grpc.channelz.v1.ChannelTrace.1
        /* renamed from: parsePartialFrom, reason: merged with bridge method [inline-methods] */
        public ChannelTrace m7677parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return new ChannelTrace(codedInputStream, extensionRegistryLite);
        }
    };

    public static ChannelTrace getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    public static Parser<ChannelTrace> parser() {
        return PARSER;
    }

    /* renamed from: getDefaultInstanceForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public ChannelTrace m7670getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

    @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
    public List<ChannelTraceEvent> getEventsList() {
        return this.events_;
    }

    @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
    public List<? extends ChannelTraceEventOrBuilder> getEventsOrBuilderList() {
        return this.events_;
    }

    @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
    public long getNumEventsLogged() {
        return this.numEventsLogged_;
    }

    public Parser<ChannelTrace> getParserForType() {
        return PARSER;
    }

    @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
    public boolean hasCreationTimestamp() {
        return this.creationTimestamp_ != null;
    }

    public final boolean isInitialized() {
        byte b = this.memoizedIsInitialized;
        if (b == 1) {
            return true;
        }
        if (b == 0) {
            return false;
        }
        this.memoizedIsInitialized = (byte) 1;
        return true;
    }

    private ChannelTrace(GeneratedMessageV3.Builder<?> builder) {
        super(builder);
        this.memoizedIsInitialized = (byte) -1;
    }

    private ChannelTrace() {
        this.memoizedIsInitialized = (byte) -1;
        this.events_ = Collections.emptyList();
    }

    protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unusedPrivateParameter) {
        return new ChannelTrace();
    }

    public final UnknownFieldSet getUnknownFields() {
        return this.unknownFields;
    }

    private ChannelTrace(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        this();
        extensionRegistryLite.getClass();
        UnknownFieldSet.Builder builderNewBuilder = UnknownFieldSet.newBuilder();
        boolean z = false;
        boolean z2 = false;
        while (!z) {
            try {
                try {
                    int tag = codedInputStream.readTag();
                    if (tag != 0) {
                        if (tag == 8) {
                            this.numEventsLogged_ = codedInputStream.readInt64();
                        } else if (tag == 18) {
                            Timestamp timestamp = this.creationTimestamp_;
                            Timestamp.Builder builder = timestamp != null ? timestamp.toBuilder() : null;
                            Timestamp message = codedInputStream.readMessage(Timestamp.parser(), extensionRegistryLite);
                            this.creationTimestamp_ = message;
                            if (builder != null) {
                                builder.mergeFrom(message);
                                this.creationTimestamp_ = builder.buildPartial();
                            }
                        } else if (tag == 26) {
                            if (!(z2 & true)) {
                                this.events_ = new ArrayList();
                                z2 |= true;
                            }
                            this.events_.add(codedInputStream.readMessage(ChannelTraceEvent.parser(), extensionRegistryLite));
                        } else if (!parseUnknownField(codedInputStream, builderNewBuilder, extensionRegistryLite, tag)) {
                        }
                    }
                    z = true;
                } catch (IOException e) {
                    throw new InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } catch (InvalidProtocolBufferException e2) {
                    throw e2.setUnfinishedMessage(this);
                }
            } finally {
                if (z2 & true) {
                    this.events_ = Collections.unmodifiableList(this.events_);
                }
                this.unknownFields = builderNewBuilder.build();
                makeExtensionsImmutable();
            }
        }
    }

    public static final Descriptors.Descriptor getDescriptor() {
        return ChannelzProto.internal_static_grpc_channelz_v1_ChannelTrace_descriptor;
    }

    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return ChannelzProto.internal_static_grpc_channelz_v1_ChannelTrace_fieldAccessorTable.ensureFieldAccessorsInitialized(ChannelTrace.class, Builder.class);
    }

    @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
    public Timestamp getCreationTimestamp() {
        Timestamp timestamp = this.creationTimestamp_;
        return timestamp == null ? Timestamp.getDefaultInstance() : timestamp;
    }

    @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
    public TimestampOrBuilder getCreationTimestampOrBuilder() {
        return getCreationTimestamp();
    }

    @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
    public int getEventsCount() {
        return this.events_.size();
    }

    @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
    public ChannelTraceEvent getEvents(int i) {
        return this.events_.get(i);
    }

    @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
    public ChannelTraceEventOrBuilder getEventsOrBuilder(int i) {
        return this.events_.get(i);
    }

    public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
        long j = this.numEventsLogged_;
        if (j != 0) {
            codedOutputStream.writeInt64(1, j);
        }
        if (this.creationTimestamp_ != null) {
            codedOutputStream.writeMessage(2, getCreationTimestamp());
        }
        for (int i = 0; i < this.events_.size(); i++) {
            codedOutputStream.writeMessage(3, this.events_.get(i));
        }
        this.unknownFields.writeTo(codedOutputStream);
    }

    public int getSerializedSize() {
        int i = this.memoizedSize;
        if (i != -1) {
            return i;
        }
        long j = this.numEventsLogged_;
        int iComputeInt64Size = j != 0 ? CodedOutputStream.computeInt64Size(1, j) : 0;
        if (this.creationTimestamp_ != null) {
            iComputeInt64Size += CodedOutputStream.computeMessageSize(2, getCreationTimestamp());
        }
        for (int i2 = 0; i2 < this.events_.size(); i2++) {
            iComputeInt64Size += CodedOutputStream.computeMessageSize(3, this.events_.get(i2));
        }
        int serializedSize = iComputeInt64Size + this.unknownFields.getSerializedSize();
        this.memoizedSize = serializedSize;
        return serializedSize;
    }

    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof ChannelTrace)) {
            return super.equals(obj);
        }
        ChannelTrace channelTrace = (ChannelTrace) obj;
        if (getNumEventsLogged() == channelTrace.getNumEventsLogged() && hasCreationTimestamp() == channelTrace.hasCreationTimestamp()) {
            return (!hasCreationTimestamp() || getCreationTimestamp().equals(channelTrace.getCreationTimestamp())) && getEventsList().equals(channelTrace.getEventsList()) && this.unknownFields.equals(channelTrace.unknownFields);
        }
        return false;
    }

    public int hashCode() {
        if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
        }
        int iHashCode = ((((779 + getDescriptor().hashCode()) * 37) + 1) * 53) + Internal.hashLong(getNumEventsLogged());
        if (hasCreationTimestamp()) {
            iHashCode = (((iHashCode * 37) + 2) * 53) + getCreationTimestamp().hashCode();
        }
        if (getEventsCount() > 0) {
            iHashCode = (((iHashCode * 37) + 3) * 53) + getEventsList().hashCode();
        }
        int iHashCode2 = (iHashCode * 29) + this.unknownFields.hashCode();
        this.memoizedHashCode = iHashCode2;
        return iHashCode2;
    }

    public static ChannelTrace parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
        return (ChannelTrace) PARSER.parseFrom(byteBuffer);
    }

    public static ChannelTrace parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (ChannelTrace) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
    }

    public static ChannelTrace parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
        return (ChannelTrace) PARSER.parseFrom(byteString);
    }

    public static ChannelTrace parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (ChannelTrace) PARSER.parseFrom(byteString, extensionRegistryLite);
    }

    public static ChannelTrace parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
        return (ChannelTrace) PARSER.parseFrom(bArr);
    }

    public static ChannelTrace parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (ChannelTrace) PARSER.parseFrom(bArr, extensionRegistryLite);
    }

    public static ChannelTrace parseFrom(InputStream inputStream) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
    }

    public static ChannelTrace parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
    }

    public static ChannelTrace parseDelimitedFrom(InputStream inputStream) throws IOException {
        return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
    }

    public static ChannelTrace parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
    }

    public static ChannelTrace parseFrom(CodedInputStream codedInputStream) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
    }

    public static ChannelTrace parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
    }

    /* renamed from: newBuilderForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public Builder m7672newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.m7675toBuilder();
    }

    public static Builder newBuilder(ChannelTrace channelTrace) {
        return DEFAULT_INSTANCE.m7675toBuilder().mergeFrom(channelTrace);
    }

    /* renamed from: toBuilder, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public Builder m7675toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public Builder newBuilderForType(GeneratedMessageV3.BuilderParent builderParent) {
        return new Builder(builderParent);
    }

    public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements ChannelTraceOrBuilder {
        private int bitField0_;
        private SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> creationTimestampBuilder_;
        private Timestamp creationTimestamp_;
        private RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> eventsBuilder_;
        private List<ChannelTraceEvent> events_;
        private long numEventsLogged_;

        @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
        public long getNumEventsLogged() {
            return this.numEventsLogged_;
        }

        @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
        public boolean hasCreationTimestamp() {
            return (this.creationTimestampBuilder_ == null && this.creationTimestamp_ == null) ? false : true;
        }

        public final boolean isInitialized() {
            return true;
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return ChannelzProto.internal_static_grpc_channelz_v1_ChannelTrace_descriptor;
        }

        protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return ChannelzProto.internal_static_grpc_channelz_v1_ChannelTrace_fieldAccessorTable.ensureFieldAccessorsInitialized(ChannelTrace.class, Builder.class);
        }

        private Builder() {
            this.events_ = Collections.emptyList();
            maybeForceBuilderInitialization();
        }

        private Builder(GeneratedMessageV3.BuilderParent builderParent) {
            super(builderParent);
            this.events_ = Collections.emptyList();
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            if (ChannelTrace.alwaysUseFieldBuilders) {
                getEventsFieldBuilder();
            }
        }

        /* renamed from: clear, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7686clear() {
            super.clear();
            this.numEventsLogged_ = 0L;
            if (this.creationTimestampBuilder_ == null) {
                this.creationTimestamp_ = null;
            } else {
                this.creationTimestamp_ = null;
                this.creationTimestampBuilder_ = null;
            }
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                this.events_ = Collections.emptyList();
                this.bitField0_ &= -2;
            } else {
                repeatedFieldBuilderV3.clear();
            }
            return this;
        }

        public Descriptors.Descriptor getDescriptorForType() {
            return ChannelzProto.internal_static_grpc_channelz_v1_ChannelTrace_descriptor;
        }

        /* renamed from: getDefaultInstanceForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public ChannelTrace m7699getDefaultInstanceForType() {
            return ChannelTrace.getDefaultInstance();
        }

        /* JADX INFO: Thrown type has an unknown type hierarchy: com.google.protobuf.UninitializedMessageException */
        /* renamed from: build, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public ChannelTrace m7680build() throws UninitializedMessageException {
            ChannelTrace channelTraceM7682buildPartial = m7682buildPartial();
            if (channelTraceM7682buildPartial.isInitialized()) {
                return channelTraceM7682buildPartial;
            }
            throw newUninitializedMessageException(channelTraceM7682buildPartial);
        }

        /* renamed from: buildPartial, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public ChannelTrace m7682buildPartial() {
            ChannelTrace channelTrace = new ChannelTrace(this);
            channelTrace.numEventsLogged_ = this.numEventsLogged_;
            SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> singleFieldBuilderV3 = this.creationTimestampBuilder_;
            if (singleFieldBuilderV3 == null) {
                channelTrace.creationTimestamp_ = this.creationTimestamp_;
            } else {
                channelTrace.creationTimestamp_ = singleFieldBuilderV3.build();
            }
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                if ((this.bitField0_ & 1) != 0) {
                    this.events_ = Collections.unmodifiableList(this.events_);
                    this.bitField0_ &= -2;
                }
                channelTrace.events_ = this.events_;
            } else {
                channelTrace.events_ = repeatedFieldBuilderV3.build();
            }
            onBuilt();
            return channelTrace;
        }

        /* renamed from: clone, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7698clone() {
            return (Builder) super.clone();
        }

        /* renamed from: setField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7710setField(Descriptors.FieldDescriptor fieldDescriptor, Object obj) {
            return (Builder) super.setField(fieldDescriptor, obj);
        }

        /* renamed from: clearField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7688clearField(Descriptors.FieldDescriptor fieldDescriptor) {
            return (Builder) super.clearField(fieldDescriptor);
        }

        /* renamed from: clearOneof, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7691clearOneof(Descriptors.OneofDescriptor oneofDescriptor) {
            return (Builder) super.clearOneof(oneofDescriptor);
        }

        /* renamed from: setRepeatedField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7712setRepeatedField(Descriptors.FieldDescriptor fieldDescriptor, int i, Object obj) {
            return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
        }

        /* renamed from: addRepeatedField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7678addRepeatedField(Descriptors.FieldDescriptor fieldDescriptor, Object obj) {
            return (Builder) super.addRepeatedField(fieldDescriptor, obj);
        }

        /* renamed from: mergeFrom, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7703mergeFrom(Message message) {
            if (message instanceof ChannelTrace) {
                return mergeFrom((ChannelTrace) message);
            }
            super.mergeFrom(message);
            return this;
        }

        public Builder mergeFrom(ChannelTrace channelTrace) {
            if (channelTrace == ChannelTrace.getDefaultInstance()) {
                return this;
            }
            if (channelTrace.getNumEventsLogged() != 0) {
                setNumEventsLogged(channelTrace.getNumEventsLogged());
            }
            if (channelTrace.hasCreationTimestamp()) {
                mergeCreationTimestamp(channelTrace.getCreationTimestamp());
            }
            if (this.eventsBuilder_ == null) {
                if (!channelTrace.events_.isEmpty()) {
                    if (this.events_.isEmpty()) {
                        this.events_ = channelTrace.events_;
                        this.bitField0_ &= -2;
                    } else {
                        ensureEventsIsMutable();
                        this.events_.addAll(channelTrace.events_);
                    }
                    onChanged();
                }
            } else if (!channelTrace.events_.isEmpty()) {
                if (!this.eventsBuilder_.isEmpty()) {
                    this.eventsBuilder_.addAllMessages(channelTrace.events_);
                } else {
                    this.eventsBuilder_.dispose();
                    this.eventsBuilder_ = null;
                    this.events_ = channelTrace.events_;
                    this.bitField0_ &= -2;
                    this.eventsBuilder_ = ChannelTrace.alwaysUseFieldBuilders ? getEventsFieldBuilder() : null;
                }
            }
            m7708mergeUnknownFields(channelTrace.unknownFields);
            onChanged();
            return this;
        }

        /* JADX WARN: Removed duplicated region for block: B:16:0x0023  */
        /* renamed from: mergeFrom, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        /*
            Code decompiled incorrectly, please refer to instructions dump.
            To view partially-correct add '--show-bad-code' argument
        */
        public io.grpc.channelz.v1.ChannelTrace.Builder m7704mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.lang.Throwable {
            /*
                r2 = this;
                r0 = 0
                com.google.protobuf.Parser r1 = io.grpc.channelz.v1.ChannelTrace.access$900()     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                io.grpc.channelz.v1.ChannelTrace r3 = (io.grpc.channelz.v1.ChannelTrace) r3     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                if (r3 == 0) goto L10
                r2.mergeFrom(r3)
            L10:
                return r2
            L11:
                r3 = move-exception
                goto L21
            L13:
                r3 = move-exception
                com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch: java.lang.Throwable -> L11
                io.grpc.channelz.v1.ChannelTrace r4 = (io.grpc.channelz.v1.ChannelTrace) r4     // Catch: java.lang.Throwable -> L11
                java.io.IOException r3 = r3.unwrapIOException()     // Catch: java.lang.Throwable -> L1f
                throw r3     // Catch: java.lang.Throwable -> L1f
            L1f:
                r3 = move-exception
                r0 = r4
            L21:
                if (r0 == 0) goto L26
                r2.mergeFrom(r0)
            L26:
                throw r3
            */
            throw new UnsupportedOperationException("Method not decompiled: io.grpc.channelz.v1.ChannelTrace.Builder.m7704mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):io.grpc.channelz.v1.ChannelTrace$Builder");
        }

        public Builder setNumEventsLogged(long j) {
            this.numEventsLogged_ = j;
            onChanged();
            return this;
        }

        public Builder clearNumEventsLogged() {
            this.numEventsLogged_ = 0L;
            onChanged();
            return this;
        }

        @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
        public Timestamp getCreationTimestamp() {
            SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> singleFieldBuilderV3 = this.creationTimestampBuilder_;
            if (singleFieldBuilderV3 != null) {
                return singleFieldBuilderV3.getMessage();
            }
            Timestamp timestamp = this.creationTimestamp_;
            return timestamp == null ? Timestamp.getDefaultInstance() : timestamp;
        }

        public Builder setCreationTimestamp(Timestamp timestamp) {
            SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> singleFieldBuilderV3 = this.creationTimestampBuilder_;
            if (singleFieldBuilderV3 == null) {
                timestamp.getClass();
                this.creationTimestamp_ = timestamp;
                onChanged();
            } else {
                singleFieldBuilderV3.setMessage(timestamp);
            }
            return this;
        }

        public Builder setCreationTimestamp(Timestamp.Builder builder) {
            SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> singleFieldBuilderV3 = this.creationTimestampBuilder_;
            if (singleFieldBuilderV3 == null) {
                this.creationTimestamp_ = builder.build();
                onChanged();
            } else {
                singleFieldBuilderV3.setMessage(builder.build());
            }
            return this;
        }

        public Builder mergeCreationTimestamp(Timestamp timestamp) {
            SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> singleFieldBuilderV3 = this.creationTimestampBuilder_;
            if (singleFieldBuilderV3 == null) {
                Timestamp timestamp2 = this.creationTimestamp_;
                if (timestamp2 != null) {
                    this.creationTimestamp_ = Timestamp.newBuilder(timestamp2).mergeFrom(timestamp).buildPartial();
                } else {
                    this.creationTimestamp_ = timestamp;
                }
                onChanged();
            } else {
                singleFieldBuilderV3.mergeFrom(timestamp);
            }
            return this;
        }

        public Builder clearCreationTimestamp() {
            if (this.creationTimestampBuilder_ == null) {
                this.creationTimestamp_ = null;
                onChanged();
            } else {
                this.creationTimestamp_ = null;
                this.creationTimestampBuilder_ = null;
            }
            return this;
        }

        public Timestamp.Builder getCreationTimestampBuilder() {
            onChanged();
            return getCreationTimestampFieldBuilder().getBuilder();
        }

        @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
        public TimestampOrBuilder getCreationTimestampOrBuilder() {
            SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> singleFieldBuilderV3 = this.creationTimestampBuilder_;
            if (singleFieldBuilderV3 != null) {
                return singleFieldBuilderV3.getMessageOrBuilder();
            }
            Timestamp timestamp = this.creationTimestamp_;
            return timestamp == null ? Timestamp.getDefaultInstance() : timestamp;
        }

        private SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> getCreationTimestampFieldBuilder() {
            if (this.creationTimestampBuilder_ == null) {
                this.creationTimestampBuilder_ = new SingleFieldBuilderV3<>(getCreationTimestamp(), getParentForChildren(), isClean());
                this.creationTimestamp_ = null;
            }
            return this.creationTimestampBuilder_;
        }

        private void ensureEventsIsMutable() {
            if ((this.bitField0_ & 1) == 0) {
                this.events_ = new ArrayList(this.events_);
                this.bitField0_ |= 1;
            }
        }

        @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
        public List<ChannelTraceEvent> getEventsList() {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                return Collections.unmodifiableList(this.events_);
            }
            return repeatedFieldBuilderV3.getMessageList();
        }

        @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
        public int getEventsCount() {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                return this.events_.size();
            }
            return repeatedFieldBuilderV3.getCount();
        }

        @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
        public ChannelTraceEvent getEvents(int i) {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                return this.events_.get(i);
            }
            return repeatedFieldBuilderV3.getMessage(i);
        }

        public Builder setEvents(int i, ChannelTraceEvent channelTraceEvent) {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                channelTraceEvent.getClass();
                ensureEventsIsMutable();
                this.events_.set(i, channelTraceEvent);
                onChanged();
            } else {
                repeatedFieldBuilderV3.setMessage(i, channelTraceEvent);
            }
            return this;
        }

        public Builder setEvents(int i, ChannelTraceEvent.Builder builder) {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                ensureEventsIsMutable();
                this.events_.set(i, builder.m7726build());
                onChanged();
            } else {
                repeatedFieldBuilderV3.setMessage(i, builder.m7726build());
            }
            return this;
        }

        public Builder addEvents(ChannelTraceEvent channelTraceEvent) {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                channelTraceEvent.getClass();
                ensureEventsIsMutable();
                this.events_.add(channelTraceEvent);
                onChanged();
            } else {
                repeatedFieldBuilderV3.addMessage(channelTraceEvent);
            }
            return this;
        }

        public Builder addEvents(int i, ChannelTraceEvent channelTraceEvent) {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                channelTraceEvent.getClass();
                ensureEventsIsMutable();
                this.events_.add(i, channelTraceEvent);
                onChanged();
            } else {
                repeatedFieldBuilderV3.addMessage(i, channelTraceEvent);
            }
            return this;
        }

        public Builder addEvents(ChannelTraceEvent.Builder builder) {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                ensureEventsIsMutable();
                this.events_.add(builder.m7726build());
                onChanged();
            } else {
                repeatedFieldBuilderV3.addMessage(builder.m7726build());
            }
            return this;
        }

        public Builder addEvents(int i, ChannelTraceEvent.Builder builder) {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                ensureEventsIsMutable();
                this.events_.add(i, builder.m7726build());
                onChanged();
            } else {
                repeatedFieldBuilderV3.addMessage(i, builder.m7726build());
            }
            return this;
        }

        public Builder addAllEvents(Iterable<? extends ChannelTraceEvent> iterable) {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                ensureEventsIsMutable();
                AbstractMessageLite.Builder.addAll(iterable, this.events_);
                onChanged();
            } else {
                repeatedFieldBuilderV3.addAllMessages(iterable);
            }
            return this;
        }

        public Builder clearEvents() {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                this.events_ = Collections.emptyList();
                this.bitField0_ &= -2;
                onChanged();
            } else {
                repeatedFieldBuilderV3.clear();
            }
            return this;
        }

        public Builder removeEvents(int i) {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                ensureEventsIsMutable();
                this.events_.remove(i);
                onChanged();
            } else {
                repeatedFieldBuilderV3.remove(i);
            }
            return this;
        }

        public ChannelTraceEvent.Builder getEventsBuilder(int i) {
            return getEventsFieldBuilder().getBuilder(i);
        }

        @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
        public ChannelTraceEventOrBuilder getEventsOrBuilder(int i) {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 == null) {
                return this.events_.get(i);
            }
            return (ChannelTraceEventOrBuilder) repeatedFieldBuilderV3.getMessageOrBuilder(i);
        }

        @Override // io.grpc.channelz.v1.ChannelTraceOrBuilder
        public List<? extends ChannelTraceEventOrBuilder> getEventsOrBuilderList() {
            RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> repeatedFieldBuilderV3 = this.eventsBuilder_;
            if (repeatedFieldBuilderV3 != null) {
                return repeatedFieldBuilderV3.getMessageOrBuilderList();
            }
            return Collections.unmodifiableList(this.events_);
        }

        public ChannelTraceEvent.Builder addEventsBuilder() {
            return getEventsFieldBuilder().addBuilder(ChannelTraceEvent.getDefaultInstance());
        }

        public ChannelTraceEvent.Builder addEventsBuilder(int i) {
            return getEventsFieldBuilder().addBuilder(i, ChannelTraceEvent.getDefaultInstance());
        }

        public List<ChannelTraceEvent.Builder> getEventsBuilderList() {
            return getEventsFieldBuilder().getBuilderList();
        }

        private RepeatedFieldBuilderV3<ChannelTraceEvent, ChannelTraceEvent.Builder, ChannelTraceEventOrBuilder> getEventsFieldBuilder() {
            if (this.eventsBuilder_ == null) {
                this.eventsBuilder_ = new RepeatedFieldBuilderV3<>(this.events_, (this.bitField0_ & 1) != 0, getParentForChildren(), isClean());
                this.events_ = null;
            }
            return this.eventsBuilder_;
        }

        /* renamed from: setUnknownFields, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public final Builder m7714setUnknownFields(UnknownFieldSet unknownFieldSet) {
            return (Builder) super.setUnknownFields(unknownFieldSet);
        }

        /* renamed from: mergeUnknownFields, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public final Builder m7708mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
            return (Builder) super.mergeUnknownFields(unknownFieldSet);
        }
    }
}
