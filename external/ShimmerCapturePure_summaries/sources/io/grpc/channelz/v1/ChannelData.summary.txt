// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/io/grpc/channelz/v1/ChannelData.java
// Size: 47652 bytes
// Modified: 2025-10-21 16:32:06.545878400 +0100

package io.grpc.channelz.v1;

import com.google.protobuf.AbstractParser;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.Descriptors;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageV3;
import com.google.protobuf.Internal;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.Message;
import com.google.protobuf.Parser;
import com.google.protobuf.SingleFieldBuilderV3;
import com.google.protobuf.Timestamp;
import com.google.protobuf.TimestampOrBuilder;
import com.google.protobuf.UninitializedMessageException;
import com.google.protobuf.UnknownFieldSet;
import io.grpc.channelz.v1.ChannelConnectivityState;
import io.grpc.channelz.v1.ChannelTrace;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;

/* loaded from: classes2.dex */
public final class ChannelData extends GeneratedMessageV3 implements ChannelDataOrBuilder {
    public static final int CALLS_FAILED_FIELD_NUMBER = 6;
    public static final int CALLS_STARTED_FIELD_NUMBER = 4;
    public static final int CALLS_SUCCEEDED_FIELD_NUMBER = 5;
    public static final int LAST_CALL_STARTED_TIMESTAMP_FIELD_NUMBER = 7;
    public static final int STATE_FIELD_NUMBER = 1;
    public static final int TARGET_FIELD_NUMBER = 2;
    public static final int TRACE_FIELD_NUMBER = 3;
    private static final long serialVersionUID = 0;
    private long callsFailed_;
    private long callsStarted_;
    private long callsSucceeded_;
    private Timestamp lastCallStartedTimestamp_;
    private byte memoizedIsInitialized;
    private ChannelConnectivityState state_;
    private volatile Object target_;
    private ChannelTrace trace_;
    private static final ChannelData DEFAULT_INSTANCE = new ChannelData();
    private static final Parser<ChannelData> PARSER = new AbstractParser<ChannelData>() { // from class: io.grpc.channelz.v1.ChannelData.1
        /* renamed from: parsePartialFrom, reason: merged with bridge method [inline-methods] */
        public ChannelData m7585parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return new ChannelData(codedInputStream, extensionRegistryLite);
        }
    };

    public static ChannelData getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    public static Parser<ChannelData> parser() {
        return PARSER;
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public long getCallsFailed() {
        return this.callsFailed_;
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public long getCallsStarted() {
        return this.callsStarted_;
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public long getCallsSucceeded() {
        return this.callsSucceeded_;
    }

    /* renamed from: getDefaultInstanceForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public ChannelData m7578getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

    public Parser<ChannelData> getParserForType() {
        return PARSER;
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public boolean hasLastCallStartedTimestamp() {
        return this.lastCallStartedTimestamp_ != null;
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public boolean hasState() {
        return this.state_ != null;
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public boolean hasTrace() {
        return this.trace_ != null;
    }

    public final boolean isInitialized() {
        byte b = this.memoizedIsInitialized;
        if (b == 1) {
            return true;
        }
        if (b == 0) {
            return false;
        }
        this.memoizedIsInitialized = (byte) 1;
        return true;
    }

    private ChannelData(GeneratedMessageV3.Builder<?> builder) {
        super(builder);
        this.memoizedIsInitialized = (byte) -1;
    }

    private ChannelData() {
        this.memoizedIsInitialized = (byte) -1;
        this.target_ = "";
    }

    protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unusedPrivateParameter) {
        return new ChannelData();
    }

    public final UnknownFieldSet getUnknownFields() {
        return this.unknownFields;
    }

    private ChannelData(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        Timestamp.Builder builder;
        this();
        extensionRegistryLite.getClass();
        UnknownFieldSet.Builder builderNewBuilder = UnknownFieldSet.newBuilder();
        boolean z = false;
        while (!z) {
            try {
                try {
                    int tag = codedInputStream.readTag();
                    if (tag != 0) {
                        if (tag == 10) {
                            ChannelConnectivityState channelConnectivityState = this.state_;
                            builder = channelConnectivityState != null ? channelConnectivityState.m7536toBuilder() : null;
                            ChannelConnectivityState channelConnectivityState2 = (ChannelConnectivityState) codedInputStream.readMessage(ChannelConnectivityState.parser(), extensionRegistryLite);
                            this.state_ = channelConnectivityState2;
                            if (builder != null) {
                                builder.mergeFrom(channelConnectivityState2);
                                this.state_ = builder.m7543buildPartial();
                            }
                        } else if (tag == 18) {
                            this.target_ = codedInputStream.readStringRequireUtf8();
                        } else if (tag == 26) {
                            ChannelTrace channelTrace = this.trace_;
                            builder = channelTrace != null ? channelTrace.m7675toBuilder() : null;
                            ChannelTrace channelTrace2 = (ChannelTrace) codedInputStream.readMessage(ChannelTrace.parser(), extensionRegistryLite);
                            this.trace_ = channelTrace2;
                            if (builder != null) {
                                builder.mergeFrom(channelTrace2);
                                this.trace_ = builder.m7682buildPartial();
                            }
                        } else if (tag == 32) {
                            this.callsStarted_ = codedInputStream.readInt64();
                        } else if (tag == 40) {
                            this.callsSucceeded_ = codedInputStream.readInt64();
                        } else if (tag == 48) {
                            this.callsFailed_ = codedInputStream.readInt64();
                        } else if (tag == 58) {
                            Timestamp timestamp = this.lastCallStartedTimestamp_;
                            builder = timestamp != null ? timestamp.toBuilder() : null;
                            Timestamp message = codedInputStream.readMessage(Timestamp.parser(), extensionRegistryLite);
                            this.lastCallStartedTimestamp_ = message;
                            if (builder != null) {
                                builder.mergeFrom(message);
                                this.lastCallStartedTimestamp_ = builder.buildPartial();
                            }
                        } else if (!parseUnknownField(codedInputStream, builderNewBuilder, extensionRegistryLite, tag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                }
            } finally {
                this.unknownFields = builderNewBuilder.build();
                makeExtensionsImmutable();
            }
        }
    }

    public static final Descriptors.Descriptor getDescriptor() {
        return ChannelzProto.internal_static_grpc_channelz_v1_ChannelData_descriptor;
    }

    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return ChannelzProto.internal_static_grpc_channelz_v1_ChannelData_fieldAccessorTable.ensureFieldAccessorsInitialized(ChannelData.class, Builder.class);
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public ChannelConnectivityState getState() {
        ChannelConnectivityState channelConnectivityState = this.state_;
        return channelConnectivityState == null ? ChannelConnectivityState.getDefaultInstance() : channelConnectivityState;
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public ChannelConnectivityStateOrBuilder getStateOrBuilder() {
        return getState();
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public String getTarget() {
        Object obj = this.target_;
        if (obj instanceof String) {
            return (String) obj;
        }
        String stringUtf8 = ((ByteString) obj).toStringUtf8();
        this.target_ = stringUtf8;
        return stringUtf8;
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public ByteString getTargetBytes() {
        Object obj = this.target_;
        if (obj instanceof String) {
            ByteString byteStringCopyFromUtf8 = ByteString.copyFromUtf8((String) obj);
            this.target_ = byteStringCopyFromUtf8;
            return byteStringCopyFromUtf8;
        }
        return (ByteString) obj;
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public ChannelTrace getTrace() {
        ChannelTrace channelTrace = this.trace_;
        return channelTrace == null ? ChannelTrace.getDefaultInstance() : channelTrace;
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public ChannelTraceOrBuilder getTraceOrBuilder() {
        return getTrace();
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public Timestamp getLastCallStartedTimestamp() {
        Timestamp timestamp = this.lastCallStartedTimestamp_;
        return timestamp == null ? Timestamp.getDefaultInstance() : timestamp;
    }

    @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
    public TimestampOrBuilder getLastCallStartedTimestampOrBuilder() {
        return getLastCallStartedTimestamp();
    }

    public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
        if (this.state_ != null) {
            codedOutputStream.writeMessage(1, getState());
        }
        if (!getTargetBytes().isEmpty()) {
            GeneratedMessageV3.writeString(codedOutputStream, 2, this.target_);
        }
        if (this.trace_ != null) {
            codedOutputStream.writeMessage(3, getTrace());
        }
        long j = this.callsStarted_;
        if (j != 0) {
            codedOutputStream.writeInt64(4, j);
        }
        long j2 = this.callsSucceeded_;
        if (j2 != 0) {
            codedOutputStream.writeInt64(5, j2);
        }
        long j3 = this.callsFailed_;
        if (j3 != 0) {
            codedOutputStream.writeInt64(6, j3);
        }
        if (this.lastCallStartedTimestamp_ != null) {
            codedOutputStream.writeMessage(7, getLastCallStartedTimestamp());
        }
        this.unknownFields.writeTo(codedOutputStream);
    }

    public int getSerializedSize() {
        int i = this.memoizedSize;
        if (i != -1) {
            return i;
        }
        int iComputeMessageSize = this.state_ != null ? CodedOutputStream.computeMessageSize(1, getState()) : 0;
        if (!getTargetBytes().isEmpty()) {
            iComputeMessageSize += GeneratedMessageV3.computeStringSize(2, this.target_);
        }
        if (this.trace_ != null) {
            iComputeMessageSize += CodedOutputStream.computeMessageSize(3, getTrace());
        }
        long j = this.callsStarted_;
        if (j != 0) {
            iComputeMessageSize += CodedOutputStream.computeInt64Size(4, j);
        }
        long j2 = this.callsSucceeded_;
        if (j2 != 0) {
            iComputeMessageSize += CodedOutputStream.computeInt64Size(5, j2);
        }
        long j3 = this.callsFailed_;
        if (j3 != 0) {
            iComputeMessageSize += CodedOutputStream.computeInt64Size(6, j3);
        }
        if (this.lastCallStartedTimestamp_ != null) {
            iComputeMessageSize += CodedOutputStream.computeMessageSize(7, getLastCallStartedTimestamp());
        }
        int serializedSize = iComputeMessageSize + this.unknownFields.getSerializedSize();
        this.memoizedSize = serializedSize;
        return serializedSize;
    }

    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof ChannelData)) {
            return super.equals(obj);
        }
        ChannelData channelData = (ChannelData) obj;
        if (hasState() != channelData.hasState()) {
            return false;
        }
        if ((hasState() && !getState().equals(channelData.getState())) || !getTarget().equals(channelData.getTarget()) || hasTrace() != channelData.hasTrace()) {
            return false;
        }
        if ((!hasTrace() || getTrace().equals(channelData.getTrace())) && getCallsStarted() == channelData.getCallsStarted() && getCallsSucceeded() == channelData.getCallsSucceeded() && getCallsFailed() == channelData.getCallsFailed() && hasLastCallStartedTimestamp() == channelData.hasLastCallStartedTimestamp()) {
            return (!hasLastCallStartedTimestamp() || getLastCallStartedTimestamp().equals(channelData.getLastCallStartedTimestamp())) && this.unknownFields.equals(channelData.unknownFields);
        }
        return false;
    }

    public int hashCode() {
        if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
        }
        int iHashCode = 779 + getDescriptor().hashCode();
        if (hasState()) {
            iHashCode = (((iHashCode * 37) + 1) * 53) + getState().hashCode();
        }
        int iHashCode2 = (((iHashCode * 37) + 2) * 53) + getTarget().hashCode();
        if (hasTrace()) {
            iHashCode2 = (((iHashCode2 * 37) + 3) * 53) + getTrace().hashCode();
        }
        int iHashLong = (((((((((((iHashCode2 * 37) + 4) * 53) + Internal.hashLong(getCallsStarted())) * 37) + 5) * 53) + Internal.hashLong(getCallsSucceeded())) * 37) + 6) * 53) + Internal.hashLong(getCallsFailed());
        if (hasLastCallStartedTimestamp()) {
            iHashLong = (((iHashLong * 37) + 7) * 53) + getLastCallStartedTimestamp().hashCode();
        }
        int iHashCode3 = (iHashLong * 29) + this.unknownFields.hashCode();
        this.memoizedHashCode = iHashCode3;
        return iHashCode3;
    }

    public static ChannelData parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
        return (ChannelData) PARSER.parseFrom(byteBuffer);
    }

    public static ChannelData parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (ChannelData) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
    }

    public static ChannelData parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
        return (ChannelData) PARSER.parseFrom(byteString);
    }

    public static ChannelData parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (ChannelData) PARSER.parseFrom(byteString, extensionRegistryLite);
    }

    public static ChannelData parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
        return (ChannelData) PARSER.parseFrom(bArr);
    }

    public static ChannelData parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (ChannelData) PARSER.parseFrom(bArr, extensionRegistryLite);
    }

    public static ChannelData parseFrom(InputStream inputStream) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
    }

    public static ChannelData parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
    }

    public static ChannelData parseDelimitedFrom(InputStream inputStream) throws IOException {
        return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
    }

    public static ChannelData parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
    }

    public static ChannelData parseFrom(CodedInputStream codedInputStream) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
    }

    public static ChannelData parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
    }

    /* renamed from: newBuilderForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public Builder m7580newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.m7583toBuilder();
    }

    public static Builder newBuilder(ChannelData channelData) {
        return DEFAULT_INSTANCE.m7583toBuilder().mergeFrom(channelData);
    }

    /* renamed from: toBuilder, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public Builder m7583toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public Builder newBuilderForType(GeneratedMessageV3.BuilderParent builderParent) {
        return new Builder(builderParent);
    }

    public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements ChannelDataOrBuilder {
        private long callsFailed_;
        private long callsStarted_;
        private long callsSucceeded_;
        private SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> lastCallStartedTimestampBuilder_;
        private Timestamp lastCallStartedTimestamp_;
        private SingleFieldBuilderV3<ChannelConnectivityState, ChannelConnectivityState.Builder, ChannelConnectivityStateOrBuilder> stateBuilder_;
        private ChannelConnectivityState state_;
        private Object target_;
        private SingleFieldBuilderV3<ChannelTrace, ChannelTrace.Builder, ChannelTraceOrBuilder> traceBuilder_;
        private ChannelTrace trace_;

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public long getCallsFailed() {
            return this.callsFailed_;
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public long getCallsStarted() {
            return this.callsStarted_;
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public long getCallsSucceeded() {
            return this.callsSucceeded_;
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public boolean hasLastCallStartedTimestamp() {
            return (this.lastCallStartedTimestampBuilder_ == null && this.lastCallStartedTimestamp_ == null) ? false : true;
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public boolean hasState() {
            return (this.stateBuilder_ == null && this.state_ == null) ? false : true;
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public boolean hasTrace() {
            return (this.traceBuilder_ == null && this.trace_ == null) ? false : true;
        }

        public final boolean isInitialized() {
            return true;
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return ChannelzProto.internal_static_grpc_channelz_v1_ChannelData_descriptor;
        }

        protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return ChannelzProto.internal_static_grpc_channelz_v1_ChannelData_fieldAccessorTable.ensureFieldAccessorsInitialized(ChannelData.class, Builder.class);
        }

        private Builder() {
            this.target_ = "";
            maybeForceBuilderInitialization();
        }

        private Builder(GeneratedMessageV3.BuilderParent builderParent) {
            super(builderParent);
            this.target_ = "";
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            boolean unused = ChannelData.alwaysUseFieldBuilders;
        }

        /* renamed from: clear, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7594clear() {
            super.clear();
            if (this.stateBuilder_ == null) {
                this.state_ = null;
            } else {
                this.state_ = null;
                this.stateBuilder_ = null;
            }
            this.target_ = "";
            if (this.traceBuilder_ == null) {
                this.trace_ = null;
            } else {
                this.trace_ = null;
                this.traceBuilder_ = null;
            }
            this.callsStarted_ = 0L;
            this.callsSucceeded_ = 0L;
            this.callsFailed_ = 0L;
            if (this.lastCallStartedTimestampBuilder_ == null) {
                this.lastCallStartedTimestamp_ = null;
            } else {
                this.lastCallStartedTimestamp_ = null;
                this.lastCallStartedTimestampBuilder_ = null;
            }
            return this;
        }

        public Descriptors.Descriptor getDescriptorForType() {
            return ChannelzProto.internal_static_grpc_channelz_v1_ChannelData_descriptor;
        }

        /* renamed from: getDefaultInstanceForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public ChannelData m7607getDefaultInstanceForType() {
            return ChannelData.getDefaultInstance();
        }

        /* JADX INFO: Thrown type has an unknown type hierarchy: com.google.protobuf.UninitializedMessageException */
        /* renamed from: build, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public ChannelData m7588build() throws UninitializedMessageException {
            ChannelData channelDataM7590buildPartial = m7590buildPartial();
            if (channelDataM7590buildPartial.isInitialized()) {
                return channelDataM7590buildPartial;
            }
            throw newUninitializedMessageException(channelDataM7590buildPartial);
        }

        /* renamed from: buildPartial, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public ChannelData m7590buildPartial() {
            ChannelData channelData = new ChannelData(this);
            SingleFieldBuilderV3<ChannelConnectivityState, ChannelConnectivityState.Builder, ChannelConnectivityStateOrBuilder> singleFieldBuilderV3 = this.stateBuilder_;
            if (singleFieldBuilderV3 == null) {
                channelData.state_ = this.state_;
            } else {
                channelData.state_ = singleFieldBuilderV3.build();
            }
            channelData.target_ = this.target_;
            SingleFieldBuilderV3<ChannelTrace, ChannelTrace.Builder, ChannelTraceOrBuilder> singleFieldBuilderV32 = this.traceBuilder_;
            if (singleFieldBuilderV32 == null) {
                channelData.trace_ = this.trace_;
            } else {
                channelData.trace_ = singleFieldBuilderV32.build();
            }
            channelData.callsStarted_ = this.callsStarted_;
            channelData.callsSucceeded_ = this.callsSucceeded_;
            channelData.callsFailed_ = this.callsFailed_;
            SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> singleFieldBuilderV33 = this.lastCallStartedTimestampBuilder_;
            if (singleFieldBuilderV33 == null) {
                channelData.lastCallStartedTimestamp_ = this.lastCallStartedTimestamp_;
            } else {
                channelData.lastCallStartedTimestamp_ = singleFieldBuilderV33.build();
            }
            onBuilt();
            return channelData;
        }

        /* renamed from: clone, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7606clone() {
            return (Builder) super.clone();
        }

        /* renamed from: setField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7618setField(Descriptors.FieldDescriptor fieldDescriptor, Object obj) {
            return (Builder) super.setField(fieldDescriptor, obj);
        }

        /* renamed from: clearField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7596clearField(Descriptors.FieldDescriptor fieldDescriptor) {
            return (Builder) super.clearField(fieldDescriptor);
        }

        /* renamed from: clearOneof, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7599clearOneof(Descriptors.OneofDescriptor oneofDescriptor) {
            return (Builder) super.clearOneof(oneofDescriptor);
        }

        /* renamed from: setRepeatedField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7620setRepeatedField(Descriptors.FieldDescriptor fieldDescriptor, int i, Object obj) {
            return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
        }

        /* renamed from: addRepeatedField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7586addRepeatedField(Descriptors.FieldDescriptor fieldDescriptor, Object obj) {
            return (Builder) super.addRepeatedField(fieldDescriptor, obj);
        }

        /* renamed from: mergeFrom, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7611mergeFrom(Message message) {
            if (message instanceof ChannelData) {
                return mergeFrom((ChannelData) message);
            }
            super.mergeFrom(message);
            return this;
        }

        public Builder mergeFrom(ChannelData channelData) {
            if (channelData == ChannelData.getDefaultInstance()) {
                return this;
            }
            if (channelData.hasState()) {
                mergeState(channelData.getState());
            }
            if (!channelData.getTarget().isEmpty()) {
                this.target_ = channelData.target_;
                onChanged();
            }
            if (channelData.hasTrace()) {
                mergeTrace(channelData.getTrace());
            }
            if (channelData.getCallsStarted() != 0) {
                setCallsStarted(channelData.getCallsStarted());
            }
            if (channelData.getCallsSucceeded() != 0) {
                setCallsSucceeded(channelData.getCallsSucceeded());
            }
            if (channelData.getCallsFailed() != 0) {
                setCallsFailed(channelData.getCallsFailed());
            }
            if (channelData.hasLastCallStartedTimestamp()) {
                mergeLastCallStartedTimestamp(channelData.getLastCallStartedTimestamp());
            }
            m7616mergeUnknownFields(channelData.unknownFields);
            onChanged();
            return this;
        }

        /* JADX WARN: Removed duplicated region for block: B:16:0x0023  */
        /* renamed from: mergeFrom, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        /*
            Code decompiled incorrectly, please refer to instructions dump.
            To view partially-correct add '--show-bad-code' argument
        */
        public io.grpc.channelz.v1.ChannelData.Builder m7612mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.lang.Throwable {
            /*
                r2 = this;
                r0 = 0
                com.google.protobuf.Parser r1 = io.grpc.channelz.v1.ChannelData.access$1200()     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                io.grpc.channelz.v1.ChannelData r3 = (io.grpc.channelz.v1.ChannelData) r3     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                if (r3 == 0) goto L10
                r2.mergeFrom(r3)
            L10:
                return r2
            L11:
                r3 = move-exception
                goto L21
            L13:
                r3 = move-exception
                com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch: java.lang.Throwable -> L11
                io.grpc.channelz.v1.ChannelData r4 = (io.grpc.channelz.v1.ChannelData) r4     // Catch: java.lang.Throwable -> L11
                java.io.IOException r3 = r3.unwrapIOException()     // Catch: java.lang.Throwable -> L1f
                throw r3     // Catch: java.lang.Throwable -> L1f
            L1f:
                r3 = move-exception
                r0 = r4
            L21:
                if (r0 == 0) goto L26
                r2.mergeFrom(r0)
            L26:
                throw r3
            */
            throw new UnsupportedOperationException("Method not decompiled: io.grpc.channelz.v1.ChannelData.Builder.m7612mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):io.grpc.channelz.v1.ChannelData$Builder");
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public ChannelConnectivityState getState() {
            SingleFieldBuilderV3<ChannelConnectivityState, ChannelConnectivityState.Builder, ChannelConnectivityStateOrBuilder> singleFieldBuilderV3 = this.stateBuilder_;
            if (singleFieldBuilderV3 != null) {
                return singleFieldBuilderV3.getMessage();
            }
            ChannelConnectivityState channelConnectivityState = this.state_;
            return channelConnectivityState == null ? ChannelConnectivityState.getDefaultInstance() : channelConnectivityState;
        }

        public Builder setState(ChannelConnectivityState channelConnectivityState) {
            SingleFieldBuilderV3<ChannelConnectivityState, ChannelConnectivityState.Builder, ChannelConnectivityStateOrBuilder> singleFieldBuilderV3 = this.stateBuilder_;
            if (singleFieldBuilderV3 == null) {
                channelConnectivityState.getClass();
                this.state_ = channelConnectivityState;
                onChanged();
            } else {
                singleFieldBuilderV3.setMessage(channelConnectivityState);
            }
            return this;
        }

        public Builder setState(ChannelConnectivityState.Builder builder) {
            SingleFieldBuilderV3<ChannelConnectivityState, ChannelConnectivityState.Builder, ChannelConnectivityStateOrBuilder> singleFieldBuilderV3 = this.stateBuilder_;
            if (singleFieldBuilderV3 == null) {
                this.state_ = builder.m7541build();
                onChanged();
            } else {
                singleFieldBuilderV3.setMessage(builder.m7541build());
            }
            return this;
        }

        public Builder mergeState(ChannelConnectivityState channelConnectivityState) {
            SingleFieldBuilderV3<ChannelConnectivityState, ChannelConnectivityState.Builder, ChannelConnectivityStateOrBuilder> singleFieldBuilderV3 = this.stateBuilder_;
            if (singleFieldBuilderV3 == null) {
                ChannelConnectivityState channelConnectivityState2 = this.state_;
                if (channelConnectivityState2 != null) {
                    this.state_ = ChannelConnectivityState.newBuilder(channelConnectivityState2).mergeFrom(channelConnectivityState).m7543buildPartial();
                } else {
                    this.state_ = channelConnectivityState;
                }
                onChanged();
            } else {
                singleFieldBuilderV3.mergeFrom(channelConnectivityState);
            }
            return this;
        }

        public Builder clearState() {
            if (this.stateBuilder_ == null) {
                this.state_ = null;
                onChanged();
            } else {
                this.state_ = null;
                this.stateBuilder_ = null;
            }
            return this;
        }

        public ChannelConnectivityState.Builder getStateBuilder() {
            onChanged();
            return getStateFieldBuilder().getBuilder();
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public ChannelConnectivityStateOrBuilder getStateOrBuilder() {
            SingleFieldBuilderV3<ChannelConnectivityState, ChannelConnectivityState.Builder, ChannelConnectivityStateOrBuilder> singleFieldBuilderV3 = this.stateBuilder_;
            if (singleFieldBuilderV3 != null) {
                return (ChannelConnectivityStateOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
            }
            ChannelConnectivityState channelConnectivityState = this.state_;
            return channelConnectivityState == null ? ChannelConnectivityState.getDefaultInstance() : channelConnectivityState;
        }

        private SingleFieldBuilderV3<ChannelConnectivityState, ChannelConnectivityState.Builder, ChannelConnectivityStateOrBuilder> getStateFieldBuilder() {
            if (this.stateBuilder_ == null) {
                this.stateBuilder_ = new SingleFieldBuilderV3<>(getState(), getParentForChildren(), isClean());
                this.state_ = null;
            }
            return this.stateBuilder_;
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public String getTarget() {
            Object obj = this.target_;
            if (!(obj instanceof String)) {
                String stringUtf8 = ((ByteString) obj).toStringUtf8();
                this.target_ = stringUtf8;
                return stringUtf8;
            }
            return (String) obj;
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public ByteString getTargetBytes() {
            Object obj = this.target_;
            if (obj instanceof String) {
                ByteString byteStringCopyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.target_ = byteStringCopyFromUtf8;
                return byteStringCopyFromUtf8;
            }
            return (ByteString) obj;
        }

        public Builder setTarget(String str) {
            str.getClass();
            this.target_ = str;
            onChanged();
            return this;
        }

        public Builder clearTarget() {
            this.target_ = ChannelData.getDefaultInstance().getTarget();
            onChanged();
            return this;
        }

        public Builder setTargetBytes(ByteString byteString) {
            byteString.getClass();
            ChannelData.checkByteStringIsUtf8(byteString);
            this.target_ = byteString;
            onChanged();
            return this;
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public ChannelTrace getTrace() {
            SingleFieldBuilderV3<ChannelTrace, ChannelTrace.Builder, ChannelTraceOrBuilder> singleFieldBuilderV3 = this.traceBuilder_;
            if (singleFieldBuilderV3 != null) {
                return singleFieldBuilderV3.getMessage();
            }
            ChannelTrace channelTrace = this.trace_;
            return channelTrace == null ? ChannelTrace.getDefaultInstance() : channelTrace;
        }

        public Builder setTrace(ChannelTrace channelTrace) {
            SingleFieldBuilderV3<ChannelTrace, ChannelTrace.Builder, ChannelTraceOrBuilder> singleFieldBuilderV3 = this.traceBuilder_;
            if (singleFieldBuilderV3 == null) {
                channelTrace.getClass();
                this.trace_ = channelTrace;
                onChanged();
            } else {
                singleFieldBuilderV3.setMessage(channelTrace);
            }
            return this;
        }

        public Builder setTrace(ChannelTrace.Builder builder) {
            SingleFieldBuilderV3<ChannelTrace, ChannelTrace.Builder, ChannelTraceOrBuilder> singleFieldBuilderV3 = this.traceBuilder_;
            if (singleFieldBuilderV3 == null) {
                this.trace_ = builder.m7680build();
                onChanged();
            } else {
                singleFieldBuilderV3.setMessage(builder.m7680build());
            }
            return this;
        }

        public Builder mergeTrace(ChannelTrace channelTrace) {
            SingleFieldBuilderV3<ChannelTrace, ChannelTrace.Builder, ChannelTraceOrBuilder> singleFieldBuilderV3 = this.traceBuilder_;
            if (singleFieldBuilderV3 == null) {
                ChannelTrace channelTrace2 = this.trace_;
                if (channelTrace2 != null) {
                    this.trace_ = ChannelTrace.newBuilder(channelTrace2).mergeFrom(channelTrace).m7682buildPartial();
                } else {
                    this.trace_ = channelTrace;
                }
                onChanged();
            } else {
                singleFieldBuilderV3.mergeFrom(channelTrace);
            }
            return this;
        }

        public Builder clearTrace() {
            if (this.traceBuilder_ == null) {
                this.trace_ = null;
                onChanged();
            } else {
                this.trace_ = null;
                this.traceBuilder_ = null;
            }
            return this;
        }

        public ChannelTrace.Builder getTraceBuilder() {
            onChanged();
            return getTraceFieldBuilder().getBuilder();
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public ChannelTraceOrBuilder getTraceOrBuilder() {
            SingleFieldBuilderV3<ChannelTrace, ChannelTrace.Builder, ChannelTraceOrBuilder> singleFieldBuilderV3 = this.traceBuilder_;
            if (singleFieldBuilderV3 != null) {
                return (ChannelTraceOrBuilder) singleFieldBuilderV3.getMessageOrBuilder();
            }
            ChannelTrace channelTrace = this.trace_;
            return channelTrace == null ? ChannelTrace.getDefaultInstance() : channelTrace;
        }

        private SingleFieldBuilderV3<ChannelTrace, ChannelTrace.Builder, ChannelTraceOrBuilder> getTraceFieldBuilder() {
            if (this.traceBuilder_ == null) {
                this.traceBuilder_ = new SingleFieldBuilderV3<>(getTrace(), getParentForChildren(), isClean());
                this.trace_ = null;
            }
            return this.traceBuilder_;
        }

        public Builder setCallsStarted(long j) {
            this.callsStarted_ = j;
            onChanged();
            return this;
        }

        public Builder clearCallsStarted() {
            this.callsStarted_ = 0L;
            onChanged();
            return this;
        }

        public Builder setCallsSucceeded(long j) {
            this.callsSucceeded_ = j;
            onChanged();
            return this;
        }

        public Builder clearCallsSucceeded() {
            this.callsSucceeded_ = 0L;
            onChanged();
            return this;
        }

        public Builder setCallsFailed(long j) {
            this.callsFailed_ = j;
            onChanged();
            return this;
        }

        public Builder clearCallsFailed() {
            this.callsFailed_ = 0L;
            onChanged();
            return this;
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public Timestamp getLastCallStartedTimestamp() {
            SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> singleFieldBuilderV3 = this.lastCallStartedTimestampBuilder_;
            if (singleFieldBuilderV3 != null) {
                return singleFieldBuilderV3.getMessage();
            }
            Timestamp timestamp = this.lastCallStartedTimestamp_;
            return timestamp == null ? Timestamp.getDefaultInstance() : timestamp;
        }

        public Builder setLastCallStartedTimestamp(Timestamp timestamp) {
            SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> singleFieldBuilderV3 = this.lastCallStartedTimestampBuilder_;
            if (singleFieldBuilderV3 == null) {
                timestamp.getClass();
                this.lastCallStartedTimestamp_ = timestamp;
                onChanged();
            } else {
                singleFieldBuilderV3.setMessage(timestamp);
            }
            return this;
        }

        public Builder setLastCallStartedTimestamp(Timestamp.Builder builder) {
            SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> singleFieldBuilderV3 = this.lastCallStartedTimestampBuilder_;
            if (singleFieldBuilderV3 == null) {
                this.lastCallStartedTimestamp_ = builder.build();
                onChanged();
            } else {
                singleFieldBuilderV3.setMessage(builder.build());
            }
            return this;
        }

        public Builder mergeLastCallStartedTimestamp(Timestamp timestamp) {
            SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> singleFieldBuilderV3 = this.lastCallStartedTimestampBuilder_;
            if (singleFieldBuilderV3 == null) {
                Timestamp timestamp2 = this.lastCallStartedTimestamp_;
                if (timestamp2 != null) {
                    this.lastCallStartedTimestamp_ = Timestamp.newBuilder(timestamp2).mergeFrom(timestamp).buildPartial();
                } else {
                    this.lastCallStartedTimestamp_ = timestamp;
                }
                onChanged();
            } else {
                singleFieldBuilderV3.mergeFrom(timestamp);
            }
            return this;
        }

        public Builder clearLastCallStartedTimestamp() {
            if (this.lastCallStartedTimestampBuilder_ == null) {
                this.lastCallStartedTimestamp_ = null;
                onChanged();
            } else {
                this.lastCallStartedTimestamp_ = null;
                this.lastCallStartedTimestampBuilder_ = null;
            }
            return this;
        }

        public Timestamp.Builder getLastCallStartedTimestampBuilder() {
            onChanged();
            return getLastCallStartedTimestampFieldBuilder().getBuilder();
        }

        @Override // io.grpc.channelz.v1.ChannelDataOrBuilder
        public TimestampOrBuilder getLastCallStartedTimestampOrBuilder() {
            SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> singleFieldBuilderV3 = this.lastCallStartedTimestampBuilder_;
            if (singleFieldBuilderV3 != null) {
                return singleFieldBuilderV3.getMessageOrBuilder();
            }
            Timestamp timestamp = this.lastCallStartedTimestamp_;
            return timestamp == null ? Timestamp.getDefaultInstance() : timestamp;
        }

        private SingleFieldBuilderV3<Timestamp, Timestamp.Builder, TimestampOrBuilder> getLastCallStartedTimestampFieldBuilder() {
            if (this.lastCallStartedTimestampBuilder_ == null) {
                this.lastCallStartedTimestampBuilder_ = new SingleFieldBuilderV3<>(getLastCallStartedTimestamp(), getParentForChildren(), isClean());
                this.lastCallStartedTimestamp_ = null;
            }
            return this.lastCallStartedTimestampBuilder_;
        }

        /* renamed from: setUnknownFields, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public final Builder m7622setUnknownFields(UnknownFieldSet unknownFieldSet) {
            return (Builder) super.setUnknownFields(unknownFieldSet);
        }

        /* renamed from: mergeUnknownFields, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public final Builder m7616mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
            return (Builder) super.mergeUnknownFields(unknownFieldSet);
        }
    }
}
