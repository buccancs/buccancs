// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/io/grpc/channelz/v1/GetServerSocketsRequest.java
// Size: 23828 bytes
// Modified: 2025-10-21 16:32:01.419710700 +0100

package io.grpc.channelz.v1;

import com.google.protobuf.AbstractParser;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.Descriptors;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageV3;
import com.google.protobuf.Internal;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.Message;
import com.google.protobuf.Parser;
import com.google.protobuf.UninitializedMessageException;
import com.google.protobuf.UnknownFieldSet;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;

/* loaded from: classes2.dex */
public final class GetServerSocketsRequest extends GeneratedMessageV3 implements GetServerSocketsRequestOrBuilder {
    public static final int MAX_RESULTS_FIELD_NUMBER = 3;
    public static final int SERVER_ID_FIELD_NUMBER = 1;
    public static final int START_SOCKET_ID_FIELD_NUMBER = 2;
    private static final long serialVersionUID = 0;
    private long maxResults_;
    private byte memoizedIsInitialized;
    private long serverId_;
    private long startSocketId_;
    private static final GetServerSocketsRequest DEFAULT_INSTANCE = new GetServerSocketsRequest();
    private static final Parser<GetServerSocketsRequest> PARSER = new AbstractParser<GetServerSocketsRequest>() { // from class: io.grpc.channelz.v1.GetServerSocketsRequest.1
        /* renamed from: parsePartialFrom, reason: merged with bridge method [inline-methods] */
        public GetServerSocketsRequest m7954parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return new GetServerSocketsRequest(codedInputStream, extensionRegistryLite);
        }
    };

    public static GetServerSocketsRequest getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    public static Parser<GetServerSocketsRequest> parser() {
        return PARSER;
    }

    /* renamed from: getDefaultInstanceForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public GetServerSocketsRequest m7947getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

    @Override // io.grpc.channelz.v1.GetServerSocketsRequestOrBuilder
    public long getMaxResults() {
        return this.maxResults_;
    }

    public Parser<GetServerSocketsRequest> getParserForType() {
        return PARSER;
    }

    @Override // io.grpc.channelz.v1.GetServerSocketsRequestOrBuilder
    public long getServerId() {
        return this.serverId_;
    }

    @Override // io.grpc.channelz.v1.GetServerSocketsRequestOrBuilder
    public long getStartSocketId() {
        return this.startSocketId_;
    }

    public final boolean isInitialized() {
        byte b = this.memoizedIsInitialized;
        if (b == 1) {
            return true;
        }
        if (b == 0) {
            return false;
        }
        this.memoizedIsInitialized = (byte) 1;
        return true;
    }

    private GetServerSocketsRequest(GeneratedMessageV3.Builder<?> builder) {
        super(builder);
        this.memoizedIsInitialized = (byte) -1;
    }

    private GetServerSocketsRequest() {
        this.memoizedIsInitialized = (byte) -1;
    }

    protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unusedPrivateParameter) {
        return new GetServerSocketsRequest();
    }

    public final UnknownFieldSet getUnknownFields() {
        return this.unknownFields;
    }

    private GetServerSocketsRequest(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        this();
        extensionRegistryLite.getClass();
        UnknownFieldSet.Builder builderNewBuilder = UnknownFieldSet.newBuilder();
        boolean z = false;
        while (!z) {
            try {
                try {
                    int tag = codedInputStream.readTag();
                    if (tag != 0) {
                        if (tag == 8) {
                            this.serverId_ = codedInputStream.readInt64();
                        } else if (tag == 16) {
                            this.startSocketId_ = codedInputStream.readInt64();
                        } else if (tag == 24) {
                            this.maxResults_ = codedInputStream.readInt64();
                        } else if (!parseUnknownField(codedInputStream, builderNewBuilder, extensionRegistryLite, tag)) {
                        }
                    }
                    z = true;
                } catch (IOException e) {
                    throw new InvalidProtocolBufferException(e).setUnfinishedMessage(this);
                } catch (InvalidProtocolBufferException e2) {
                    throw e2.setUnfinishedMessage(this);
                }
            } finally {
                this.unknownFields = builderNewBuilder.build();
                makeExtensionsImmutable();
            }
        }
    }

    public static final Descriptors.Descriptor getDescriptor() {
        return ChannelzProto.internal_static_grpc_channelz_v1_GetServerSocketsRequest_descriptor;
    }

    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return ChannelzProto.internal_static_grpc_channelz_v1_GetServerSocketsRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetServerSocketsRequest.class, Builder.class);
    }

    public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
        long j = this.serverId_;
        if (j != 0) {
            codedOutputStream.writeInt64(1, j);
        }
        long j2 = this.startSocketId_;
        if (j2 != 0) {
            codedOutputStream.writeInt64(2, j2);
        }
        long j3 = this.maxResults_;
        if (j3 != 0) {
            codedOutputStream.writeInt64(3, j3);
        }
        this.unknownFields.writeTo(codedOutputStream);
    }

    public int getSerializedSize() {
        int i = this.memoizedSize;
        if (i != -1) {
            return i;
        }
        long j = this.serverId_;
        int iComputeInt64Size = j != 0 ? CodedOutputStream.computeInt64Size(1, j) : 0;
        long j2 = this.startSocketId_;
        if (j2 != 0) {
            iComputeInt64Size += CodedOutputStream.computeInt64Size(2, j2);
        }
        long j3 = this.maxResults_;
        if (j3 != 0) {
            iComputeInt64Size += CodedOutputStream.computeInt64Size(3, j3);
        }
        int serializedSize = iComputeInt64Size + this.unknownFields.getSerializedSize();
        this.memoizedSize = serializedSize;
        return serializedSize;
    }

    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof GetServerSocketsRequest)) {
            return super.equals(obj);
        }
        GetServerSocketsRequest getServerSocketsRequest = (GetServerSocketsRequest) obj;
        return getServerId() == getServerSocketsRequest.getServerId() && getStartSocketId() == getServerSocketsRequest.getStartSocketId() && getMaxResults() == getServerSocketsRequest.getMaxResults() && this.unknownFields.equals(getServerSocketsRequest.unknownFields);
    }

    public int hashCode() {
        if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
        }
        int iHashCode = ((((((((((((((779 + getDescriptor().hashCode()) * 37) + 1) * 53) + Internal.hashLong(getServerId())) * 37) + 2) * 53) + Internal.hashLong(getStartSocketId())) * 37) + 3) * 53) + Internal.hashLong(getMaxResults())) * 29) + this.unknownFields.hashCode();
        this.memoizedHashCode = iHashCode;
        return iHashCode;
    }

    public static GetServerSocketsRequest parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
        return (GetServerSocketsRequest) PARSER.parseFrom(byteBuffer);
    }

    public static GetServerSocketsRequest parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (GetServerSocketsRequest) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
    }

    public static GetServerSocketsRequest parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
        return (GetServerSocketsRequest) PARSER.parseFrom(byteString);
    }

    public static GetServerSocketsRequest parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (GetServerSocketsRequest) PARSER.parseFrom(byteString, extensionRegistryLite);
    }

    public static GetServerSocketsRequest parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
        return (GetServerSocketsRequest) PARSER.parseFrom(bArr);
    }

    public static GetServerSocketsRequest parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (GetServerSocketsRequest) PARSER.parseFrom(bArr, extensionRegistryLite);
    }

    public static GetServerSocketsRequest parseFrom(InputStream inputStream) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
    }

    public static GetServerSocketsRequest parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
    }

    public static GetServerSocketsRequest parseDelimitedFrom(InputStream inputStream) throws IOException {
        return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
    }

    public static GetServerSocketsRequest parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
    }

    public static GetServerSocketsRequest parseFrom(CodedInputStream codedInputStream) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
    }

    public static GetServerSocketsRequest parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
    }

    /* renamed from: newBuilderForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public Builder m7949newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.m7952toBuilder();
    }

    public static Builder newBuilder(GetServerSocketsRequest getServerSocketsRequest) {
        return DEFAULT_INSTANCE.m7952toBuilder().mergeFrom(getServerSocketsRequest);
    }

    /* renamed from: toBuilder, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public Builder m7952toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public Builder newBuilderForType(GeneratedMessageV3.BuilderParent builderParent) {
        return new Builder(builderParent);
    }

    public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements GetServerSocketsRequestOrBuilder {
        private long maxResults_;
        private long serverId_;
        private long startSocketId_;

        @Override // io.grpc.channelz.v1.GetServerSocketsRequestOrBuilder
        public long getMaxResults() {
            return this.maxResults_;
        }

        @Override // io.grpc.channelz.v1.GetServerSocketsRequestOrBuilder
        public long getServerId() {
            return this.serverId_;
        }

        @Override // io.grpc.channelz.v1.GetServerSocketsRequestOrBuilder
        public long getStartSocketId() {
            return this.startSocketId_;
        }

        public final boolean isInitialized() {
            return true;
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return ChannelzProto.internal_static_grpc_channelz_v1_GetServerSocketsRequest_descriptor;
        }

        protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return ChannelzProto.internal_static_grpc_channelz_v1_GetServerSocketsRequest_fieldAccessorTable.ensureFieldAccessorsInitialized(GetServerSocketsRequest.class, Builder.class);
        }

        private Builder() {
            maybeForceBuilderInitialization();
        }

        private Builder(GeneratedMessageV3.BuilderParent builderParent) {
            super(builderParent);
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            boolean unused = GetServerSocketsRequest.alwaysUseFieldBuilders;
        }

        /* renamed from: clear, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7963clear() {
            super.clear();
            this.serverId_ = 0L;
            this.startSocketId_ = 0L;
            this.maxResults_ = 0L;
            return this;
        }

        public Descriptors.Descriptor getDescriptorForType() {
            return ChannelzProto.internal_static_grpc_channelz_v1_GetServerSocketsRequest_descriptor;
        }

        /* renamed from: getDefaultInstanceForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public GetServerSocketsRequest m7976getDefaultInstanceForType() {
            return GetServerSocketsRequest.getDefaultInstance();
        }

        /* JADX INFO: Thrown type has an unknown type hierarchy: com.google.protobuf.UninitializedMessageException */
        /* renamed from: build, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public GetServerSocketsRequest m7957build() throws UninitializedMessageException {
            GetServerSocketsRequest getServerSocketsRequestM7959buildPartial = m7959buildPartial();
            if (getServerSocketsRequestM7959buildPartial.isInitialized()) {
                return getServerSocketsRequestM7959buildPartial;
            }
            throw newUninitializedMessageException(getServerSocketsRequestM7959buildPartial);
        }

        /* renamed from: buildPartial, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public GetServerSocketsRequest m7959buildPartial() {
            GetServerSocketsRequest getServerSocketsRequest = new GetServerSocketsRequest(this);
            getServerSocketsRequest.serverId_ = this.serverId_;
            getServerSocketsRequest.startSocketId_ = this.startSocketId_;
            getServerSocketsRequest.maxResults_ = this.maxResults_;
            onBuilt();
            return getServerSocketsRequest;
        }

        /* renamed from: clone, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7975clone() {
            return (Builder) super.clone();
        }

        /* renamed from: setField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7987setField(Descriptors.FieldDescriptor fieldDescriptor, Object obj) {
            return (Builder) super.setField(fieldDescriptor, obj);
        }

        /* renamed from: clearField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7965clearField(Descriptors.FieldDescriptor fieldDescriptor) {
            return (Builder) super.clearField(fieldDescriptor);
        }

        /* renamed from: clearOneof, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7968clearOneof(Descriptors.OneofDescriptor oneofDescriptor) {
            return (Builder) super.clearOneof(oneofDescriptor);
        }

        /* renamed from: setRepeatedField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7989setRepeatedField(Descriptors.FieldDescriptor fieldDescriptor, int i, Object obj) {
            return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
        }

        /* renamed from: addRepeatedField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7955addRepeatedField(Descriptors.FieldDescriptor fieldDescriptor, Object obj) {
            return (Builder) super.addRepeatedField(fieldDescriptor, obj);
        }

        /* renamed from: mergeFrom, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m7980mergeFrom(Message message) {
            if (message instanceof GetServerSocketsRequest) {
                return mergeFrom((GetServerSocketsRequest) message);
            }
            super.mergeFrom(message);
            return this;
        }

        public Builder mergeFrom(GetServerSocketsRequest getServerSocketsRequest) {
            if (getServerSocketsRequest == GetServerSocketsRequest.getDefaultInstance()) {
                return this;
            }
            if (getServerSocketsRequest.getServerId() != 0) {
                setServerId(getServerSocketsRequest.getServerId());
            }
            if (getServerSocketsRequest.getStartSocketId() != 0) {
                setStartSocketId(getServerSocketsRequest.getStartSocketId());
            }
            if (getServerSocketsRequest.getMaxResults() != 0) {
                setMaxResults(getServerSocketsRequest.getMaxResults());
            }
            m7985mergeUnknownFields(getServerSocketsRequest.unknownFields);
            onChanged();
            return this;
        }

        /* JADX WARN: Removed duplicated region for block: B:16:0x0023  */
        /* renamed from: mergeFrom, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        /*
            Code decompiled incorrectly, please refer to instructions dump.
            To view partially-correct add '--show-bad-code' argument
        */
        public io.grpc.channelz.v1.GetServerSocketsRequest.Builder m7981mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.lang.Throwable {
            /*
                r2 = this;
                r0 = 0
                com.google.protobuf.Parser r1 = io.grpc.channelz.v1.GetServerSocketsRequest.access$800()     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                io.grpc.channelz.v1.GetServerSocketsRequest r3 = (io.grpc.channelz.v1.GetServerSocketsRequest) r3     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                if (r3 == 0) goto L10
                r2.mergeFrom(r3)
            L10:
                return r2
            L11:
                r3 = move-exception
                goto L21
            L13:
                r3 = move-exception
                com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch: java.lang.Throwable -> L11
                io.grpc.channelz.v1.GetServerSocketsRequest r4 = (io.grpc.channelz.v1.GetServerSocketsRequest) r4     // Catch: java.lang.Throwable -> L11
                java.io.IOException r3 = r3.unwrapIOException()     // Catch: java.lang.Throwable -> L1f
                throw r3     // Catch: java.lang.Throwable -> L1f
            L1f:
                r3 = move-exception
                r0 = r4
            L21:
                if (r0 == 0) goto L26
                r2.mergeFrom(r0)
            L26:
                throw r3
            */
            throw new UnsupportedOperationException("Method not decompiled: io.grpc.channelz.v1.GetServerSocketsRequest.Builder.m7981mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):io.grpc.channelz.v1.GetServerSocketsRequest$Builder");
        }

        public Builder setServerId(long j) {
            this.serverId_ = j;
            onChanged();
            return this;
        }

        public Builder clearServerId() {
            this.serverId_ = 0L;
            onChanged();
            return this;
        }

        public Builder setStartSocketId(long j) {
            this.startSocketId_ = j;
            onChanged();
            return this;
        }

        public Builder clearStartSocketId() {
            this.startSocketId_ = 0L;
            onChanged();
            return this;
        }

        public Builder setMaxResults(long j) {
            this.maxResults_ = j;
            onChanged();
            return this;
        }

        public Builder clearMaxResults() {
            this.maxResults_ = 0L;
            onChanged();
            return this;
        }

        /* renamed from: setUnknownFields, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public final Builder m7991setUnknownFields(UnknownFieldSet unknownFieldSet) {
            return (Builder) super.setUnknownFields(unknownFieldSet);
        }

        /* renamed from: mergeUnknownFields, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public final Builder m7985mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
            return (Builder) super.mergeUnknownFields(unknownFieldSet);
        }
    }
}
