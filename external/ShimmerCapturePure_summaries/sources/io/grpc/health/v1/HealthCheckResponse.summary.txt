// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/io/grpc/health/v1/HealthCheckResponse.java
// Size: 24184 bytes
// Modified: 2025-10-21 16:32:02.225651200 +0100

package io.grpc.health.v1;

import com.google.protobuf.AbstractParser;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.Descriptors;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessageV3;
import com.google.protobuf.Internal;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.Message;
import com.google.protobuf.Parser;
import com.google.protobuf.ProtocolMessageEnum;
import com.google.protobuf.UninitializedMessageException;
import com.google.protobuf.UnknownFieldSet;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;

/* loaded from: classes2.dex */
public final class HealthCheckResponse extends GeneratedMessageV3 implements HealthCheckResponseOrBuilder {
    private static final HealthCheckResponse DEFAULT_INSTANCE = new HealthCheckResponse();
    private static final Parser<HealthCheckResponse> PARSER = new AbstractParser<HealthCheckResponse>() { // from class: io.grpc.health.v1.HealthCheckResponse.1
        /* renamed from: parsePartialFrom, reason: merged with bridge method [inline-methods] */
        public HealthCheckResponse m9150parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return new HealthCheckResponse(codedInputStream, extensionRegistryLite);
        }
    };
    public static final int STATUS_FIELD_NUMBER = 1;
    private static final long serialVersionUID = 0;
    private byte memoizedIsInitialized;
    private int status_;

    public static HealthCheckResponse getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    public static Parser<HealthCheckResponse> parser() {
        return PARSER;
    }

    /* renamed from: getDefaultInstanceForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public HealthCheckResponse m9143getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }

    public Parser<HealthCheckResponse> getParserForType() {
        return PARSER;
    }

    @Override // io.grpc.health.v1.HealthCheckResponseOrBuilder
    public int getStatusValue() {
        return this.status_;
    }

    public final boolean isInitialized() {
        byte b = this.memoizedIsInitialized;
        if (b == 1) {
            return true;
        }
        if (b == 0) {
            return false;
        }
        this.memoizedIsInitialized = (byte) 1;
        return true;
    }

    private HealthCheckResponse(GeneratedMessageV3.Builder<?> builder) {
        super(builder);
        this.memoizedIsInitialized = (byte) -1;
    }

    private HealthCheckResponse() {
        this.memoizedIsInitialized = (byte) -1;
        this.status_ = 0;
    }

    protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unusedPrivateParameter) {
        return new HealthCheckResponse();
    }

    public final UnknownFieldSet getUnknownFields() {
        return this.unknownFields;
    }

    private HealthCheckResponse(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        this();
        extensionRegistryLite.getClass();
        UnknownFieldSet.Builder builderNewBuilder = UnknownFieldSet.newBuilder();
        boolean z = false;
        while (!z) {
            try {
                try {
                    int tag = codedInputStream.readTag();
                    if (tag != 0) {
                        if (tag == 8) {
                            this.status_ = codedInputStream.readEnum();
                        } else if (!parseUnknownField(codedInputStream, builderNewBuilder, extensionRegistryLite, tag)) {
                        }
                    }
                    z = true;
                } catch (InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (IOException e2) {
                    throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                }
            } finally {
                this.unknownFields = builderNewBuilder.build();
                makeExtensionsImmutable();
            }
        }
    }

    public static final Descriptors.Descriptor getDescriptor() {
        return HealthProto.internal_static_grpc_health_v1_HealthCheckResponse_descriptor;
    }

    protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
        return HealthProto.internal_static_grpc_health_v1_HealthCheckResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(HealthCheckResponse.class, Builder.class);
    }

    public enum ServingStatus implements ProtocolMessageEnum {
        UNKNOWN(0),
        SERVING(1),
        NOT_SERVING(2),
        SERVICE_UNKNOWN(3),
        UNRECOGNIZED(-1);

        public static final int NOT_SERVING_VALUE = 2;
        public static final int SERVICE_UNKNOWN_VALUE = 3;
        public static final int SERVING_VALUE = 1;
        public static final int UNKNOWN_VALUE = 0;
        private final int value;
        private static final Internal.EnumLiteMap<ServingStatus> internalValueMap = new Internal.EnumLiteMap<ServingStatus>() { // from class: io.grpc.health.v1.HealthCheckResponse.ServingStatus.1
            public ServingStatus findValueByNumber(int i) {
                return ServingStatus.forNumber(i);
            }
        };
        private static final ServingStatus[] VALUES = values();

        public static ServingStatus forNumber(int i) {
            if (i == 0) {
                return UNKNOWN;
            }
            if (i == 1) {
                return SERVING;
            }
            if (i == 2) {
                return NOT_SERVING;
            }
            if (i != 3) {
                return null;
            }
            return SERVICE_UNKNOWN;
        }

        public static Internal.EnumLiteMap<ServingStatus> internalGetValueMap() {
            return internalValueMap;
        }

        public final int getNumber() {
            if (this != UNRECOGNIZED) {
                return this.value;
            }
            throw new IllegalArgumentException("Can't get the number of an unknown enum value.");
        }

        @Deprecated
        public static ServingStatus valueOf(int i) {
            return forNumber(i);
        }

        public final Descriptors.EnumValueDescriptor getValueDescriptor() {
            if (this == UNRECOGNIZED) {
                throw new IllegalStateException("Can't get the descriptor of an unrecognized enum value.");
            }
            return (Descriptors.EnumValueDescriptor) getDescriptor().getValues().get(ordinal());
        }

        public final Descriptors.EnumDescriptor getDescriptorForType() {
            return getDescriptor();
        }

        public static final Descriptors.EnumDescriptor getDescriptor() {
            return (Descriptors.EnumDescriptor) HealthCheckResponse.getDescriptor().getEnumTypes().get(0);
        }

        public static ServingStatus valueOf(Descriptors.EnumValueDescriptor enumValueDescriptor) {
            if (enumValueDescriptor.getType() == getDescriptor()) {
                return enumValueDescriptor.getIndex() == -1 ? UNRECOGNIZED : VALUES[enumValueDescriptor.getIndex()];
            }
            throw new IllegalArgumentException("EnumValueDescriptor is not for this type.");
        }

        ServingStatus(int i) {
            this.value = i;
        }
    }

    @Override // io.grpc.health.v1.HealthCheckResponseOrBuilder
    public ServingStatus getStatus() {
        ServingStatus servingStatusValueOf = ServingStatus.valueOf(this.status_);
        return servingStatusValueOf == null ? ServingStatus.UNRECOGNIZED : servingStatusValueOf;
    }

    public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
        if (this.status_ != ServingStatus.UNKNOWN.getNumber()) {
            codedOutputStream.writeEnum(1, this.status_);
        }
        this.unknownFields.writeTo(codedOutputStream);
    }

    public int getSerializedSize() {
        int i = this.memoizedSize;
        if (i != -1) {
            return i;
        }
        int iComputeEnumSize = (this.status_ != ServingStatus.UNKNOWN.getNumber() ? CodedOutputStream.computeEnumSize(1, this.status_) : 0) + this.unknownFields.getSerializedSize();
        this.memoizedSize = iComputeEnumSize;
        return iComputeEnumSize;
    }

    public boolean equals(Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof HealthCheckResponse)) {
            return super.equals(obj);
        }
        HealthCheckResponse healthCheckResponse = (HealthCheckResponse) obj;
        return this.status_ == healthCheckResponse.status_ && this.unknownFields.equals(healthCheckResponse.unknownFields);
    }

    public int hashCode() {
        if (this.memoizedHashCode != 0) {
            return this.memoizedHashCode;
        }
        int iHashCode = ((((((779 + getDescriptor().hashCode()) * 37) + 1) * 53) + this.status_) * 29) + this.unknownFields.hashCode();
        this.memoizedHashCode = iHashCode;
        return iHashCode;
    }

    public static HealthCheckResponse parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
        return (HealthCheckResponse) PARSER.parseFrom(byteBuffer);
    }

    public static HealthCheckResponse parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (HealthCheckResponse) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
    }

    public static HealthCheckResponse parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
        return (HealthCheckResponse) PARSER.parseFrom(byteString);
    }

    public static HealthCheckResponse parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (HealthCheckResponse) PARSER.parseFrom(byteString, extensionRegistryLite);
    }

    public static HealthCheckResponse parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
        return (HealthCheckResponse) PARSER.parseFrom(bArr);
    }

    public static HealthCheckResponse parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
        return (HealthCheckResponse) PARSER.parseFrom(bArr, extensionRegistryLite);
    }

    public static HealthCheckResponse parseFrom(InputStream inputStream) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
    }

    public static HealthCheckResponse parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
    }

    public static HealthCheckResponse parseDelimitedFrom(InputStream inputStream) throws IOException {
        return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
    }

    public static HealthCheckResponse parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
    }

    public static HealthCheckResponse parseFrom(CodedInputStream codedInputStream) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
    }

    public static HealthCheckResponse parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
        return GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
    }

    /* renamed from: newBuilderForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public Builder m9145newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.m9148toBuilder();
    }

    public static Builder newBuilder(HealthCheckResponse healthCheckResponse) {
        return DEFAULT_INSTANCE.m9148toBuilder().mergeFrom(healthCheckResponse);
    }

    /* renamed from: toBuilder, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
    public Builder m9148toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public Builder newBuilderForType(GeneratedMessageV3.BuilderParent builderParent) {
        return new Builder(builderParent);
    }

    public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements HealthCheckResponseOrBuilder {
        private int status_;

        @Override // io.grpc.health.v1.HealthCheckResponseOrBuilder
        public int getStatusValue() {
            return this.status_;
        }

        public final boolean isInitialized() {
            return true;
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return HealthProto.internal_static_grpc_health_v1_HealthCheckResponse_descriptor;
        }

        protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return HealthProto.internal_static_grpc_health_v1_HealthCheckResponse_fieldAccessorTable.ensureFieldAccessorsInitialized(HealthCheckResponse.class, Builder.class);
        }

        private Builder() {
            this.status_ = 0;
            maybeForceBuilderInitialization();
        }

        private Builder(GeneratedMessageV3.BuilderParent builderParent) {
            super(builderParent);
            this.status_ = 0;
            maybeForceBuilderInitialization();
        }

        private void maybeForceBuilderInitialization() {
            boolean unused = HealthCheckResponse.alwaysUseFieldBuilders;
        }

        /* renamed from: clear, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m9159clear() {
            super.clear();
            this.status_ = 0;
            return this;
        }

        public Descriptors.Descriptor getDescriptorForType() {
            return HealthProto.internal_static_grpc_health_v1_HealthCheckResponse_descriptor;
        }

        /* renamed from: getDefaultInstanceForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public HealthCheckResponse m9172getDefaultInstanceForType() {
            return HealthCheckResponse.getDefaultInstance();
        }

        /* JADX INFO: Thrown type has an unknown type hierarchy: com.google.protobuf.UninitializedMessageException */
        /* renamed from: build, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public HealthCheckResponse m9153build() throws UninitializedMessageException {
            HealthCheckResponse healthCheckResponseM9155buildPartial = m9155buildPartial();
            if (healthCheckResponseM9155buildPartial.isInitialized()) {
                return healthCheckResponseM9155buildPartial;
            }
            throw newUninitializedMessageException(healthCheckResponseM9155buildPartial);
        }

        /* renamed from: buildPartial, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public HealthCheckResponse m9155buildPartial() {
            HealthCheckResponse healthCheckResponse = new HealthCheckResponse(this);
            healthCheckResponse.status_ = this.status_;
            onBuilt();
            return healthCheckResponse;
        }

        /* renamed from: clone, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m9171clone() {
            return (Builder) super.clone();
        }

        /* renamed from: setField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m9183setField(Descriptors.FieldDescriptor fieldDescriptor, Object obj) {
            return (Builder) super.setField(fieldDescriptor, obj);
        }

        /* renamed from: clearField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m9161clearField(Descriptors.FieldDescriptor fieldDescriptor) {
            return (Builder) super.clearField(fieldDescriptor);
        }

        /* renamed from: clearOneof, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m9164clearOneof(Descriptors.OneofDescriptor oneofDescriptor) {
            return (Builder) super.clearOneof(oneofDescriptor);
        }

        /* renamed from: setRepeatedField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m9185setRepeatedField(Descriptors.FieldDescriptor fieldDescriptor, int i, Object obj) {
            return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
        }

        /* renamed from: addRepeatedField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m9151addRepeatedField(Descriptors.FieldDescriptor fieldDescriptor, Object obj) {
            return (Builder) super.addRepeatedField(fieldDescriptor, obj);
        }

        /* renamed from: mergeFrom, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m9176mergeFrom(Message message) {
            if (message instanceof HealthCheckResponse) {
                return mergeFrom((HealthCheckResponse) message);
            }
            super.mergeFrom(message);
            return this;
        }

        public Builder mergeFrom(HealthCheckResponse healthCheckResponse) {
            if (healthCheckResponse == HealthCheckResponse.getDefaultInstance()) {
                return this;
            }
            if (healthCheckResponse.status_ != 0) {
                setStatusValue(healthCheckResponse.getStatusValue());
            }
            m9181mergeUnknownFields(healthCheckResponse.unknownFields);
            onChanged();
            return this;
        }

        /* JADX WARN: Removed duplicated region for block: B:16:0x0023  */
        /* renamed from: mergeFrom, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        /*
            Code decompiled incorrectly, please refer to instructions dump.
            To view partially-correct add '--show-bad-code' argument
        */
        public io.grpc.health.v1.HealthCheckResponse.Builder m9177mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.lang.Throwable {
            /*
                r2 = this;
                r0 = 0
                com.google.protobuf.Parser r1 = io.grpc.health.v1.HealthCheckResponse.access$600()     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                io.grpc.health.v1.HealthCheckResponse r3 = (io.grpc.health.v1.HealthCheckResponse) r3     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                if (r3 == 0) goto L10
                r2.mergeFrom(r3)
            L10:
                return r2
            L11:
                r3 = move-exception
                goto L21
            L13:
                r3 = move-exception
                com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch: java.lang.Throwable -> L11
                io.grpc.health.v1.HealthCheckResponse r4 = (io.grpc.health.v1.HealthCheckResponse) r4     // Catch: java.lang.Throwable -> L11
                java.io.IOException r3 = r3.unwrapIOException()     // Catch: java.lang.Throwable -> L1f
                throw r3     // Catch: java.lang.Throwable -> L1f
            L1f:
                r3 = move-exception
                r0 = r4
            L21:
                if (r0 == 0) goto L26
                r2.mergeFrom(r0)
            L26:
                throw r3
            */
            throw new UnsupportedOperationException("Method not decompiled: io.grpc.health.v1.HealthCheckResponse.Builder.m9177mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):io.grpc.health.v1.HealthCheckResponse$Builder");
        }

        public Builder setStatusValue(int i) {
            this.status_ = i;
            onChanged();
            return this;
        }

        @Override // io.grpc.health.v1.HealthCheckResponseOrBuilder
        public ServingStatus getStatus() {
            ServingStatus servingStatusValueOf = ServingStatus.valueOf(this.status_);
            return servingStatusValueOf == null ? ServingStatus.UNRECOGNIZED : servingStatusValueOf;
        }

        public Builder setStatus(ServingStatus servingStatus) {
            servingStatus.getClass();
            this.status_ = servingStatus.getNumber();
            onChanged();
            return this;
        }

        public Builder clearStatus() {
            this.status_ = 0;
            onChanged();
            return this;
        }

        /* renamed from: setUnknownFields, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public final Builder m9187setUnknownFields(UnknownFieldSet unknownFieldSet) {
            return (Builder) super.setUnknownFields(unknownFieldSet);
        }

        /* renamed from: mergeUnknownFields, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public final Builder m9181mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
            return (Builder) super.mergeUnknownFields(unknownFieldSet);
        }
    }
}
