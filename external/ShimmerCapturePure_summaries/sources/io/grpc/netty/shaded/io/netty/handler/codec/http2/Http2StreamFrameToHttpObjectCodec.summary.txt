// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/io/grpc/netty/shaded/io/netty/handler/codec/http2/Http2StreamFrameToHttpObjectCodec.java
// Size: 14176 bytes
// Modified: 2025-10-21 16:32:14.566073200 +0100

package io.grpc.netty.shaded.io.netty.handler.codec.http2;

import io.grpc.netty.shaded.io.netty.buffer.ByteBufAllocator;
import io.grpc.netty.shaded.io.netty.buffer.Unpooled;
import io.grpc.netty.shaded.io.netty.channel.Channel;
import io.grpc.netty.shaded.io.netty.channel.ChannelHandler;
import io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext;
import io.grpc.netty.shaded.io.netty.handler.codec.MessageToMessageCodec;
import io.grpc.netty.shaded.io.netty.handler.codec.http.DefaultHttpContent;
import io.grpc.netty.shaded.io.netty.handler.codec.http.DefaultLastHttpContent;
import io.grpc.netty.shaded.io.netty.handler.codec.http.FullHttpMessage;
import io.grpc.netty.shaded.io.netty.handler.codec.http.HttpHeaderNames;
import io.grpc.netty.shaded.io.netty.handler.codec.http.HttpHeaderValues;
import io.grpc.netty.shaded.io.netty.handler.codec.http.HttpMessage;
import io.grpc.netty.shaded.io.netty.handler.codec.http.HttpObject;
import io.grpc.netty.shaded.io.netty.handler.codec.http.HttpRequest;
import io.grpc.netty.shaded.io.netty.handler.codec.http.HttpResponseStatus;
import io.grpc.netty.shaded.io.netty.handler.codec.http.HttpScheme;
import io.grpc.netty.shaded.io.netty.handler.codec.http.HttpUtil;
import io.grpc.netty.shaded.io.netty.handler.codec.http.HttpVersion;
import io.grpc.netty.shaded.io.netty.handler.codec.http.LastHttpContent;
import io.grpc.netty.shaded.io.netty.handler.codec.http2.HttpConversionUtil;
import io.grpc.netty.shaded.io.netty.handler.ssl.SslHandler;
import io.grpc.netty.shaded.io.netty.util.Attribute;
import io.grpc.netty.shaded.io.netty.util.AttributeKey;
import java.util.List;

@ChannelHandler.Sharable
/* loaded from: classes3.dex */
public class Http2StreamFrameToHttpObjectCodec extends MessageToMessageCodec<Http2StreamFrame, HttpObject> {
    private static final AttributeKey<HttpScheme> SCHEME_ATTR_KEY = AttributeKey.valueOf(HttpScheme.class, "STREAMFRAMECODEC_SCHEME");
    private final boolean isServer;
    private final boolean validateHeaders;

    @Override // io.grpc.netty.shaded.io.netty.handler.codec.MessageToMessageCodec
    protected /* bridge */ /* synthetic */ void decode(ChannelHandlerContext channelHandlerContext, Http2StreamFrame http2StreamFrame, List list) throws Exception {
        decode2(channelHandlerContext, http2StreamFrame, (List<Object>) list);
    }

    @Override // io.grpc.netty.shaded.io.netty.handler.codec.MessageToMessageCodec
    protected /* bridge */ /* synthetic */ void encode(ChannelHandlerContext channelHandlerContext, HttpObject httpObject, List list) throws Exception {
        encode2(channelHandlerContext, httpObject, (List<Object>) list);
    }

    public Http2StreamFrameToHttpObjectCodec(boolean z, boolean z2) {
        this.isServer = z;
        this.validateHeaders = z2;
    }

    public Http2StreamFrameToHttpObjectCodec(boolean z) {
        this(z, true);
    }

    @Override // io.grpc.netty.shaded.io.netty.handler.codec.MessageToMessageCodec
    public boolean acceptInboundMessage(Object obj) throws Exception {
        return (obj instanceof Http2HeadersFrame) || (obj instanceof Http2DataFrame);
    }

    /* renamed from: decode, reason: avoid collision after fix types in other method */
    protected void decode2(ChannelHandlerContext channelHandlerContext, Http2StreamFrame http2StreamFrame, List<Object> list) throws Exception {
        if (http2StreamFrame instanceof Http2HeadersFrame) {
            Http2HeadersFrame http2HeadersFrame = (Http2HeadersFrame) http2StreamFrame;
            Http2Headers http2HeadersHeaders = http2HeadersFrame.headers();
            Http2FrameStream http2FrameStreamStream = http2HeadersFrame.stream();
            int iId = http2FrameStreamStream == null ? 0 : http2FrameStreamStream.id();
            CharSequence charSequenceStatus = http2HeadersHeaders.status();
            if (charSequenceStatus != null && HttpResponseStatus.CONTINUE.codeAsText().contentEquals(charSequenceStatus)) {
                list.add(newFullMessage(iId, http2HeadersHeaders, channelHandlerContext.alloc()));
                return;
            }
            if (http2HeadersFrame.isEndStream()) {
                if (http2HeadersHeaders.method() == null && charSequenceStatus == null) {
                    DefaultLastHttpContent defaultLastHttpContent = new DefaultLastHttpContent(Unpooled.EMPTY_BUFFER, this.validateHeaders);
                    HttpConversionUtil.addHttp2ToHttpHeaders(iId, http2HeadersHeaders, defaultLastHttpContent.trailingHeaders(), HttpVersion.HTTP_1_1, true, true);
                    list.add(defaultLastHttpContent);
                    return;
                }
                list.add(newFullMessage(iId, http2HeadersHeaders, channelHandlerContext.alloc()));
                return;
            }
            HttpMessage httpMessageNewMessage = newMessage(iId, http2HeadersHeaders);
            if (!HttpUtil.isContentLengthSet(httpMessageNewMessage)) {
                httpMessageNewMessage.headers().add(HttpHeaderNames.TRANSFER_ENCODING, HttpHeaderValues.CHUNKED);
            }
            list.add(httpMessageNewMessage);
            return;
        }
        if (http2StreamFrame instanceof Http2DataFrame) {
            Http2DataFrame http2DataFrame = (Http2DataFrame) http2StreamFrame;
            if (http2DataFrame.isEndStream()) {
                list.add(new DefaultLastHttpContent(http2DataFrame.content().retain(), this.validateHeaders));
            } else {
                list.add(new DefaultHttpContent(http2DataFrame.content().retain()));
            }
        }
    }

    private void encodeLastContent(LastHttpContent lastHttpContent, List<Object> list) {
        boolean z = !(lastHttpContent instanceof FullHttpMessage) && lastHttpContent.trailingHeaders().isEmpty();
        if (lastHttpContent.content().isReadable() || z) {
            list.add(new DefaultHttp2DataFrame(lastHttpContent.content().retain(), lastHttpContent.trailingHeaders().isEmpty()));
        }
        if (lastHttpContent.trailingHeaders().isEmpty()) {
            return;
        }
        list.add(new DefaultHttp2HeadersFrame(HttpConversionUtil.toHttp2Headers(lastHttpContent.trailingHeaders(), this.validateHeaders), true));
    }

    /* JADX WARN: Removed duplicated region for block: B:21:0x006a  */
    /* renamed from: encode, reason: avoid collision after fix types in other method */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    protected void encode2(io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext r5, io.grpc.netty.shaded.io.netty.handler.codec.http.HttpObject r6, java.util.List<java.lang.Object> r7) throws java.lang.Exception {
        /*
            r4 = this;
            boolean r0 = r6 instanceof io.grpc.netty.shaded.io.netty.handler.codec.http.HttpResponse
            r1 = 0
            if (r0 == 0) goto L42
            r0 = r6
            io.grpc.netty.shaded.io.netty.handler.codec.http.HttpResponse r0 = (io.grpc.netty.shaded.io.netty.handler.codec.http.HttpResponse) r0
            io.grpc.netty.shaded.io.netty.handler.codec.http.HttpResponseStatus r2 = r0.status()
            io.grpc.netty.shaded.io.netty.handler.codec.http.HttpResponseStatus r3 = io.grpc.netty.shaded.io.netty.handler.codec.http.HttpResponseStatus.CONTINUE
            boolean r2 = r2.equals(r3)
            if (r2 == 0) goto L42
            boolean r6 = r0 instanceof io.grpc.netty.shaded.io.netty.handler.codec.http.FullHttpResponse
            if (r6 == 0) goto L25
            io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2Headers r5 = r4.toHttp2Headers(r5, r0)
            io.grpc.netty.shaded.io.netty.handler.codec.http2.DefaultHttp2HeadersFrame r6 = new io.grpc.netty.shaded.io.netty.handler.codec.http2.DefaultHttp2HeadersFrame
            r6.<init>(r5, r1)
            r7.add(r6)
            return
        L25:
            io.grpc.netty.shaded.io.netty.handler.codec.EncoderException r5 = new io.grpc.netty.shaded.io.netty.handler.codec.EncoderException
            java.lang.StringBuilder r6 = new java.lang.StringBuilder
            r6.<init>()
            io.grpc.netty.shaded.io.netty.handler.codec.http.HttpResponseStatus r7 = io.grpc.netty.shaded.io.netty.handler.codec.http.HttpResponseStatus.CONTINUE
            java.lang.String r7 = r7.toString()
            r6.append(r7)
            java.lang.String r7 = " must be a FullHttpResponse"
            r6.append(r7)
            java.lang.String r6 = r6.toString()
            r5.<init>(r6)
            throw r5
        L42:
            boolean r0 = r6 instanceof io.grpc.netty.shaded.io.netty.handler.codec.http.HttpMessage
            if (r0 == 0) goto L73
            r0 = r6
            io.grpc.netty.shaded.io.netty.handler.codec.http.HttpMessage r0 = (io.grpc.netty.shaded.io.netty.handler.codec.http.HttpMessage) r0
            io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2Headers r5 = r4.toHttp2Headers(r5, r0)
            boolean r0 = r6 instanceof io.grpc.netty.shaded.io.netty.handler.codec.http.FullHttpMessage
            if (r0 == 0) goto L6a
            r0 = r6
            io.grpc.netty.shaded.io.netty.handler.codec.http.FullHttpMessage r0 = (io.grpc.netty.shaded.io.netty.handler.codec.http.FullHttpMessage) r0
            io.grpc.netty.shaded.io.netty.buffer.ByteBuf r2 = r0.content()
            boolean r2 = r2.isReadable()
            if (r2 != 0) goto L6a
            io.grpc.netty.shaded.io.netty.handler.codec.http.HttpHeaders r0 = r0.trailingHeaders()
            boolean r0 = r0.isEmpty()
            if (r0 == 0) goto L6a
            r0 = 1
            goto L6b
        L6a:
            r0 = 0
        L6b:
            io.grpc.netty.shaded.io.netty.handler.codec.http2.DefaultHttp2HeadersFrame r2 = new io.grpc.netty.shaded.io.netty.handler.codec.http2.DefaultHttp2HeadersFrame
            r2.<init>(r5, r0)
            r7.add(r2)
        L73:
            boolean r5 = r6 instanceof io.grpc.netty.shaded.io.netty.handler.codec.http.LastHttpContent
            if (r5 == 0) goto L7d
            io.grpc.netty.shaded.io.netty.handler.codec.http.LastHttpContent r6 = (io.grpc.netty.shaded.io.netty.handler.codec.http.LastHttpContent) r6
            r4.encodeLastContent(r6, r7)
            goto L93
        L7d:
            boolean r5 = r6 instanceof io.grpc.netty.shaded.io.netty.handler.codec.http.HttpContent
            if (r5 == 0) goto L93
            io.grpc.netty.shaded.io.netty.handler.codec.http.HttpContent r6 = (io.grpc.netty.shaded.io.netty.handler.codec.http.HttpContent) r6
            io.grpc.netty.shaded.io.netty.handler.codec.http2.DefaultHttp2DataFrame r5 = new io.grpc.netty.shaded.io.netty.handler.codec.http2.DefaultHttp2DataFrame
            io.grpc.netty.shaded.io.netty.buffer.ByteBuf r6 = r6.content()
            io.grpc.netty.shaded.io.netty.buffer.ByteBuf r6 = r6.retain()
            r5.<init>(r6, r1)
            r7.add(r5)
        L93:
            return
        */
        throw new UnsupportedOperationException("Method not decompiled: io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2StreamFrameToHttpObjectCodec.encode2(io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext, io.grpc.netty.shaded.io.netty.handler.codec.http.HttpObject, java.util.List):void");
    }

    private Http2Headers toHttp2Headers(ChannelHandlerContext channelHandlerContext, HttpMessage httpMessage) {
        if (httpMessage instanceof HttpRequest) {
            httpMessage.headers().set(HttpConversionUtil.ExtensionHeaderNames.SCHEME.text(), connectionScheme(channelHandlerContext));
        }
        return HttpConversionUtil.toHttp2Headers(httpMessage, this.validateHeaders);
    }

    private HttpMessage newMessage(int i, Http2Headers http2Headers) throws Http2Exception {
        if (this.isServer) {
            return HttpConversionUtil.toHttpRequest(i, http2Headers, this.validateHeaders);
        }
        return HttpConversionUtil.toHttpResponse(i, http2Headers, this.validateHeaders);
    }

    private FullHttpMessage newFullMessage(int i, Http2Headers http2Headers, ByteBufAllocator byteBufAllocator) throws Http2Exception {
        if (this.isServer) {
            return HttpConversionUtil.toFullHttpRequest(i, http2Headers, byteBufAllocator, this.validateHeaders);
        }
        return HttpConversionUtil.toFullHttpResponse(i, http2Headers, byteBufAllocator, this.validateHeaders);
    }

    @Override // io.grpc.netty.shaded.io.netty.channel.ChannelHandlerAdapter, io.grpc.netty.shaded.io.netty.channel.ChannelHandler
    public void handlerAdded(ChannelHandlerContext channelHandlerContext) throws Exception {
        super.handlerAdded(channelHandlerContext);
        Attribute<HttpScheme> attributeConnectionSchemeAttribute = connectionSchemeAttribute(channelHandlerContext);
        if (attributeConnectionSchemeAttribute.get() == null) {
            attributeConnectionSchemeAttribute.set(isSsl(channelHandlerContext) ? HttpScheme.HTTPS : HttpScheme.HTTP);
        }
    }

    protected boolean isSsl(ChannelHandlerContext channelHandlerContext) {
        return connectionChannel(channelHandlerContext).pipeline().get(SslHandler.class) != null;
    }

    private static HttpScheme connectionScheme(ChannelHandlerContext channelHandlerContext) {
        HttpScheme httpScheme = connectionSchemeAttribute(channelHandlerContext).get();
        return httpScheme == null ? HttpScheme.HTTP : httpScheme;
    }

    private static Attribute<HttpScheme> connectionSchemeAttribute(ChannelHandlerContext channelHandlerContext) {
        return connectionChannel(channelHandlerContext).attr(SCHEME_ATTR_KEY);
    }

    private static Channel connectionChannel(ChannelHandlerContext channelHandlerContext) {
        Channel channel = channelHandlerContext.channel();
        return channel instanceof Http2StreamChannel ? channel.parent() : channel;
    }
}
