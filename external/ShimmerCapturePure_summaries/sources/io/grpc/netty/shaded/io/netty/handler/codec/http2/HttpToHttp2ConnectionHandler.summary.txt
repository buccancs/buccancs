// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/io/grpc/netty/shaded/io/netty/handler/codec/http2/HttpToHttp2ConnectionHandler.java
// Size: 10355 bytes
// Modified: 2025-10-21 16:32:13.593729200 +0100

package io.grpc.netty.shaded.io.netty.handler.codec.http2;

import io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext;
import io.grpc.netty.shaded.io.netty.handler.codec.http.HttpHeaders;
import io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2CodecUtil;
import io.grpc.netty.shaded.io.netty.handler.codec.http2.HttpConversionUtil;

/* loaded from: classes3.dex */
public class HttpToHttp2ConnectionHandler extends Http2ConnectionHandler {
    private int currentStreamId;
    private final boolean validateHeaders;

    protected HttpToHttp2ConnectionHandler(Http2ConnectionDecoder http2ConnectionDecoder, Http2ConnectionEncoder http2ConnectionEncoder, Http2Settings http2Settings, boolean z) {
        super(http2ConnectionDecoder, http2ConnectionEncoder, http2Settings);
        this.validateHeaders = z;
    }

    protected HttpToHttp2ConnectionHandler(Http2ConnectionDecoder http2ConnectionDecoder, Http2ConnectionEncoder http2ConnectionEncoder, Http2Settings http2Settings, boolean z, boolean z2) {
        super(http2ConnectionDecoder, http2ConnectionEncoder, http2Settings, z2);
        this.validateHeaders = z;
    }

    private int getStreamId(HttpHeaders httpHeaders) throws Exception {
        return httpHeaders.getInt(HttpConversionUtil.ExtensionHeaderNames.STREAM_ID.text(), connection().local().incrementAndGetNextStreamId());
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* JADX WARN: Removed duplicated region for block: B:19:0x0059 A[Catch: all -> 0x00ab, TryCatch #1 {all -> 0x00ab, blocks: (B:9:0x001a, B:11:0x0023, B:13:0x003a, B:17:0x004a, B:19:0x0059, B:21:0x005d, B:23:0x0065, B:25:0x0079, B:27:0x0082, B:31:0x008b), top: B:52:0x001a }] */
    /* JADX WARN: Removed duplicated region for block: B:42:0x00b5 A[DONT_GENERATE] */
    /* JADX WARN: Type inference failed for: r1v15, types: [io.grpc.netty.shaded.io.netty.handler.codec.http.HttpHeaders] */
    /* JADX WARN: Type inference failed for: r2v7, types: [io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2Headers] */
    @Override // io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2ConnectionHandler, io.grpc.netty.shaded.io.netty.channel.ChannelOutboundHandler
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public void write(io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext r13, java.lang.Object r14, io.grpc.netty.shaded.io.netty.channel.ChannelPromise r15) {
        /*
            r12 = this;
            boolean r0 = r14 instanceof io.grpc.netty.shaded.io.netty.handler.codec.http.HttpMessage
            if (r0 != 0) goto Lc
            boolean r0 = r14 instanceof io.grpc.netty.shaded.io.netty.handler.codec.http.HttpContent
            if (r0 != 0) goto Lc
            r13.write(r14, r15)
            return
        Lc:
            io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator r0 = new io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator
            io.grpc.netty.shaded.io.netty.channel.Channel r1 = r13.channel()
            io.grpc.netty.shaded.io.netty.util.concurrent.EventExecutor r2 = r13.executor()
            r0.<init>(r15, r1, r2)
            r15 = 1
            io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2ConnectionEncoder r8 = r12.encoder()     // Catch: java.lang.Throwable -> Lab
            boolean r1 = r14 instanceof io.grpc.netty.shaded.io.netty.handler.codec.http.HttpMessage     // Catch: java.lang.Throwable -> Lab
            r9 = 0
            if (r1 == 0) goto L59
            r1 = r14
            io.grpc.netty.shaded.io.netty.handler.codec.http.HttpMessage r1 = (io.grpc.netty.shaded.io.netty.handler.codec.http.HttpMessage) r1     // Catch: java.lang.Throwable -> Lab
            io.grpc.netty.shaded.io.netty.handler.codec.http.HttpHeaders r2 = r1.headers()     // Catch: java.lang.Throwable -> Lab
            int r2 = r12.getStreamId(r2)     // Catch: java.lang.Throwable -> Lab
            r12.currentStreamId = r2     // Catch: java.lang.Throwable -> Lab
            boolean r2 = r12.validateHeaders     // Catch: java.lang.Throwable -> Lab
            io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2Headers r5 = io.grpc.netty.shaded.io.netty.handler.codec.http2.HttpConversionUtil.toHttp2Headers(r1, r2)     // Catch: java.lang.Throwable -> Lab
            boolean r2 = r14 instanceof io.grpc.netty.shaded.io.netty.handler.codec.http.FullHttpMessage     // Catch: java.lang.Throwable -> Lab
            if (r2 == 0) goto L49
            r2 = r14
            io.grpc.netty.shaded.io.netty.handler.codec.http.FullHttpMessage r2 = (io.grpc.netty.shaded.io.netty.handler.codec.http.FullHttpMessage) r2     // Catch: java.lang.Throwable -> Lab
            io.grpc.netty.shaded.io.netty.buffer.ByteBuf r2 = r2.content()     // Catch: java.lang.Throwable -> Lab
            boolean r2 = r2.isReadable()     // Catch: java.lang.Throwable -> Lab
            if (r2 != 0) goto L49
            r10 = 1
            goto L4a
        L49:
            r10 = 0
        L4a:
            int r3 = r12.currentStreamId     // Catch: java.lang.Throwable -> Lab
            io.grpc.netty.shaded.io.netty.handler.codec.http.HttpHeaders r4 = r1.headers()     // Catch: java.lang.Throwable -> Lab
            r1 = r13
            r2 = r8
            r6 = r10
            r7 = r0
            writeHeaders(r1, r2, r3, r4, r5, r6, r7)     // Catch: java.lang.Throwable -> Lab
            if (r10 != 0) goto Lb5
        L59:
            boolean r1 = r14 instanceof io.grpc.netty.shaded.io.netty.handler.codec.http.HttpContent     // Catch: java.lang.Throwable -> Lab
            if (r1 == 0) goto Lb5
            io.grpc.netty.shaded.io.netty.handler.codec.http.EmptyHttpHeaders r1 = io.grpc.netty.shaded.io.netty.handler.codec.http.EmptyHttpHeaders.INSTANCE     // Catch: java.lang.Throwable -> Lab
            io.grpc.netty.shaded.io.netty.handler.codec.http2.EmptyHttp2Headers r2 = io.grpc.netty.shaded.io.netty.handler.codec.http2.EmptyHttp2Headers.INSTANCE     // Catch: java.lang.Throwable -> Lab
            boolean r3 = r14 instanceof io.grpc.netty.shaded.io.netty.handler.codec.http.LastHttpContent     // Catch: java.lang.Throwable -> Lab
            if (r3 == 0) goto L76
            r1 = r14
            io.grpc.netty.shaded.io.netty.handler.codec.http.LastHttpContent r1 = (io.grpc.netty.shaded.io.netty.handler.codec.http.LastHttpContent) r1     // Catch: java.lang.Throwable -> Lab
            io.grpc.netty.shaded.io.netty.handler.codec.http.HttpHeaders r1 = r1.trailingHeaders()     // Catch: java.lang.Throwable -> Lab
            boolean r2 = r12.validateHeaders     // Catch: java.lang.Throwable -> Lab
            io.grpc.netty.shaded.io.netty.handler.codec.http2.Http2Headers r2 = io.grpc.netty.shaded.io.netty.handler.codec.http2.HttpConversionUtil.toHttp2Headers(r1, r2)     // Catch: java.lang.Throwable -> Lab
            r10 = r1
            r11 = r2
            r1 = 1
            goto L79
        L76:
            r10 = r1
            r11 = r2
            r1 = 0
        L79:
            r2 = r14
            io.grpc.netty.shaded.io.netty.handler.codec.http.HttpContent r2 = (io.grpc.netty.shaded.io.netty.handler.codec.http.HttpContent) r2     // Catch: java.lang.Throwable -> Lab
            io.grpc.netty.shaded.io.netty.buffer.ByteBuf r4 = r2.content()     // Catch: java.lang.Throwable -> Lab
            if (r1 == 0) goto L8a
            boolean r1 = r10.isEmpty()     // Catch: java.lang.Throwable -> Lab
            if (r1 == 0) goto L8a
            r6 = 1
            goto L8b
        L8a:
            r6 = 0
        L8b:
            int r3 = r12.currentStreamId     // Catch: java.lang.Throwable -> Lab
            r5 = 0
            io.grpc.netty.shaded.io.netty.channel.ChannelPromise r7 = r0.newPromise()     // Catch: java.lang.Throwable -> Lab
            r1 = r8
            r2 = r13
            r1.writeData(r2, r3, r4, r5, r6, r7)     // Catch: java.lang.Throwable -> Lab
            boolean r1 = r10.isEmpty()     // Catch: java.lang.Throwable -> La9
            if (r1 != 0) goto Lb8
            int r3 = r12.currentStreamId     // Catch: java.lang.Throwable -> La9
            r6 = 1
            r1 = r13
            r2 = r8
            r4 = r10
            r5 = r11
            r7 = r0
            writeHeaders(r1, r2, r3, r4, r5, r6, r7)     // Catch: java.lang.Throwable -> La9
            goto Lb8
        La9:
            r1 = move-exception
            goto Lad
        Lab:
            r1 = move-exception
            r9 = 1
        Lad:
            r12.onError(r13, r15, r1)     // Catch: java.lang.Throwable -> Lbc
            r0.setFailure(r1)     // Catch: java.lang.Throwable -> Lbc
            if (r9 == 0) goto Lb8
        Lb5:
            io.grpc.netty.shaded.io.netty.util.ReferenceCountUtil.release(r14)
        Lb8:
            r0.doneAllocatingPromises()
            return
        Lbc:
            r13 = move-exception
            if (r9 == 0) goto Lc2
            io.grpc.netty.shaded.io.netty.util.ReferenceCountUtil.release(r14)
        Lc2:
            r0.doneAllocatingPromises()
            throw r13
        */
        throw new UnsupportedOperationException("Method not decompiled: io.grpc.netty.shaded.io.netty.handler.codec.http2.HttpToHttp2ConnectionHandler.write(io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext, java.lang.Object, io.grpc.netty.shaded.io.netty.channel.ChannelPromise):void");
    }

    private static void writeHeaders(ChannelHandlerContext channelHandlerContext, Http2ConnectionEncoder http2ConnectionEncoder, int i, HttpHeaders httpHeaders, Http2Headers http2Headers, boolean z, Http2CodecUtil.SimpleChannelPromiseAggregator simpleChannelPromiseAggregator) {
        http2ConnectionEncoder.writeHeaders(channelHandlerContext, i, http2Headers, httpHeaders.getInt(HttpConversionUtil.ExtensionHeaderNames.STREAM_DEPENDENCY_ID.text(), 0), httpHeaders.getShort(HttpConversionUtil.ExtensionHeaderNames.STREAM_WEIGHT.text(), (short) 16), false, 0, z, simpleChannelPromiseAggregator.newPromise());
    }
}
