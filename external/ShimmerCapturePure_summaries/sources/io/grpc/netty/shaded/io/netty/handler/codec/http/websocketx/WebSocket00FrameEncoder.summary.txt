// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/io/grpc/netty/shaded/io/netty/handler/codec/http/websocketx/WebSocket00FrameEncoder.java
// Size: 3180 bytes
// Modified: 2025-10-21 16:32:12.341086100 +0100

package io.grpc.netty.shaded.io.netty.handler.codec.http.websocketx;

import io.grpc.netty.shaded.io.netty.buffer.ByteBuf;
import io.grpc.netty.shaded.io.netty.buffer.Unpooled;
import io.grpc.netty.shaded.io.netty.channel.ChannelHandler;
import io.grpc.netty.shaded.io.netty.channel.ChannelHandlerContext;
import io.grpc.netty.shaded.io.netty.handler.codec.MessageToMessageEncoder;
import java.util.List;

@ChannelHandler.Sharable
/* loaded from: classes3.dex */
public class WebSocket00FrameEncoder extends MessageToMessageEncoder<WebSocketFrame> implements WebSocketFrameEncoder {
    private static final ByteBuf _0X00 = Unpooled.unreleasableBuffer(Unpooled.directBuffer(1, 1).writeByte(0));
    private static final ByteBuf _0XFF = Unpooled.unreleasableBuffer(Unpooled.directBuffer(1, 1).writeByte(-1));
    private static final ByteBuf _0XFF_0X00 = Unpooled.unreleasableBuffer(Unpooled.directBuffer(2, 2).writeByte(-1).writeByte(0));

    @Override // io.grpc.netty.shaded.io.netty.handler.codec.MessageToMessageEncoder
    protected /* bridge */ /* synthetic */ void encode(ChannelHandlerContext channelHandlerContext, WebSocketFrame webSocketFrame, List list) throws Exception {
        encode2(channelHandlerContext, webSocketFrame, (List<Object>) list);
    }

    /* renamed from: encode, reason: avoid collision after fix types in other method */
    protected void encode2(ChannelHandlerContext channelHandlerContext, WebSocketFrame webSocketFrame, List<Object> list) throws Exception {
        if (webSocketFrame instanceof TextWebSocketFrame) {
            ByteBuf byteBufContent = webSocketFrame.content();
            list.add(_0X00.duplicate());
            list.add(byteBufContent.retain());
            list.add(_0XFF.duplicate());
            return;
        }
        if (webSocketFrame instanceof CloseWebSocketFrame) {
            list.add(_0XFF_0X00.duplicate());
            return;
        }
        ByteBuf byteBufContent2 = webSocketFrame.content();
        int i = byteBufContent2.readableBytes();
        ByteBuf byteBufBuffer = channelHandlerContext.alloc().buffer(5);
        try {
            byteBufBuffer.writeByte(-128);
            int i2 = (i >>> 28) & 127;
            int i3 = (i >>> 14) & 127;
            int i4 = (i >>> 7) & 127;
            int i5 = i & 127;
            if (i2 != 0) {
                byteBufBuffer.writeByte(i2 | 128);
                byteBufBuffer.writeByte(i3 | 128);
                byteBufBuffer.writeByte(i4 | 128);
                byteBufBuffer.writeByte(i5);
            } else if (i3 != 0) {
                byteBufBuffer.writeByte(i3 | 128);
                byteBufBuffer.writeByte(i4 | 128);
                byteBufBuffer.writeByte(i5);
            } else if (i4 == 0) {
                byteBufBuffer.writeByte(i5);
            } else {
                byteBufBuffer.writeByte(i4 | 128);
                byteBufBuffer.writeByte(i5);
            }
            list.add(byteBufBuffer);
            list.add(byteBufContent2.retain());
        } catch (Throwable th) {
            byteBufBuffer.release();
            throw th;
        }
    }
}
