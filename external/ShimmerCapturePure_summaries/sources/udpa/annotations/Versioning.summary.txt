// Summary for: /mnt/c/dev/buccancs/external/ShimmerCapturePure/sources/udpa/annotations/Versioning.java
// Size: 27063 bytes
// Modified: 2025-10-21 16:32:14.631793500 +0100

package udpa.annotations;

import com.google.protobuf.AbstractParser;
import com.google.protobuf.ByteString;
import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.DescriptorProtos;
import com.google.protobuf.Descriptors;
import com.google.protobuf.ExtensionRegistry;
import com.google.protobuf.ExtensionRegistryLite;
import com.google.protobuf.GeneratedMessage;
import com.google.protobuf.GeneratedMessageV3;
import com.google.protobuf.InvalidProtocolBufferException;
import com.google.protobuf.Message;
import com.google.protobuf.MessageOrBuilder;
import com.google.protobuf.Parser;
import com.google.protobuf.UninitializedMessageException;
import com.google.protobuf.UnknownFieldSet;
import java.io.IOException;
import java.io.InputStream;
import java.nio.ByteBuffer;

/* loaded from: classes2.dex */
public final class Versioning {
    public static final int VERSIONING_FIELD_NUMBER = 7881811;
    private static Descriptors.FileDescriptor descriptor;
    private static final Descriptors.Descriptor internal_static_udpa_annotations_VersioningAnnotation_descriptor;
    private static final GeneratedMessageV3.FieldAccessorTable internal_static_udpa_annotations_VersioningAnnotation_fieldAccessorTable;
    public static final GeneratedMessage.GeneratedExtension<DescriptorProtos.MessageOptions, VersioningAnnotation> versioning;

    public interface VersioningAnnotationOrBuilder extends MessageOrBuilder {
        String getPreviousMessageType();

        ByteString getPreviousMessageTypeBytes();
    }

    public static Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }

    private Versioning() {
    }

    public static void registerAllExtensions(ExtensionRegistryLite extensionRegistryLite) {
        extensionRegistryLite.add(versioning);
    }

    public static void registerAllExtensions(ExtensionRegistry extensionRegistry) {
        registerAllExtensions((ExtensionRegistryLite) extensionRegistry);
    }

    public static final class VersioningAnnotation extends GeneratedMessageV3 implements VersioningAnnotationOrBuilder {
        private static final VersioningAnnotation DEFAULT_INSTANCE = new VersioningAnnotation();
        private static final Parser<VersioningAnnotation> PARSER = new AbstractParser<VersioningAnnotation>() { // from class: udpa.annotations.Versioning.VersioningAnnotation.1
            public VersioningAnnotation parsePartialFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
                return new VersioningAnnotation(codedInputStream, extensionRegistryLite);
            }
        };
        public static final int PREVIOUS_MESSAGE_TYPE_FIELD_NUMBER = 1;
        private static final long serialVersionUID = 0;
        private byte memoizedIsInitialized;
        private volatile Object previousMessageType_;

        public static VersioningAnnotation getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        public static Parser<VersioningAnnotation> parser() {
            return PARSER;
        }

        /* renamed from: getDefaultInstanceForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public VersioningAnnotation m40679getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

        public Parser<VersioningAnnotation> getParserForType() {
            return PARSER;
        }

        public final boolean isInitialized() {
            byte b = this.memoizedIsInitialized;
            if (b == 1) {
                return true;
            }
            if (b == 0) {
                return false;
            }
            this.memoizedIsInitialized = (byte) 1;
            return true;
        }

        private VersioningAnnotation(GeneratedMessageV3.Builder<?> builder) {
            super(builder);
            this.memoizedIsInitialized = (byte) -1;
        }

        private VersioningAnnotation() {
            this.memoizedIsInitialized = (byte) -1;
            this.previousMessageType_ = "";
        }

        protected Object newInstance(GeneratedMessageV3.UnusedPrivateParameter unusedPrivateParameter) {
            return new VersioningAnnotation();
        }

        public final UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private VersioningAnnotation(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            this();
            extensionRegistryLite.getClass();
            UnknownFieldSet.Builder builderNewBuilder = UnknownFieldSet.newBuilder();
            boolean z = false;
            while (!z) {
                try {
                    try {
                        int tag = codedInputStream.readTag();
                        if (tag != 0) {
                            if (tag == 10) {
                                this.previousMessageType_ = codedInputStream.readStringRequireUtf8();
                            } else if (!parseUnknownField(codedInputStream, builderNewBuilder, extensionRegistryLite, tag)) {
                            }
                        }
                        z = true;
                    } catch (InvalidProtocolBufferException e) {
                        throw e.setUnfinishedMessage(this);
                    } catch (IOException e2) {
                        throw new InvalidProtocolBufferException(e2).setUnfinishedMessage(this);
                    }
                } finally {
                    this.unknownFields = builderNewBuilder.build();
                    makeExtensionsImmutable();
                }
            }
        }

        public static final Descriptors.Descriptor getDescriptor() {
            return Versioning.internal_static_udpa_annotations_VersioningAnnotation_descriptor;
        }

        protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
            return Versioning.internal_static_udpa_annotations_VersioningAnnotation_fieldAccessorTable.ensureFieldAccessorsInitialized(VersioningAnnotation.class, Builder.class);
        }

        @Override // udpa.annotations.Versioning.VersioningAnnotationOrBuilder
        public String getPreviousMessageType() {
            Object obj = this.previousMessageType_;
            if (obj instanceof String) {
                return (String) obj;
            }
            String stringUtf8 = ((ByteString) obj).toStringUtf8();
            this.previousMessageType_ = stringUtf8;
            return stringUtf8;
        }

        @Override // udpa.annotations.Versioning.VersioningAnnotationOrBuilder
        public ByteString getPreviousMessageTypeBytes() {
            Object obj = this.previousMessageType_;
            if (obj instanceof String) {
                ByteString byteStringCopyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                this.previousMessageType_ = byteStringCopyFromUtf8;
                return byteStringCopyFromUtf8;
            }
            return (ByteString) obj;
        }

        public void writeTo(CodedOutputStream codedOutputStream) throws IOException {
            if (!getPreviousMessageTypeBytes().isEmpty()) {
                GeneratedMessageV3.writeString(codedOutputStream, 1, this.previousMessageType_);
            }
            this.unknownFields.writeTo(codedOutputStream);
        }

        public int getSerializedSize() {
            int i = this.memoizedSize;
            if (i != -1) {
                return i;
            }
            int iComputeStringSize = (!getPreviousMessageTypeBytes().isEmpty() ? GeneratedMessageV3.computeStringSize(1, this.previousMessageType_) : 0) + this.unknownFields.getSerializedSize();
            this.memoizedSize = iComputeStringSize;
            return iComputeStringSize;
        }

        public boolean equals(Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof VersioningAnnotation)) {
                return super.equals(obj);
            }
            VersioningAnnotation versioningAnnotation = (VersioningAnnotation) obj;
            return getPreviousMessageType().equals(versioningAnnotation.getPreviousMessageType()) && this.unknownFields.equals(versioningAnnotation.unknownFields);
        }

        public int hashCode() {
            if (this.memoizedHashCode != 0) {
                return this.memoizedHashCode;
            }
            int iHashCode = ((((((779 + getDescriptor().hashCode()) * 37) + 1) * 53) + getPreviousMessageType().hashCode()) * 29) + this.unknownFields.hashCode();
            this.memoizedHashCode = iHashCode;
            return iHashCode;
        }

        public static VersioningAnnotation parseFrom(ByteBuffer byteBuffer) throws InvalidProtocolBufferException {
            return (VersioningAnnotation) PARSER.parseFrom(byteBuffer);
        }

        public static VersioningAnnotation parseFrom(ByteBuffer byteBuffer, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (VersioningAnnotation) PARSER.parseFrom(byteBuffer, extensionRegistryLite);
        }

        public static VersioningAnnotation parseFrom(ByteString byteString) throws InvalidProtocolBufferException {
            return (VersioningAnnotation) PARSER.parseFrom(byteString);
        }

        public static VersioningAnnotation parseFrom(ByteString byteString, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (VersioningAnnotation) PARSER.parseFrom(byteString, extensionRegistryLite);
        }

        public static VersioningAnnotation parseFrom(byte[] bArr) throws InvalidProtocolBufferException {
            return (VersioningAnnotation) PARSER.parseFrom(bArr);
        }

        public static VersioningAnnotation parseFrom(byte[] bArr, ExtensionRegistryLite extensionRegistryLite) throws InvalidProtocolBufferException {
            return (VersioningAnnotation) PARSER.parseFrom(bArr, extensionRegistryLite);
        }

        public static VersioningAnnotation parseFrom(InputStream inputStream) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, inputStream);
        }

        public static VersioningAnnotation parseFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static VersioningAnnotation parseDelimitedFrom(InputStream inputStream) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream);
        }

        public static VersioningAnnotation parseDelimitedFrom(InputStream inputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return GeneratedMessageV3.parseDelimitedWithIOException(PARSER, inputStream, extensionRegistryLite);
        }

        public static VersioningAnnotation parseFrom(CodedInputStream codedInputStream) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream);
        }

        public static VersioningAnnotation parseFrom(CodedInputStream codedInputStream, ExtensionRegistryLite extensionRegistryLite) throws IOException {
            return GeneratedMessageV3.parseWithIOException(PARSER, codedInputStream, extensionRegistryLite);
        }

        /* renamed from: newBuilderForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m40681newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.m40684toBuilder();
        }

        public static Builder newBuilder(VersioningAnnotation versioningAnnotation) {
            return DEFAULT_INSTANCE.m40684toBuilder().mergeFrom(versioningAnnotation);
        }

        /* renamed from: toBuilder, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
        public Builder m40684toBuilder() {
            return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
        }

        /* JADX INFO: Access modifiers changed from: protected */
        public Builder newBuilderForType(GeneratedMessageV3.BuilderParent builderParent) {
            return new Builder(builderParent);
        }

        public static final class Builder extends GeneratedMessageV3.Builder<Builder> implements VersioningAnnotationOrBuilder {
            private Object previousMessageType_;

            public final boolean isInitialized() {
                return true;
            }

            public static final Descriptors.Descriptor getDescriptor() {
                return Versioning.internal_static_udpa_annotations_VersioningAnnotation_descriptor;
            }

            protected GeneratedMessageV3.FieldAccessorTable internalGetFieldAccessorTable() {
                return Versioning.internal_static_udpa_annotations_VersioningAnnotation_fieldAccessorTable.ensureFieldAccessorsInitialized(VersioningAnnotation.class, Builder.class);
            }

            private Builder() {
                this.previousMessageType_ = "";
                maybeForceBuilderInitialization();
            }

            private Builder(GeneratedMessageV3.BuilderParent builderParent) {
                super(builderParent);
                this.previousMessageType_ = "";
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                boolean unused = VersioningAnnotation.alwaysUseFieldBuilders;
            }

            /* renamed from: clear, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public Builder m40695clear() {
                super.clear();
                this.previousMessageType_ = "";
                return this;
            }

            public Descriptors.Descriptor getDescriptorForType() {
                return Versioning.internal_static_udpa_annotations_VersioningAnnotation_descriptor;
            }

            /* renamed from: getDefaultInstanceForType, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public VersioningAnnotation m40708getDefaultInstanceForType() {
                return VersioningAnnotation.getDefaultInstance();
            }

            /* JADX INFO: Thrown type has an unknown type hierarchy: com.google.protobuf.UninitializedMessageException */
            /* renamed from: build, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public VersioningAnnotation m40689build() throws UninitializedMessageException {
                VersioningAnnotation versioningAnnotationM40691buildPartial = m40691buildPartial();
                if (versioningAnnotationM40691buildPartial.isInitialized()) {
                    return versioningAnnotationM40691buildPartial;
                }
                throw newUninitializedMessageException(versioningAnnotationM40691buildPartial);
            }

            /* renamed from: buildPartial, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public VersioningAnnotation m40691buildPartial() {
                VersioningAnnotation versioningAnnotation = new VersioningAnnotation(this);
                versioningAnnotation.previousMessageType_ = this.previousMessageType_;
                onBuilt();
                return versioningAnnotation;
            }

            /* renamed from: clone, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public Builder m40706clone() {
                return (Builder) super.clone();
            }

            /* renamed from: setField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public Builder m40719setField(Descriptors.FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.setField(fieldDescriptor, obj);
            }

            /* renamed from: clearField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public Builder m40697clearField(Descriptors.FieldDescriptor fieldDescriptor) {
                return (Builder) super.clearField(fieldDescriptor);
            }

            /* renamed from: clearOneof, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public Builder m40700clearOneof(Descriptors.OneofDescriptor oneofDescriptor) {
                return (Builder) super.clearOneof(oneofDescriptor);
            }

            /* renamed from: setRepeatedField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public Builder m40721setRepeatedField(Descriptors.FieldDescriptor fieldDescriptor, int i, Object obj) {
                return (Builder) super.setRepeatedField(fieldDescriptor, i, obj);
            }

            /* renamed from: addRepeatedField, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public Builder m40687addRepeatedField(Descriptors.FieldDescriptor fieldDescriptor, Object obj) {
                return (Builder) super.addRepeatedField(fieldDescriptor, obj);
            }

            /* renamed from: mergeFrom, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public Builder m40712mergeFrom(Message message) {
                if (message instanceof VersioningAnnotation) {
                    return mergeFrom((VersioningAnnotation) message);
                }
                super.mergeFrom(message);
                return this;
            }

            public Builder mergeFrom(VersioningAnnotation versioningAnnotation) {
                if (versioningAnnotation == VersioningAnnotation.getDefaultInstance()) {
                    return this;
                }
                if (!versioningAnnotation.getPreviousMessageType().isEmpty()) {
                    this.previousMessageType_ = versioningAnnotation.previousMessageType_;
                    onChanged();
                }
                m40717mergeUnknownFields(versioningAnnotation.unknownFields);
                onChanged();
                return this;
            }

            /* JADX WARN: Removed duplicated region for block: B:16:0x0023  */
            /* renamed from: mergeFrom, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            /*
                Code decompiled incorrectly, please refer to instructions dump.
                To view partially-correct add '--show-bad-code' argument
            */
            public udpa.annotations.Versioning.VersioningAnnotation.Builder m40713mergeFrom(com.google.protobuf.CodedInputStream r3, com.google.protobuf.ExtensionRegistryLite r4) throws java.lang.Throwable {
                /*
                    r2 = this;
                    r0 = 0
                    com.google.protobuf.Parser r1 = udpa.annotations.Versioning.VersioningAnnotation.access$800()     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                    java.lang.Object r3 = r1.parsePartialFrom(r3, r4)     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                    udpa.annotations.Versioning$VersioningAnnotation r3 = (udpa.annotations.Versioning.VersioningAnnotation) r3     // Catch: java.lang.Throwable -> L11 com.google.protobuf.InvalidProtocolBufferException -> L13
                    if (r3 == 0) goto L10
                    r2.mergeFrom(r3)
                L10:
                    return r2
                L11:
                    r3 = move-exception
                    goto L21
                L13:
                    r3 = move-exception
                    com.google.protobuf.MessageLite r4 = r3.getUnfinishedMessage()     // Catch: java.lang.Throwable -> L11
                    udpa.annotations.Versioning$VersioningAnnotation r4 = (udpa.annotations.Versioning.VersioningAnnotation) r4     // Catch: java.lang.Throwable -> L11
                    java.io.IOException r3 = r3.unwrapIOException()     // Catch: java.lang.Throwable -> L1f
                    throw r3     // Catch: java.lang.Throwable -> L1f
                L1f:
                    r3 = move-exception
                    r0 = r4
                L21:
                    if (r0 == 0) goto L26
                    r2.mergeFrom(r0)
                L26:
                    throw r3
                */
                throw new UnsupportedOperationException("Method not decompiled: udpa.annotations.Versioning.VersioningAnnotation.Builder.m40713mergeFrom(com.google.protobuf.CodedInputStream, com.google.protobuf.ExtensionRegistryLite):udpa.annotations.Versioning$VersioningAnnotation$Builder");
            }

            @Override // udpa.annotations.Versioning.VersioningAnnotationOrBuilder
            public String getPreviousMessageType() {
                Object obj = this.previousMessageType_;
                if (!(obj instanceof String)) {
                    String stringUtf8 = ((ByteString) obj).toStringUtf8();
                    this.previousMessageType_ = stringUtf8;
                    return stringUtf8;
                }
                return (String) obj;
            }

            @Override // udpa.annotations.Versioning.VersioningAnnotationOrBuilder
            public ByteString getPreviousMessageTypeBytes() {
                Object obj = this.previousMessageType_;
                if (obj instanceof String) {
                    ByteString byteStringCopyFromUtf8 = ByteString.copyFromUtf8((String) obj);
                    this.previousMessageType_ = byteStringCopyFromUtf8;
                    return byteStringCopyFromUtf8;
                }
                return (ByteString) obj;
            }

            public Builder setPreviousMessageType(String str) {
                str.getClass();
                this.previousMessageType_ = str;
                onChanged();
                return this;
            }

            public Builder clearPreviousMessageType() {
                this.previousMessageType_ = VersioningAnnotation.getDefaultInstance().getPreviousMessageType();
                onChanged();
                return this;
            }

            public Builder setPreviousMessageTypeBytes(ByteString byteString) {
                byteString.getClass();
                VersioningAnnotation.checkByteStringIsUtf8(byteString);
                this.previousMessageType_ = byteString;
                onChanged();
                return this;
            }

            /* renamed from: setUnknownFields, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public final Builder m40723setUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.setUnknownFields(unknownFieldSet);
            }

            /* renamed from: mergeUnknownFields, reason: collision with other method in class and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] and merged with bridge method [inline-methods] */
            public final Builder m40717mergeUnknownFields(UnknownFieldSet unknownFieldSet) {
                return (Builder) super.mergeUnknownFields(unknownFieldSet);
            }
        }
    }

    static {
        GeneratedMessage.GeneratedExtension<DescriptorProtos.MessageOptions, VersioningAnnotation> generatedExtensionNewFileScopedGeneratedExtension = GeneratedMessage.newFileScopedGeneratedExtension(VersioningAnnotation.class, VersioningAnnotation.getDefaultInstance());
        versioning = generatedExtensionNewFileScopedGeneratedExtension;
        descriptor = Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(new String[]{"\n!udpa/annotations/versioning.proto\u0012\u0010udpa.annotations\u001a google/protobuf/descriptor.proto\"5\n\u0014VersioningAnnotation\u0012\u001d\n\u0015previous_message_type\u0018\u0001 \u0001(\t:^\n\nversioning\u0012\u001f.google.protobuf.MessageOptions\u0018Ó\u0088á\u0003 \u0001(\u000b2&.udpa.annotations.VersioningAnnotationb\u0006proto3"}, new Descriptors.FileDescriptor[]{DescriptorProtos.getDescriptor()});
        Descriptors.Descriptor descriptor2 = (Descriptors.Descriptor) getDescriptor().getMessageTypes().get(0);
        internal_static_udpa_annotations_VersioningAnnotation_descriptor = descriptor2;
        internal_static_udpa_annotations_VersioningAnnotation_fieldAccessorTable = new GeneratedMessageV3.FieldAccessorTable(descriptor2, new String[]{"PreviousMessageType"});
        generatedExtensionNewFileScopedGeneratedExtension.internalInit((Descriptors.FieldDescriptor) descriptor.getExtensions().get(0));
        DescriptorProtos.getDescriptor();
    }
}
