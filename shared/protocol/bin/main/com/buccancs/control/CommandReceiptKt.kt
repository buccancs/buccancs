// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: orchestration.proto

// Generated files should ignore deprecation warnings
@file:Suppress(
    "DEPRECATION"
)

package com.buccancs.control

@kotlin.jvm.JvmName(
    "-initializecommandReceipt"
)
public inline fun commandReceipt(
    block: com.buccancs.control.CommandReceiptKt.Dsl.() -> kotlin.Unit
): com.buccancs.control.CommandReceipt =
    com.buccancs.control.CommandReceiptKt.Dsl._create(
        com.buccancs.control.CommandReceipt.newBuilder()
    )
        .apply { block() }
        ._build()

/**
 * Protobuf type `com.buccancs.control.CommandReceipt`
 */
public object CommandReceiptKt {
    @kotlin.OptIn(
        com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class
    )
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
        private val _builder: com.buccancs.control.CommandReceipt.Builder
    ) {
        public companion object {
            @kotlin.jvm.JvmSynthetic
            @kotlin.PublishedApi
            internal fun _create(
                builder: com.buccancs.control.CommandReceipt.Builder
            ): Dsl =
                Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): com.buccancs.control.CommandReceipt =
            _builder.build()

        /**
         * `string command_id = 1;`
         */
        public var commandId: kotlin.String
            get() = _builder.getCommandId()
            set(value) {
                _builder.setCommandId(
                    value
                )
            }

        /**
         * `string command_id = 1;`
         */
        public fun clearCommandId() {
            _builder.clearCommandId()
        }

        /**
         * `string device_id = 2;`
         */
        public var deviceId: kotlin.String
            get() = _builder.getDeviceId()
            set(value) {
                _builder.setDeviceId(
                    value
                )
            }

        /**
         * `string device_id = 2;`
         */
        public fun clearDeviceId() {
            _builder.clearDeviceId()
        }

        /**
         * `bool success = 3;`
         */
        public var success: kotlin.Boolean
            get() = _builder.getSuccess()
            set(value) {
                _builder.setSuccess(
                    value
                )
            }

        /**
         * `bool success = 3;`
         */
        public fun clearSuccess() {
            _builder.clearSuccess()
        }

        /**
         * `string message = 4;`
         */
        public var message: kotlin.String
            get() = _builder.getMessage()
            set(value) {
                _builder.setMessage(
                    value
                )
            }

        /**
         * `string message = 4;`
         */
        public fun clearMessage() {
            _builder.clearMessage()
        }
    }
}

@kotlin.jvm.JvmSynthetic
public inline fun com.buccancs.control.CommandReceipt.copy(
    block: `com.buccancs.control`.CommandReceiptKt.Dsl.() -> kotlin.Unit
): com.buccancs.control.CommandReceipt =
    `com.buccancs.control`.CommandReceiptKt.Dsl._create(
        this.toBuilder()
    )
        .apply { block() }
        ._build()

