// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: orchestration.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.buccancs.control

@kotlin.jvm.JvmName("-initializedataTransferRequest")
public inline fun dataTransferRequest(block: com.buccancs.control.DataTransferRequestKt.Dsl.() -> kotlin.Unit): com.buccancs.control.DataTransferRequest =
  com.buccancs.control.DataTransferRequestKt.Dsl._create(com.buccancs.control.DataTransferRequest.newBuilder()).apply { block() }._build()
public object DataTransferRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.buccancs.control.DataTransferRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.buccancs.control.DataTransferRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.buccancs.control.DataTransferRequest = _builder.build()

        public var session: com.buccancs.control.SessionIdentifier
      get() = _builder.getSession()
      set(value) {
        _builder.setSession(value)
      }
        public fun clearSession() {
      _builder.clearSession()
    }
        public fun hasSession(): kotlin.Boolean {
      return _builder.hasSession()
    }

        public var deviceId: kotlin.String
      get() = _builder.getDeviceId()
      set(value) {
        _builder.setDeviceId(value)
      }
        public fun clearDeviceId() {
      _builder.clearDeviceId()
    }

        public var fileName: kotlin.String
      get() = _builder.getFileName()
      set(value) {
        _builder.setFileName(value)
      }
        public fun clearFileName() {
      _builder.clearFileName()
    }

        public var sizeBytes: kotlin.Long
      get() = _builder.getSizeBytes()
      set(value) {
        _builder.setSizeBytes(value)
      }
        public fun clearSizeBytes() {
      _builder.clearSizeBytes()
    }

        public var chunk: com.google.protobuf.ByteString
      get() = _builder.getChunk()
      set(value) {
        _builder.setChunk(value)
      }
        public fun clearChunk() {
      _builder.clearChunk()
    }

        public var endOfStream: kotlin.Boolean
      get() = _builder.getEndOfStream()
      set(value) {
        _builder.setEndOfStream(value)
      }
        public fun clearEndOfStream() {
      _builder.clearEndOfStream()
    }

        public var sha256: com.google.protobuf.ByteString
      get() = _builder.getSha256()
      set(value) {
        _builder.setSha256(value)
      }
        public fun clearSha256() {
      _builder.clearSha256()
    }

        public var mimeType: kotlin.String
      get() = _builder.getMimeType()
      set(value) {
        _builder.setMimeType(value)
      }
        public fun clearMimeType() {
      _builder.clearMimeType()
    }

        public var streamType: kotlin.String
      get() = _builder.getStreamType()
      set(value) {
        _builder.setStreamType(value)
      }
        public fun clearStreamType() {
      _builder.clearStreamType()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.buccancs.control.DataTransferRequest.copy(block: `com.buccancs.control`.DataTransferRequestKt.Dsl.() -> kotlin.Unit): com.buccancs.control.DataTransferRequest =
  `com.buccancs.control`.DataTransferRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.buccancs.control.DataTransferRequestOrBuilder.sessionOrNull: com.buccancs.control.SessionIdentifier?
  get() = if (hasSession()) getSession() else null

