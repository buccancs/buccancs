// Generated by the protocol buffer compiler. DO NOT EDIT!
@file:Suppress("DEPRECATION")
package com.buccancs.control

@kotlin.jvm.JvmName("-initializeeventMarkerRequest")
public inline fun eventMarkerRequest(block: com.buccancs.control.EventMarkerRequestKt.Dsl.() -> kotlin.Unit): com.buccancs.control.EventMarkerRequest =
  com.buccancs.control.EventMarkerRequestKt.Dsl._create(com.buccancs.control.EventMarkerRequest.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `com.buccancs.control.EventMarkerRequest`
 */
public object EventMarkerRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.buccancs.control.EventMarkerRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.buccancs.control.EventMarkerRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.buccancs.control.EventMarkerRequest = _builder.build()

    /**
     * `.com.buccancs.control.SessionIdentifier session = 1;`
     */
    public var session: com.buccancs.control.SessionIdentifier
      get() = _builder.getSession()
      set(value) {
        _builder.setSession(value)
      }
    /**
     * `.com.buccancs.control.SessionIdentifier session = 1;`
     */
    public fun clearSession() {
      _builder.clearSession()
    }
    /**
     * `.com.buccancs.control.SessionIdentifier session = 1;`
     * @return Whether the session field is set.
     */
    public fun hasSession(): kotlin.Boolean {
      return _builder.hasSession()
    }

    /**
     * `string marker_id = 2;`
     */
    public var markerId: kotlin.String
      get() = _builder.getMarkerId()
      set(value) {
        _builder.setMarkerId(value)
      }
    /**
     * `string marker_id = 2;`
     */
    public fun clearMarkerId() {
      _builder.clearMarkerId()
    }

    /**
     * `string description = 3;`
     */
    public var description: kotlin.String
      get() = _builder.getDescription()
      set(value) {
        _builder.setDescription(value)
      }
    /**
     * `string description = 3;`
     */
    public fun clearDescription() {
      _builder.clearDescription()
    }

    /**
     * `.com.buccancs.control.DeviceTarget targets = 4;`
     */
    public var targets: com.buccancs.control.DeviceTarget
      get() = _builder.getTargets()
      set(value) {
        _builder.setTargets(value)
      }
    /**
     * `.com.buccancs.control.DeviceTarget targets = 4;`
     */
    public fun clearTargets() {
      _builder.clearTargets()
    }
    /**
     * `.com.buccancs.control.DeviceTarget targets = 4;`
     * @return Whether the targets field is set.
     */
    public fun hasTargets(): kotlin.Boolean {
      return _builder.hasTargets()
    }

    /**
     * `int64 timestamp_epoch_ms = 5;`
     */
    public var timestampEpochMs: kotlin.Long
      get() = _builder.getTimestampEpochMs()
      set(value) {
        _builder.setTimestampEpochMs(value)
      }
    /**
     * `int64 timestamp_epoch_ms = 5;`
     */
    public fun clearTimestampEpochMs() {
      _builder.clearTimestampEpochMs()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.buccancs.control.EventMarkerRequest.copy(block: `com.buccancs.control`.EventMarkerRequestKt.Dsl.() -> kotlin.Unit): com.buccancs.control.EventMarkerRequest =
  `com.buccancs.control`.EventMarkerRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.buccancs.control.EventMarkerRequestOrBuilder.sessionOrNull: com.buccancs.control.SessionIdentifier?
  get() = if (hasSession()) getSession() else null

public val com.buccancs.control.EventMarkerRequestOrBuilder.targetsOrNull: com.buccancs.control.DeviceTarget?
  get() = if (hasTargets()) getTargets() else null

