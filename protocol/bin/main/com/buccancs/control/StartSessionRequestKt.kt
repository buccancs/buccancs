// Generated by the protocol buffer compiler. DO NOT EDIT!
@file:Suppress("DEPRECATION")

package com.buccancs.control

@kotlin.jvm.JvmName("-initializestartSessionRequest")
public inline fun startSessionRequest(block: com.buccancs.control.StartSessionRequestKt.Dsl.() -> kotlin.Unit): com.buccancs.control.StartSessionRequest =
    com.buccancs.control.StartSessionRequestKt.Dsl._create(com.buccancs.control.StartSessionRequest.newBuilder())
        .apply { block() }._build()

/**
 * Protobuf type `com.buccancs.control.StartSessionRequest`
 */
public object StartSessionRequestKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
        private val _builder: com.buccancs.control.StartSessionRequest.Builder
    ) {
        public companion object {
            @kotlin.jvm.JvmSynthetic
            @kotlin.PublishedApi
            internal fun _create(builder: com.buccancs.control.StartSessionRequest.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): com.buccancs.control.StartSessionRequest = _builder.build()

        /**
         * `.com.buccancs.control.SessionIdentifier session = 1;`
         */
        public var session: com.buccancs.control.SessionIdentifier
            get() = _builder.getSession()
            set(value) {
                _builder.setSession(value)
            }

        /**
         * `.com.buccancs.control.SessionIdentifier session = 1;`
         */
        public fun clearSession() {
            _builder.clearSession()
        }

        /**
         * `.com.buccancs.control.SessionIdentifier session = 1;`
         * @return Whether the session field is set.
         */
        public fun hasSession(): kotlin.Boolean {
            return _builder.hasSession()
        }

        /**
         * `int64 scheduled_epoch_ms = 2;`
         */
        public var scheduledEpochMs: kotlin.Long
            get() = _builder.getScheduledEpochMs()
            set(value) {
                _builder.setScheduledEpochMs(value)
            }

        /**
         * `int64 scheduled_epoch_ms = 2;`
         */
        public fun clearScheduledEpochMs() {
            _builder.clearScheduledEpochMs()
        }

        /**
         * `string operator_id = 3;`
         */
        public var operatorId: kotlin.String
            get() = _builder.getOperatorId()
            set(value) {
                _builder.setOperatorId(value)
            }

        /**
         * `string operator_id = 3;`
         */
        public fun clearOperatorId() {
            _builder.clearOperatorId()
        }

        /**
         * An uninstantiable, behaviorless type to represent the field in
         * generics.
         */
        @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
        public class SubjectIdsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()

        /**
         * `repeated string subject_ids = 4;`
         * @return A list containing the subjectIds.
         */
        public val subjectIds: com.google.protobuf.kotlin.DslList<kotlin.String, SubjectIdsProxy>
            @kotlin.jvm.JvmSynthetic
            get() = com.google.protobuf.kotlin.DslList(
                _builder.getSubjectIdsList()
            )

        /**
         * `repeated string subject_ids = 4;`
         * @param value The subjectIds to add.
         */
        @kotlin.jvm.JvmSynthetic
        @kotlin.jvm.JvmName("addSubjectIds")
        public fun com.google.protobuf.kotlin.DslList<kotlin.String, SubjectIdsProxy>.add(value: kotlin.String) {
            _builder.addSubjectIds(value)
        }

        /**
         * `repeated string subject_ids = 4;`
         * @param value The subjectIds to add.
         */
        @kotlin.jvm.JvmSynthetic
        @kotlin.jvm.JvmName("plusAssignSubjectIds")
        @Suppress("NOTHING_TO_INLINE")
        public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SubjectIdsProxy>.plusAssign(value: kotlin.String) {
            add(value)
        }

        /**
         * `repeated string subject_ids = 4;`
         * @param values The subjectIds to add.
         */
        @kotlin.jvm.JvmSynthetic
        @kotlin.jvm.JvmName("addAllSubjectIds")
        public fun com.google.protobuf.kotlin.DslList<kotlin.String, SubjectIdsProxy>.addAll(values: kotlin.collections.Iterable<kotlin.String>) {
            _builder.addAllSubjectIds(values)
        }

        /**
         * `repeated string subject_ids = 4;`
         * @param values The subjectIds to add.
         */
        @kotlin.jvm.JvmSynthetic
        @kotlin.jvm.JvmName("plusAssignAllSubjectIds")
        @Suppress("NOTHING_TO_INLINE")
        public inline operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SubjectIdsProxy>.plusAssign(values: kotlin.collections.Iterable<kotlin.String>) {
            addAll(values)
        }

        /**
         * `repeated string subject_ids = 4;`
         * @param index The index to set the value at.
         * @param value The subjectIds to set.
         */
        @kotlin.jvm.JvmSynthetic
        @kotlin.jvm.JvmName("setSubjectIds")
        public operator fun com.google.protobuf.kotlin.DslList<kotlin.String, SubjectIdsProxy>.set(
            index: kotlin.Int,
            value: kotlin.String
        ) {
            _builder.setSubjectIds(index, value)
        }

        /**
         * `repeated string subject_ids = 4;`
         */
        @kotlin.jvm.JvmSynthetic
        @kotlin.jvm.JvmName("clearSubjectIds")
        public fun com.google.protobuf.kotlin.DslList<kotlin.String, SubjectIdsProxy>.clear() {
            _builder.clearSubjectIds()
        }
    }
}

@kotlin.jvm.JvmSynthetic
public inline fun com.buccancs.control.StartSessionRequest.copy(block: `com.buccancs.control`.StartSessionRequestKt.Dsl.() -> kotlin.Unit): com.buccancs.control.StartSessionRequest =
    `com.buccancs.control`.StartSessionRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.buccancs.control.StartSessionRequestOrBuilder.sessionOrNull: com.buccancs.control.SessionIdentifier?
    get() = if (hasSession()) getSession() else null

