// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: orchestration.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.buccancs.control

@kotlin.jvm.JvmName("-initializecommandEnvelope")
public inline fun commandEnvelope(block: com.buccancs.control.CommandEnvelopeKt.Dsl.() -> kotlin.Unit): com.buccancs.control.CommandEnvelope =
  com.buccancs.control.CommandEnvelopeKt.Dsl._create(com.buccancs.control.CommandEnvelope.newBuilder()).apply { block() }._build()
public object CommandEnvelopeKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.buccancs.control.CommandEnvelope.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.buccancs.control.CommandEnvelope.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.buccancs.control.CommandEnvelope = _builder.build()

        public var commandId: kotlin.String
      get() = _builder.getCommandId()
      set(value) {
        _builder.setCommandId(value)
      }
        public fun clearCommandId() {
      _builder.clearCommandId()
    }

        public var sessionId: kotlin.String
      get() = _builder.getSessionId()
      set(value) {
        _builder.setSessionId(value)
      }
        public fun clearSessionId() {
      _builder.clearSessionId()
    }

        public var deviceId: kotlin.String
      get() = _builder.getDeviceId()
      set(value) {
        _builder.setDeviceId(value)
      }
        public fun clearDeviceId() {
      _builder.clearDeviceId()
    }

        public var issuedEpochMs: kotlin.Long
      get() = _builder.getIssuedEpochMs()
      set(value) {
        _builder.setIssuedEpochMs(value)
      }
        public fun clearIssuedEpochMs() {
      _builder.clearIssuedEpochMs()
    }

        public var executeEpochMs: kotlin.Long
      get() = _builder.getExecuteEpochMs()
      set(value) {
        _builder.setExecuteEpochMs(value)
      }
        public fun clearExecuteEpochMs() {
      _builder.clearExecuteEpochMs()
    }

        public var commandJson: kotlin.String
      get() = _builder.getCommandJson()
      set(value) {
        _builder.setCommandJson(value)
      }
        public fun clearCommandJson() {
      _builder.clearCommandJson()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.buccancs.control.CommandEnvelope.copy(block: `com.buccancs.control`.CommandEnvelopeKt.Dsl.() -> kotlin.Unit): com.buccancs.control.CommandEnvelope =
  `com.buccancs.control`.CommandEnvelopeKt.Dsl._create(this.toBuilder()).apply { block() }._build()

