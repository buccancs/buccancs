// Generated by the protocol buffer compiler. DO NOT EDIT!
@file:Suppress("DEPRECATION")

package com.buccancs.control

@kotlin.jvm.JvmName("-initializesensorSampleValue")
public inline fun sensorSampleValue(block: com.buccancs.control.SensorSampleValueKt.Dsl.() -> kotlin.Unit): com.buccancs.control.SensorSampleValue =
    com.buccancs.control.SensorSampleValueKt.Dsl._create(com.buccancs.control.SensorSampleValue.newBuilder())
        .apply { block() }._build()

/**
 * Protobuf type `com.buccancs.control.SensorSampleValue`
 */
public object SensorSampleValueKt {
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @com.google.protobuf.kotlin.ProtoDslMarker
    public class Dsl private constructor(
        private val _builder: com.buccancs.control.SensorSampleValue.Builder
    ) {
        public companion object {
            @kotlin.jvm.JvmSynthetic
            @kotlin.PublishedApi
            internal fun _create(builder: com.buccancs.control.SensorSampleValue.Builder): Dsl = Dsl(builder)
        }

        @kotlin.jvm.JvmSynthetic
        @kotlin.PublishedApi
        internal fun _build(): com.buccancs.control.SensorSampleValue = _builder.build()

        /**
         * `string key = 1;`
         */
        public var key: kotlin.String
            get() = _builder.getKey()
            set(value) {
                _builder.setKey(value)
            }

        /**
         * `string key = 1;`
         */
        public fun clearKey() {
            _builder.clearKey()
        }

        /**
         * `double value = 2;`
         */
        public var value: kotlin.Double
            get() = _builder.getValue()
            set(value) {
                _builder.setValue(value)
            }

        /**
         * `double value = 2;`
         */
        public fun clearValue() {
            _builder.clearValue()
        }
    }
}

@kotlin.jvm.JvmSynthetic
public inline fun com.buccancs.control.SensorSampleValue.copy(block: `com.buccancs.control`.SensorSampleValueKt.Dsl.() -> kotlin.Unit): com.buccancs.control.SensorSampleValue =
    `com.buccancs.control`.SensorSampleValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()

