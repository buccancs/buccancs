// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: orchestration.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.buccancs.control

@kotlin.jvm.JvmName("-initializesensorSampleValue")
public inline fun sensorSampleValue(block: com.buccancs.control.SensorSampleValueKt.Dsl.() -> kotlin.Unit): com.buccancs.control.SensorSampleValue =
  com.buccancs.control.SensorSampleValueKt.Dsl._create(com.buccancs.control.SensorSampleValue.newBuilder()).apply { block() }._build()
public object SensorSampleValueKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.buccancs.control.SensorSampleValue.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.buccancs.control.SensorSampleValue.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.buccancs.control.SensorSampleValue = _builder.build()

        public var key: kotlin.String
      get() = _builder.getKey()
      set(value) {
        _builder.setKey(value)
      }
        public fun clearKey() {
      _builder.clearKey()
    }

        public var value: kotlin.Double
      get() = _builder.getValue()
      set(value) {
        _builder.setValue(value)
      }
        public fun clearValue() {
      _builder.clearValue()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.buccancs.control.SensorSampleValue.copy(block: `com.buccancs.control`.SensorSampleValueKt.Dsl.() -> kotlin.Unit): com.buccancs.control.SensorSampleValue =
  `com.buccancs.control`.SensorSampleValueKt.Dsl._create(this.toBuilder()).apply { block() }._build()

