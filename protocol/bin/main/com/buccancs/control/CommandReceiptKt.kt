// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: orchestration.proto
// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.buccancs.control
@kotlin.jvm.JvmName("-initializecommandReceipt")
public inline fun commandReceipt(block: com.buccancs.control.CommandReceiptKt.Dsl.() -> kotlin.Unit): com.buccancs.control.CommandReceipt =
  com.buccancs.control.CommandReceiptKt.Dsl._create(com.buccancs.control.CommandReceipt.newBuilder()).apply { block() }._build()
public object CommandReceiptKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.buccancs.control.CommandReceipt.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.buccancs.control.CommandReceipt.Builder): Dsl = Dsl(builder)
    }
    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.buccancs.control.CommandReceipt = _builder.build()
        public var commandId: kotlin.String
      get() = _builder.getCommandId()
      set(value) {
        _builder.setCommandId(value)
      }
        public fun clearCommandId() {
      _builder.clearCommandId()
    }
        public var deviceId: kotlin.String
      get() = _builder.getDeviceId()
      set(value) {
        _builder.setDeviceId(value)
      }
        public fun clearDeviceId() {
      _builder.clearDeviceId()
    }
        public var success: kotlin.Boolean
      get() = _builder.getSuccess()
      set(value) {
        _builder.setSuccess(value)
      }
        public fun clearSuccess() {
      _builder.clearSuccess()
    }
        public var message: kotlin.String
      get() = _builder.getMessage()
      set(value) {
        _builder.setMessage(value)
      }
        public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.buccancs.control.CommandReceipt.copy(block: `com.buccancs.control`.CommandReceiptKt.Dsl.() -> kotlin.Unit): com.buccancs.control.CommandReceipt =
  `com.buccancs.control`.CommandReceiptKt.Dsl._create(this.toBuilder()).apply { block() }._build()
