// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: orchestration.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.buccancs.control

@kotlin.jvm.JvmName("-initializesyncSignalRequest")
public inline fun syncSignalRequest(block: com.buccancs.control.SyncSignalRequestKt.Dsl.() -> kotlin.Unit): com.buccancs.control.SyncSignalRequest =
  com.buccancs.control.SyncSignalRequestKt.Dsl._create(com.buccancs.control.SyncSignalRequest.newBuilder()).apply { block() }._build()
public object SyncSignalRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.buccancs.control.SyncSignalRequest.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.buccancs.control.SyncSignalRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.buccancs.control.SyncSignalRequest = _builder.build()

        public var session: com.buccancs.control.SessionIdentifier
      get() = _builder.getSession()
      set(value) {
        _builder.setSession(value)
      }
        public fun clearSession() {
      _builder.clearSession()
    }
        public fun hasSession(): kotlin.Boolean {
      return _builder.hasSession()
    }

        public var signalType: kotlin.String
      get() = _builder.getSignalType()
      set(value) {
        _builder.setSignalType(value)
      }
        public fun clearSignalType() {
      _builder.clearSignalType()
    }

        public var targets: com.buccancs.control.DeviceTarget
      get() = _builder.getTargets()
      set(value) {
        _builder.setTargets(value)
      }
        public fun clearTargets() {
      _builder.clearTargets()
    }
        public fun hasTargets(): kotlin.Boolean {
      return _builder.hasTargets()
    }

        public var scheduledEpochMs: kotlin.Long
      get() = _builder.getScheduledEpochMs()
      set(value) {
        _builder.setScheduledEpochMs(value)
      }
        public fun clearScheduledEpochMs() {
      _builder.clearScheduledEpochMs()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.buccancs.control.SyncSignalRequest.copy(block: `com.buccancs.control`.SyncSignalRequestKt.Dsl.() -> kotlin.Unit): com.buccancs.control.SyncSignalRequest =
  `com.buccancs.control`.SyncSignalRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.buccancs.control.SyncSignalRequestOrBuilder.sessionOrNull: com.buccancs.control.SessionIdentifier?
  get() = if (hasSession()) getSession() else null

public val com.buccancs.control.SyncSignalRequestOrBuilder.targetsOrNull: com.buccancs.control.DeviceTarget?
  get() = if (hasTargets()) getTargets() else null

